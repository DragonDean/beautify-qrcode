!(function (t, n) {
    'object' == typeof exports && 'undefined' != typeof module
        ? n(exports)
        : 'function' == typeof define && define.amd
        ? define(['exports'], n)
        : n(
              ((t =
                  'undefined' != typeof globalThis
                      ? globalThis
                      : t || self).beautifyQrcode = {})
          );
})(this, function (t) {
    'use strict';
    function n(t, n, e) {
        return (
            n in t
                ? Object.defineProperty(t, n, {
                      value: e,
                      enumerable: !0,
                      configurable: !0,
                      writable: !0,
                  })
                : (t[n] = e),
            t
        );
    }
    function e(t, n) {
        var e = Object.keys(t);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(t);
            n &&
                (r = r.filter(function (n) {
                    return Object.getOwnPropertyDescriptor(t, n).enumerable;
                })),
                e.push.apply(e, r);
        }
        return e;
    }
    function r(t) {
        for (var r = 1; r < arguments.length; r++) {
            var o = null != arguments[r] ? arguments[r] : {};
            r % 2
                ? e(Object(o), !0).forEach(function (e) {
                      n(t, e, o[e]);
                  })
                : Object.getOwnPropertyDescriptors
                ? Object.defineProperties(
                      t,
                      Object.getOwnPropertyDescriptors(o)
                  )
                : e(Object(o)).forEach(function (n) {
                      Object.defineProperty(
                          t,
                          n,
                          Object.getOwnPropertyDescriptor(o, n)
                      );
                  });
        }
        return t;
    }
    function o() {
        return (o =
            Object.assign ||
            function (t) {
                for (var n = 1; n < arguments.length; n++) {
                    var e = arguments[n];
                    for (var r in e)
                        Object.prototype.hasOwnProperty.call(e, r) &&
                            (t[r] = e[r]);
                }
                return t;
            }).apply(this, arguments);
    }
    function c(t, n) {
        for (var e = 0; e < n.length; e++) {
            var r = n[e];
            (r.enumerable = r.enumerable || !1),
                (r.configurable = !0),
                'value' in r && (r.writable = !0),
                Object.defineProperty(t, r.key, r);
        }
    }
    var a = Object.prototype.hasOwnProperty;
    function i(t, n) {
        return null != t && a.call(t, n);
    }
    var u = Array.isArray,
        s =
            'object' == typeof global &&
            global &&
            global.Object === Object &&
            global,
        f = 'object' == typeof self && self && self.Object === Object && self,
        l = s || f || Function('return this')(),
        h = l.Symbol,
        p = Object.prototype,
        d = p.hasOwnProperty,
        v = p.toString,
        y = h ? h.toStringTag : void 0;
    var g = Object.prototype.toString;
    var m = h ? h.toStringTag : void 0;
    function _(t) {
        return null == t
            ? void 0 === t
                ? '[object Undefined]'
                : '[object Null]'
            : m && m in Object(t)
            ? (function (t) {
                  var n = d.call(t, y),
                      e = t[y];
                  try {
                      t[y] = void 0;
                      var r = !0;
                  } catch (t) {}
                  var o = v.call(t);
                  return r && (n ? (t[y] = e) : delete t[y]), o;
              })(t)
            : (function (t) {
                  return g.call(t);
              })(t);
    }
    function b(t) {
        return null != t && 'object' == typeof t;
    }
    function k(t) {
        return 'symbol' == typeof t || (b(t) && '[object Symbol]' == _(t));
    }
    var w = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
        x = /^\w*$/;
    function F(t, n) {
        if (u(t)) return !1;
        var e = typeof t;
        return (
            !(
                'number' != e &&
                'symbol' != e &&
                'boolean' != e &&
                null != t &&
                !k(t)
            ) ||
            x.test(t) ||
            !w.test(t) ||
            (null != n && t in Object(n))
        );
    }
    function D(t) {
        var n = typeof t;
        return null != t && ('object' == n || 'function' == n);
    }
    function j(t) {
        if (!D(t)) return !1;
        var n = _(t);
        return (
            '[object Function]' == n ||
            '[object GeneratorFunction]' == n ||
            '[object AsyncFunction]' == n ||
            '[object Proxy]' == n
        );
    }
    var C,
        E = l['__core-js_shared__'],
        O = (C = /[^.]+$/.exec((E && E.keys && E.keys.IE_PROTO) || ''))
            ? 'Symbol(src)_1.' + C
            : '';
    var A = Function.prototype.toString;
    function S(t) {
        if (null != t) {
            try {
                return A.call(t);
            } catch (t) {}
            try {
                return t + '';
            } catch (t) {}
        }
        return '';
    }
    var P = /^\[object .+?Constructor\]$/,
        T = Function.prototype,
        M = Object.prototype,
        B = T.toString,
        L = M.hasOwnProperty,
        I = RegExp(
            '^' +
                B.call(L)
                    .replace(/[\\^$.*+?()[\]{}|]/g, '\\$&')
                    .replace(
                        /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                        '$1.*?'
                    ) +
                '$'
        );
    function R(t) {
        return !(!D(t) || ((n = t), O && O in n)) && (j(t) ? I : P).test(S(t));
        var n;
    }
    function z(t, n) {
        var e = (function (t, n) {
            return null == t ? void 0 : t[n];
        })(t, n);
        return R(e) ? e : void 0;
    }
    var $ = z(Object, 'create');
    var N = Object.prototype.hasOwnProperty;
    var q = Object.prototype.hasOwnProperty;
    function U(t) {
        var n = -1,
            e = null == t ? 0 : t.length;
        for (this.clear(); ++n < e; ) {
            var r = t[n];
            this.set(r[0], r[1]);
        }
    }
    function V(t, n) {
        return t === n || (t != t && n != n);
    }
    function G(t, n) {
        for (var e = t.length; e--; ) if (V(t[e][0], n)) return e;
        return -1;
    }
    (U.prototype.clear = function () {
        (this.__data__ = $ ? $(null) : {}), (this.size = 0);
    }),
        (U.prototype.delete = function (t) {
            var n = this.has(t) && delete this.__data__[t];
            return (this.size -= n ? 1 : 0), n;
        }),
        (U.prototype.get = function (t) {
            var n = this.__data__;
            if ($) {
                var e = n[t];
                return '__lodash_hash_undefined__' === e ? void 0 : e;
            }
            return N.call(n, t) ? n[t] : void 0;
        }),
        (U.prototype.has = function (t) {
            var n = this.__data__;
            return $ ? void 0 !== n[t] : q.call(n, t);
        }),
        (U.prototype.set = function (t, n) {
            var e = this.__data__;
            return (
                (this.size += this.has(t) ? 0 : 1),
                (e[t] = $ && void 0 === n ? '__lodash_hash_undefined__' : n),
                this
            );
        });
    var H = Array.prototype.splice;
    function K(t) {
        var n = -1,
            e = null == t ? 0 : t.length;
        for (this.clear(); ++n < e; ) {
            var r = t[n];
            this.set(r[0], r[1]);
        }
    }
    (K.prototype.clear = function () {
        (this.__data__ = []), (this.size = 0);
    }),
        (K.prototype.delete = function (t) {
            var n = this.__data__,
                e = G(n, t);
            return (
                !(e < 0) &&
                (e == n.length - 1 ? n.pop() : H.call(n, e, 1), --this.size, !0)
            );
        }),
        (K.prototype.get = function (t) {
            var n = this.__data__,
                e = G(n, t);
            return e < 0 ? void 0 : n[e][1];
        }),
        (K.prototype.has = function (t) {
            return G(this.__data__, t) > -1;
        }),
        (K.prototype.set = function (t, n) {
            var e = this.__data__,
                r = G(e, t);
            return r < 0 ? (++this.size, e.push([t, n])) : (e[r][1] = n), this;
        });
    var Y = z(l, 'Map');
    function Z(t, n) {
        var e,
            r,
            o = t.__data__;
        return (
            'string' == (r = typeof (e = n)) ||
            'number' == r ||
            'symbol' == r ||
            'boolean' == r
                ? '__proto__' !== e
                : null === e
        )
            ? o['string' == typeof n ? 'string' : 'hash']
            : o.map;
    }
    function J(t) {
        var n = -1,
            e = null == t ? 0 : t.length;
        for (this.clear(); ++n < e; ) {
            var r = t[n];
            this.set(r[0], r[1]);
        }
    }
    (J.prototype.clear = function () {
        (this.size = 0),
            (this.__data__ = {
                hash: new U(),
                map: new (Y || K)(),
                string: new U(),
            });
    }),
        (J.prototype.delete = function (t) {
            var n = Z(this, t).delete(t);
            return (this.size -= n ? 1 : 0), n;
        }),
        (J.prototype.get = function (t) {
            return Z(this, t).get(t);
        }),
        (J.prototype.has = function (t) {
            return Z(this, t).has(t);
        }),
        (J.prototype.set = function (t, n) {
            var e = Z(this, t),
                r = e.size;
            return e.set(t, n), (this.size += e.size == r ? 0 : 1), this;
        });
    function W(t, n) {
        if ('function' != typeof t || (null != n && 'function' != typeof n))
            throw new TypeError('Expected a function');
        var e = function () {
            var r = arguments,
                o = n ? n.apply(this, r) : r[0],
                c = e.cache;
            if (c.has(o)) return c.get(o);
            var a = t.apply(this, r);
            return (e.cache = c.set(o, a) || c), a;
        };
        return (e.cache = new (W.Cache || J)()), e;
    }
    W.Cache = J;
    var X,
        Q,
        tt,
        nt = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
        et = /\\(\\)?/g,
        rt =
            ((X = function (t) {
                var n = [];
                return (
                    46 === t.charCodeAt(0) && n.push(''),
                    t.replace(nt, function (t, e, r, o) {
                        n.push(r ? o.replace(et, '$1') : e || t);
                    }),
                    n
                );
            }),
            (Q = W(X, function (t) {
                return 500 === tt.size && tt.clear(), t;
            })),
            (tt = Q.cache),
            Q);
    function ot(t, n) {
        for (var e = -1, r = null == t ? 0 : t.length, o = Array(r); ++e < r; )
            o[e] = n(t[e], e, t);
        return o;
    }
    var ct = h ? h.prototype : void 0,
        at = ct ? ct.toString : void 0;
    function it(t) {
        if ('string' == typeof t) return t;
        if (u(t)) return ot(t, it) + '';
        if (k(t)) return at ? at.call(t) : '';
        var n = t + '';
        return '0' == n && 1 / t == -Infinity ? '-0' : n;
    }
    function ut(t) {
        return null == t ? '' : it(t);
    }
    function st(t, n) {
        return u(t) ? t : F(t, n) ? [t] : rt(ut(t));
    }
    function ft(t) {
        return b(t) && '[object Arguments]' == _(t);
    }
    var lt = Object.prototype,
        ht = lt.hasOwnProperty,
        pt = lt.propertyIsEnumerable,
        dt = ft(
            (function () {
                return arguments;
            })()
        )
            ? ft
            : function (t) {
                  return b(t) && ht.call(t, 'callee') && !pt.call(t, 'callee');
              },
        vt = /^(?:0|[1-9]\d*)$/;
    function yt(t, n) {
        var e = typeof t;
        return (
            !!(n = null == n ? 9007199254740991 : n) &&
            ('number' == e || ('symbol' != e && vt.test(t))) &&
            t > -1 &&
            t % 1 == 0 &&
            t < n
        );
    }
    function gt(t) {
        return (
            'number' == typeof t &&
            t > -1 &&
            t % 1 == 0 &&
            t <= 9007199254740991
        );
    }
    function mt(t) {
        if ('string' == typeof t || k(t)) return t;
        var n = t + '';
        return '0' == n && 1 / t == -Infinity ? '-0' : n;
    }
    function _t(t, n, e) {
        for (var r = -1, o = (n = st(n, t)).length, c = !1; ++r < o; ) {
            var a = mt(n[r]);
            if (!(c = null != t && e(t, a))) break;
            t = t[a];
        }
        return c || ++r != o
            ? c
            : !!(o = null == t ? 0 : t.length) &&
                  gt(o) &&
                  yt(a, o) &&
                  (u(t) || dt(t));
    }
    function bt(t, n) {
        return null != t && _t(t, n, i);
    }
    function kt(t) {
        var n = (this.__data__ = new K(t));
        this.size = n.size;
    }
    (kt.prototype.clear = function () {
        (this.__data__ = new K()), (this.size = 0);
    }),
        (kt.prototype.delete = function (t) {
            var n = this.__data__,
                e = n.delete(t);
            return (this.size = n.size), e;
        }),
        (kt.prototype.get = function (t) {
            return this.__data__.get(t);
        }),
        (kt.prototype.has = function (t) {
            return this.__data__.has(t);
        }),
        (kt.prototype.set = function (t, n) {
            var e = this.__data__;
            if (e instanceof K) {
                var r = e.__data__;
                if (!Y || r.length < 199)
                    return r.push([t, n]), (this.size = ++e.size), this;
                e = this.__data__ = new J(r);
            }
            return e.set(t, n), (this.size = e.size), this;
        });
    var wt = (function () {
        try {
            var t = z(Object, 'defineProperty');
            return t({}, '', {}), t;
        } catch (t) {}
    })();
    function xt(t, n, e) {
        '__proto__' == n && wt
            ? wt(t, n, {
                  configurable: !0,
                  enumerable: !0,
                  value: e,
                  writable: !0,
              })
            : (t[n] = e);
    }
    var Ft = Object.prototype.hasOwnProperty;
    function Dt(t, n, e) {
        var r = t[n];
        (Ft.call(t, n) && V(r, e) && (void 0 !== e || n in t)) || xt(t, n, e);
    }
    function jt(t, n, e, r) {
        var o = !e;
        e || (e = {});
        for (var c = -1, a = n.length; ++c < a; ) {
            var i = n[c],
                u = r ? r(e[i], t[i], i, e, t) : void 0;
            void 0 === u && (u = t[i]), o ? xt(e, i, u) : Dt(e, i, u);
        }
        return e;
    }
    var Ct = 'object' == typeof t && t && !t.nodeType && t,
        Et =
            Ct &&
            'object' == typeof module &&
            module &&
            !module.nodeType &&
            module,
        Ot = Et && Et.exports === Ct ? l.Buffer : void 0,
        At =
            (Ot ? Ot.isBuffer : void 0) ||
            function () {
                return !1;
            },
        St = {};
    function Pt(t) {
        return function (n) {
            return t(n);
        };
    }
    (St['[object Float32Array]'] = St['[object Float64Array]'] = St[
        '[object Int8Array]'
    ] = St['[object Int16Array]'] = St['[object Int32Array]'] = St[
        '[object Uint8Array]'
    ] = St['[object Uint8ClampedArray]'] = St['[object Uint16Array]'] = St[
        '[object Uint32Array]'
    ] = !0),
        (St['[object Arguments]'] = St['[object Array]'] = St[
            '[object ArrayBuffer]'
        ] = St['[object Boolean]'] = St['[object DataView]'] = St[
            '[object Date]'
        ] = St['[object Error]'] = St['[object Function]'] = St[
            '[object Map]'
        ] = St['[object Number]'] = St['[object Object]'] = St[
            '[object RegExp]'
        ] = St['[object Set]'] = St['[object String]'] = St[
            '[object WeakMap]'
        ] = !1);
    var Tt = 'object' == typeof t && t && !t.nodeType && t,
        Mt =
            Tt &&
            'object' == typeof module &&
            module &&
            !module.nodeType &&
            module,
        Bt = Mt && Mt.exports === Tt && s.process,
        Lt = (function () {
            try {
                var t = Mt && Mt.require && Mt.require('util').types;
                return t || (Bt && Bt.binding && Bt.binding('util'));
            } catch (t) {}
        })(),
        It = Lt && Lt.isTypedArray,
        Rt = It
            ? Pt(It)
            : function (t) {
                  return b(t) && gt(t.length) && !!St[_(t)];
              },
        zt = Object.prototype.hasOwnProperty;
    function $t(t, n) {
        var e = u(t),
            r = !e && dt(t),
            o = !e && !r && At(t),
            c = !e && !r && !o && Rt(t),
            a = e || r || o || c,
            i = a
                ? (function (t, n) {
                      for (var e = -1, r = Array(t); ++e < t; ) r[e] = n(e);
                      return r;
                  })(t.length, String)
                : [],
            s = i.length;
        for (var f in t)
            (!n && !zt.call(t, f)) ||
                (a &&
                    ('length' == f ||
                        (o && ('offset' == f || 'parent' == f)) ||
                        (c &&
                            ('buffer' == f ||
                                'byteLength' == f ||
                                'byteOffset' == f)) ||
                        yt(f, s))) ||
                i.push(f);
        return i;
    }
    var Nt = Object.prototype;
    function qt(t) {
        var n = t && t.constructor;
        return t === (('function' == typeof n && n.prototype) || Nt);
    }
    function Ut(t, n) {
        return function (e) {
            return t(n(e));
        };
    }
    var Vt = Ut(Object.keys, Object),
        Gt = Object.prototype.hasOwnProperty;
    function Ht(t) {
        return null != t && gt(t.length) && !j(t);
    }
    function Kt(t) {
        return Ht(t)
            ? $t(t)
            : (function (t) {
                  if (!qt(t)) return Vt(t);
                  var n = [];
                  for (var e in Object(t))
                      Gt.call(t, e) && 'constructor' != e && n.push(e);
                  return n;
              })(t);
    }
    var Yt = Object.prototype.hasOwnProperty;
    function Zt(t) {
        if (!D(t))
            return (function (t) {
                var n = [];
                if (null != t) for (var e in Object(t)) n.push(e);
                return n;
            })(t);
        var n = qt(t),
            e = [];
        for (var r in t)
            ('constructor' != r || (!n && Yt.call(t, r))) && e.push(r);
        return e;
    }
    function Jt(t) {
        return Ht(t) ? $t(t, !0) : Zt(t);
    }
    var Wt = 'object' == typeof t && t && !t.nodeType && t,
        Xt =
            Wt &&
            'object' == typeof module &&
            module &&
            !module.nodeType &&
            module,
        Qt = Xt && Xt.exports === Wt ? l.Buffer : void 0,
        tn = Qt ? Qt.allocUnsafe : void 0;
    function nn(t, n) {
        var e = -1,
            r = t.length;
        for (n || (n = Array(r)); ++e < r; ) n[e] = t[e];
        return n;
    }
    function en() {
        return [];
    }
    var rn = Object.prototype.propertyIsEnumerable,
        on = Object.getOwnPropertySymbols,
        cn = on
            ? function (t) {
                  return null == t
                      ? []
                      : ((t = Object(t)),
                        (function (t, n) {
                            for (
                                var e = -1,
                                    r = null == t ? 0 : t.length,
                                    o = 0,
                                    c = [];
                                ++e < r;

                            ) {
                                var a = t[e];
                                n(a, e, t) && (c[o++] = a);
                            }
                            return c;
                        })(on(t), function (n) {
                            return rn.call(t, n);
                        }));
              }
            : en;
    function an(t, n) {
        for (var e = -1, r = n.length, o = t.length; ++e < r; ) t[o + e] = n[e];
        return t;
    }
    var un = Ut(Object.getPrototypeOf, Object),
        sn = Object.getOwnPropertySymbols
            ? function (t) {
                  for (var n = []; t; ) an(n, cn(t)), (t = un(t));
                  return n;
              }
            : en;
    function fn(t, n, e) {
        var r = n(t);
        return u(t) ? r : an(r, e(t));
    }
    function ln(t) {
        return fn(t, Kt, cn);
    }
    function hn(t) {
        return fn(t, Jt, sn);
    }
    var pn = z(l, 'DataView'),
        dn = z(l, 'Promise'),
        vn = z(l, 'Set'),
        yn = z(l, 'WeakMap'),
        gn = '[object Map]',
        mn = '[object Promise]',
        _n = '[object Set]',
        bn = '[object WeakMap]',
        kn = '[object DataView]',
        wn = S(pn),
        xn = S(Y),
        Fn = S(dn),
        Dn = S(vn),
        jn = S(yn),
        Cn = _;
    ((pn && Cn(new pn(new ArrayBuffer(1))) != kn) ||
        (Y && Cn(new Y()) != gn) ||
        (dn && Cn(dn.resolve()) != mn) ||
        (vn && Cn(new vn()) != _n) ||
        (yn && Cn(new yn()) != bn)) &&
        (Cn = function (t) {
            var n = _(t),
                e = '[object Object]' == n ? t.constructor : void 0,
                r = e ? S(e) : '';
            if (r)
                switch (r) {
                    case wn:
                        return kn;
                    case xn:
                        return gn;
                    case Fn:
                        return mn;
                    case Dn:
                        return _n;
                    case jn:
                        return bn;
                }
            return n;
        });
    var En = Cn,
        On = Object.prototype.hasOwnProperty;
    var An = l.Uint8Array;
    function Sn(t) {
        var n = new t.constructor(t.byteLength);
        return new An(n).set(new An(t)), n;
    }
    var Pn = /\w*$/;
    var Tn = h ? h.prototype : void 0,
        Mn = Tn ? Tn.valueOf : void 0;
    function Bn(t, n, e) {
        var r,
            o = t.constructor;
        switch (n) {
            case '[object ArrayBuffer]':
                return Sn(t);
            case '[object Boolean]':
            case '[object Date]':
                return new o(+t);
            case '[object DataView]':
                return (function (t, n) {
                    var e = n ? Sn(t.buffer) : t.buffer;
                    return new t.constructor(e, t.byteOffset, t.byteLength);
                })(t, e);
            case '[object Float32Array]':
            case '[object Float64Array]':
            case '[object Int8Array]':
            case '[object Int16Array]':
            case '[object Int32Array]':
            case '[object Uint8Array]':
            case '[object Uint8ClampedArray]':
            case '[object Uint16Array]':
            case '[object Uint32Array]':
                return (function (t, n) {
                    var e = n ? Sn(t.buffer) : t.buffer;
                    return new t.constructor(e, t.byteOffset, t.length);
                })(t, e);
            case '[object Map]':
                return new o();
            case '[object Number]':
            case '[object String]':
                return new o(t);
            case '[object RegExp]':
                return (function (t) {
                    var n = new t.constructor(t.source, Pn.exec(t));
                    return (n.lastIndex = t.lastIndex), n;
                })(t);
            case '[object Set]':
                return new o();
            case '[object Symbol]':
                return (r = t), Mn ? Object(Mn.call(r)) : {};
        }
    }
    var Ln = Object.create,
        In = (function () {
            function t() {}
            return function (n) {
                if (!D(n)) return {};
                if (Ln) return Ln(n);
                t.prototype = n;
                var e = new t();
                return (t.prototype = void 0), e;
            };
        })();
    var Rn = Lt && Lt.isMap,
        zn = Rn
            ? Pt(Rn)
            : function (t) {
                  return b(t) && '[object Map]' == En(t);
              };
    var $n = Lt && Lt.isSet,
        Nn = $n
            ? Pt($n)
            : function (t) {
                  return b(t) && '[object Set]' == En(t);
              },
        qn = '[object Arguments]',
        Un = '[object Function]',
        Vn = '[object Object]',
        Gn = {};
    function Hn(t, n, e, r, o, c) {
        var a,
            i = 1 & n,
            s = 2 & n,
            f = 4 & n;
        if ((e && (a = o ? e(t, r, o, c) : e(t)), void 0 !== a)) return a;
        if (!D(t)) return t;
        var l = u(t);
        if (l) {
            if (
                ((a = (function (t) {
                    var n = t.length,
                        e = new t.constructor(n);
                    return (
                        n &&
                            'string' == typeof t[0] &&
                            On.call(t, 'index') &&
                            ((e.index = t.index), (e.input = t.input)),
                        e
                    );
                })(t)),
                !i)
            )
                return nn(t, a);
        } else {
            var h = En(t),
                p = h == Un || '[object GeneratorFunction]' == h;
            if (At(t))
                return (function (t, n) {
                    if (n) return t.slice();
                    var e = t.length,
                        r = tn ? tn(e) : new t.constructor(e);
                    return t.copy(r), r;
                })(t, i);
            if (h == Vn || h == qn || (p && !o)) {
                if (
                    ((a =
                        s || p
                            ? {}
                            : (function (t) {
                                  return 'function' != typeof t.constructor ||
                                      qt(t)
                                      ? {}
                                      : In(un(t));
                              })(t)),
                    !i)
                )
                    return s
                        ? (function (t, n) {
                              return jt(t, sn(t), n);
                          })(
                              t,
                              (function (t, n) {
                                  return t && jt(n, Jt(n), t);
                              })(a, t)
                          )
                        : (function (t, n) {
                              return jt(t, cn(t), n);
                          })(
                              t,
                              (function (t, n) {
                                  return t && jt(n, Kt(n), t);
                              })(a, t)
                          );
            } else {
                if (!Gn[h]) return o ? t : {};
                a = Bn(t, h, i);
            }
        }
        c || (c = new kt());
        var d = c.get(t);
        if (d) return d;
        c.set(t, a),
            Nn(t)
                ? t.forEach(function (r) {
                      a.add(Hn(r, n, e, r, t, c));
                  })
                : zn(t) &&
                  t.forEach(function (r, o) {
                      a.set(o, Hn(r, n, e, o, t, c));
                  });
        var v = f ? (s ? hn : ln) : s ? keysIn : Kt,
            y = l ? void 0 : v(t);
        return (
            (function (t, n) {
                for (
                    var e = -1, r = null == t ? 0 : t.length;
                    ++e < r && !1 !== n(t[e], e, t);

                );
            })(y || t, function (r, o) {
                y && (r = t[(o = r)]), Dt(a, o, Hn(r, n, e, o, t, c));
            }),
            a
        );
    }
    (Gn[qn] = Gn['[object Array]'] = Gn['[object ArrayBuffer]'] = Gn[
        '[object DataView]'
    ] = Gn['[object Boolean]'] = Gn['[object Date]'] = Gn[
        '[object Float32Array]'
    ] = Gn['[object Float64Array]'] = Gn['[object Int8Array]'] = Gn[
        '[object Int16Array]'
    ] = Gn['[object Int32Array]'] = Gn['[object Map]'] = Gn[
        '[object Number]'
    ] = Gn[Vn] = Gn['[object RegExp]'] = Gn['[object Set]'] = Gn[
        '[object String]'
    ] = Gn['[object Symbol]'] = Gn['[object Uint8Array]'] = Gn[
        '[object Uint8ClampedArray]'
    ] = Gn['[object Uint16Array]'] = Gn['[object Uint32Array]'] = !0),
        (Gn['[object Error]'] = Gn[Un] = Gn['[object WeakMap]'] = !1);
    function Kn(t, n) {
        return Hn(t, 5, (n = 'function' == typeof n ? n : void 0));
    }
    function Yn(t) {
        var n = -1,
            e = Array(t.size);
        return (
            t.forEach(function (t, r) {
                e[++n] = [r, t];
            }),
            e
        );
    }
    function Zn(t) {
        var n = -1,
            e = Array(t.size);
        return (
            t.forEach(function (t) {
                e[++n] = t;
            }),
            e
        );
    }
    var Jn = RegExp(
        '[\\u200d\\ud800-\\udfff\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff\\ufe0e\\ufe0f]'
    );
    function Wn(t) {
        return Jn.test(t);
    }
    var Xn = '[\\ud800-\\udfff]',
        Qn = '[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]',
        te = '\\ud83c[\\udffb-\\udfff]',
        ne = '[^\\ud800-\\udfff]',
        ee = '(?:\\ud83c[\\udde6-\\uddff]){2}',
        re = '[\\ud800-\\udbff][\\udc00-\\udfff]',
        oe = '(?:' + Qn + '|' + te + ')' + '?',
        ce = '[\\ufe0e\\ufe0f]?',
        ae =
            ce +
            oe +
            ('(?:\\u200d(?:' + [ne, ee, re].join('|') + ')' + ce + oe + ')*'),
        ie = '(?:' + [ne + Qn + '?', Qn, ee, re, Xn].join('|') + ')',
        ue = RegExp(te + '(?=' + te + ')|' + ie + ae, 'g');
    function se(t) {
        return Wn(t)
            ? (function (t) {
                  return t.match(ue) || [];
              })(t)
            : (function (t) {
                  return t.split('');
              })(t);
    }
    function fe(t) {
        return null == t
            ? []
            : (function (t, n) {
                  return ot(n, function (n) {
                      return t[n];
                  });
              })(t, Kt(t));
    }
    var le = h ? h.iterator : void 0;
    function he(t) {
        if (!t) return [];
        if (Ht(t))
            return (function (t) {
                return (
                    'string' == typeof t ||
                    (!u(t) && b(t) && '[object String]' == _(t))
                );
            })(t)
                ? se(t)
                : nn(t);
        if (le && t[le])
            return (function (t) {
                for (var n, e = []; !(n = t.next()).done; ) e.push(n.value);
                return e;
            })(t[le]());
        var n = En(t);
        return ('[object Map]' == n ? Yn : '[object Set]' == n ? Zn : fe)(t);
    }
    var pe = Object.prototype.toString,
        de = Error.prototype.toString,
        ve = RegExp.prototype.toString,
        ye =
            'undefined' != typeof Symbol
                ? Symbol.prototype.toString
                : function () {
                      return '';
                  },
        ge = /^Symbol\((.*)\)(.*)$/;
    function me(t, n) {
        if ((void 0 === n && (n = !1), null == t || !0 === t || !1 === t))
            return '' + t;
        var e = typeof t;
        if ('number' === e)
            return (function (t) {
                return t != +t ? 'NaN' : 0 === t && 1 / t < 0 ? '-0' : '' + t;
            })(t);
        if ('string' === e) return n ? '"' + t + '"' : t;
        if ('function' === e)
            return '[Function ' + (t.name || 'anonymous') + ']';
        if ('symbol' === e) return ye.call(t).replace(ge, 'Symbol($1)');
        var r = pe.call(t).slice(8, -1);
        return 'Date' === r
            ? isNaN(t.getTime())
                ? '' + t
                : t.toISOString(t)
            : 'Error' === r || t instanceof Error
            ? '[' + de.call(t) + ']'
            : 'RegExp' === r
            ? ve.call(t)
            : null;
    }
    function _e(t, n) {
        var e = me(t, n);
        return null !== e
            ? e
            : JSON.stringify(
                  t,
                  function (t, e) {
                      var r = me(this[t], n);
                      return null !== r ? r : e;
                  },
                  2
              );
    }
    var be = '${path} is invalid',
        ke = '${path} is a required field',
        we = '${path} must be one of the following values: ${values}',
        xe = '${path} must not be one of the following values: ${values}',
        Fe = function (t) {
            var n = t.path,
                e = t.type,
                r = t.value,
                o = t.originalValue,
                c = null != o && o !== r,
                a =
                    n +
                    ' must be a `' +
                    e +
                    '` type, but the final value was: `' +
                    _e(r, !0) +
                    '`' +
                    (c ? ' (cast from the value `' + _e(o, !0) + '`).' : '.');
            return (
                null === r &&
                    (a +=
                        '\n If "null" is intended as an empty value be sure to mark the schema as `.nullable()`'),
                a
            );
        },
        De = '${path} must be defined',
        je = '${path} must be exactly ${length} characters',
        Ce = '${path} must be at least ${min} characters',
        Ee = '${path} must be at most ${max} characters',
        Oe = '${path} must match the following: "${regex}"',
        Ae = '${path} must be a valid email',
        Se = '${path} must be a valid URL',
        Pe = '${path} must be a valid UUID',
        Te = '${path} must be a trimmed string',
        Me = '${path} must be a lowercase string',
        Be = '${path} must be a upper case string',
        Le = '${path} must be greater than or equal to ${min}',
        Ie = '${path} must be less than or equal to ${max}',
        Re = '${path} must be less than ${less}',
        ze = '${path} must be greater than ${more}',
        $e = '${path} must be a positive number',
        Ne = '${path} must be a negative number',
        qe = '${path} must be an integer',
        Ue = '${path} field must be later than ${min}',
        Ve = '${path} field must be at earlier than ${max}',
        Ge = '${path} field has unspecified keys: ${unknown}',
        He = '${path} field must have at least ${min} items',
        Ke = '${path} field must have less than or equal to ${max} items',
        Ye = function (t) {
            return t && t.__isYupSchema__;
        },
        Ze = (function () {
            function t(t, n) {
                if (((this.refs = t), 'function' != typeof n)) {
                    if (!bt(n, 'is'))
                        throw new TypeError(
                            '`is:` is required for `when()` conditions'
                        );
                    if (!n.then && !n.otherwise)
                        throw new TypeError(
                            'either `then:` or `otherwise:` is required for `when()` conditions'
                        );
                    var e = n.is,
                        r = n.then,
                        o = n.otherwise,
                        c =
                            'function' == typeof e
                                ? e
                                : function () {
                                      for (
                                          var t = arguments.length,
                                              n = new Array(t),
                                              r = 0;
                                          r < t;
                                          r++
                                      )
                                          n[r] = arguments[r];
                                      return n.every(function (t) {
                                          return t === e;
                                      });
                                  };
                    this.fn = function () {
                        for (
                            var t = arguments.length, n = new Array(t), e = 0;
                            e < t;
                            e++
                        )
                            n[e] = arguments[e];
                        var a = n.pop(),
                            i = n.pop(),
                            u = c.apply(void 0, n) ? r : o;
                        if (u)
                            return 'function' == typeof u
                                ? u(i)
                                : i.concat(u.resolve(a));
                    };
                } else this.fn = n;
            }
            return (
                (t.prototype.resolve = function (t, n) {
                    var e = this.refs.map(function (t) {
                            return t.getValue(n);
                        }),
                        r = this.fn.apply(t, e.concat(t, n));
                    if (void 0 === r || r === t) return t;
                    if (!Ye(r))
                        throw new TypeError(
                            'conditions must return a schema object'
                        );
                    return r.resolve(n);
                }),
                t
            );
        })();
    function Je(t, n) {
        if (null == t) return {};
        var e,
            r,
            o = {},
            c = Object.keys(t);
        for (r = 0; r < c.length; r++)
            (e = c[r]), n.indexOf(e) >= 0 || (o[e] = t[e]);
        return o;
    }
    function We(t) {
        return Array.prototype.slice.apply(t);
    }
    var Xe = 'pending',
        Qe = 'resolved',
        tr = 'rejected';
    function nr(t) {
        (this.status = Xe),
            (this._continuations = []),
            (this._parent = null),
            (this._paused = !1),
            t &&
                t.call(
                    this,
                    this._continueWith.bind(this),
                    this._failWith.bind(this)
                );
    }
    function er(t) {
        return t && 'function' == typeof t.then;
    }
    function rr(t) {
        return t;
    }
    if (
        ((nr.prototype = {
            then: function (t, n) {
                var e = nr.unresolved()._setParent(this);
                if (this._isRejected()) {
                    if (this._paused)
                        return (
                            this._continuations.push({
                                promise: e,
                                nextFn: t,
                                catchFn: n,
                            }),
                            e
                        );
                    if (n)
                        try {
                            var r = n(this._error);
                            return er(r)
                                ? (this._chainPromiseData(r, e), e)
                                : nr.resolve(r)._setParent(this);
                        } catch (t) {
                            return nr.reject(t)._setParent(this);
                        }
                    return nr.reject(this._error)._setParent(this);
                }
                return (
                    this._continuations.push({
                        promise: e,
                        nextFn: t,
                        catchFn: n,
                    }),
                    this._runResolutions(),
                    e
                );
            },
            catch: function (t) {
                if (this._isResolved())
                    return nr.resolve(this._data)._setParent(this);
                var n = nr.unresolved()._setParent(this);
                return (
                    this._continuations.push({ promise: n, catchFn: t }),
                    this._runRejections(),
                    n
                );
            },
            finally: function (t) {
                var n = !1;
                function e(e, r) {
                    if (!n) {
                        (n = !0), t || (t = rr);
                        var o = t(e);
                        return er(o)
                            ? o.then(function () {
                                  if (r) throw r;
                                  return e;
                              })
                            : e;
                    }
                }
                return this.then(function (t) {
                    return e(t);
                }).catch(function (t) {
                    return e(null, t);
                });
            },
            pause: function () {
                return (this._paused = !0), this;
            },
            resume: function () {
                var t = this._findFirstPaused();
                return (
                    t &&
                        ((t._paused = !1),
                        t._runResolutions(),
                        t._runRejections()),
                    this
                );
            },
            _findAncestry: function () {
                return this._continuations.reduce(function (t, n) {
                    if (n.promise) {
                        var e = {
                            promise: n.promise,
                            children: n.promise._findAncestry(),
                        };
                        t.push(e);
                    }
                    return t;
                }, []);
            },
            _setParent: function (t) {
                if (this._parent) throw new Error('parent already set');
                return (this._parent = t), this;
            },
            _continueWith: function (t) {
                var n = this._findFirstPending();
                n && ((n._data = t), n._setResolved());
            },
            _findFirstPending: function () {
                return this._findFirstAncestor(function (t) {
                    return t._isPending && t._isPending();
                });
            },
            _findFirstPaused: function () {
                return this._findFirstAncestor(function (t) {
                    return t._paused;
                });
            },
            _findFirstAncestor: function (t) {
                for (var n, e = this; e; ) t(e) && (n = e), (e = e._parent);
                return n;
            },
            _failWith: function (t) {
                var n = this._findFirstPending();
                n && ((n._error = t), n._setRejected());
            },
            _takeContinuations: function () {
                return this._continuations.splice(
                    0,
                    this._continuations.length
                );
            },
            _runRejections: function () {
                if (!this._paused && this._isRejected()) {
                    var t = this._error,
                        n = this._takeContinuations(),
                        e = this;
                    n.forEach(function (n) {
                        if (n.catchFn)
                            try {
                                var r = n.catchFn(t);
                                e._handleUserFunctionResult(r, n.promise);
                            } catch (t) {
                                n.promise.reject(t);
                            }
                        else n.promise.reject(t);
                    });
                }
            },
            _runResolutions: function () {
                if (!this._paused && this._isResolved() && !this._isPending()) {
                    var t = this._takeContinuations();
                    if (er(this._data))
                        return this._handleWhenResolvedDataIsPromise(
                            this._data
                        );
                    var n = this._data,
                        e = this;
                    t.forEach(function (t) {
                        if (t.nextFn)
                            try {
                                var r = t.nextFn(n);
                                e._handleUserFunctionResult(r, t.promise);
                            } catch (n) {
                                e._handleResolutionError(n, t);
                            }
                        else t.promise && t.promise.resolve(n);
                    });
                }
            },
            _handleResolutionError: function (t, n) {
                if ((this._setRejected(), n.catchFn))
                    try {
                        return void n.catchFn(t);
                    } catch (n) {
                        t = n;
                    }
                n.promise && n.promise.reject(t);
            },
            _handleWhenResolvedDataIsPromise: function (t) {
                var n = this;
                return t
                    .then(function (t) {
                        (n._data = t), n._runResolutions();
                    })
                    .catch(function (t) {
                        (n._error = t), n._setRejected(), n._runRejections();
                    });
            },
            _handleUserFunctionResult: function (t, n) {
                er(t) ? this._chainPromiseData(t, n) : n.resolve(t);
            },
            _chainPromiseData: function (t, n) {
                t.then(function (t) {
                    n.resolve(t);
                }).catch(function (t) {
                    n.reject(t);
                });
            },
            _setResolved: function () {
                (this.status = Qe), this._paused || this._runResolutions();
            },
            _setRejected: function () {
                (this.status = tr), this._paused || this._runRejections();
            },
            _isPending: function () {
                return this.status === Xe;
            },
            _isResolved: function () {
                return this.status === Qe;
            },
            _isRejected: function () {
                return this.status === tr;
            },
        }),
        (nr.resolve = function (t) {
            return new nr(function (n, e) {
                er(t)
                    ? t
                          .then(function (t) {
                              n(t);
                          })
                          .catch(function (t) {
                              e(t);
                          })
                    : n(t);
            });
        }),
        (nr.reject = function (t) {
            return new nr(function (n, e) {
                e(t);
            });
        }),
        (nr.unresolved = function () {
            return new nr(function (t, n) {
                (this.resolve = t), (this.reject = n);
            });
        }),
        (nr.all = function () {
            var t = We(arguments);
            return (
                Array.isArray(t[0]) && (t = t[0]),
                t.length
                    ? new nr(function (n, e) {
                          var r = [],
                              o = 0,
                              c = !1;
                          t.forEach(function (a, i) {
                              nr.resolve(a)
                                  .then(function (e) {
                                      (r[i] = e), (o += 1) === t.length && n(r);
                                  })
                                  .catch(function (t) {
                                      !(function (t) {
                                          c || ((c = !0), e(t));
                                      })(t);
                                  });
                          });
                      })
                    : nr.resolve([])
            );
        }),
        Promise === nr)
    )
        throw new Error(
            'Please use SynchronousPromise.installGlobally() to install globally'
        );
    var or = Promise;
    (nr.installGlobally = function (t) {
        if (Promise === nr) return t;
        var n = (function (t) {
            if (void 0 === t || t.__patched) return t;
            var n = t;
            return (
                ((t = function () {
                    n.apply(this, We(arguments));
                }).__patched = !0),
                t
            );
        })(t);
        return (Promise = nr), n;
    }),
        (nr.uninstallGlobally = function () {
            Promise === nr && (Promise = or);
        });
    var cr = { SynchronousPromise: nr },
        ar = /\$\{\s*(\w+)\s*\}/g,
        ir = function (t) {
            return function (n) {
                return t.replace(ar, function (t, e) {
                    return _e(n[e]);
                });
            };
        };
    function ur(t, n, e, r) {
        var o = this;
        (this.name = 'ValidationError'),
            (this.value = n),
            (this.path = e),
            (this.type = r),
            (this.errors = []),
            (this.inner = []),
            t &&
                [].concat(t).forEach(function (t) {
                    (o.errors = o.errors.concat(t.errors || t)),
                        t.inner &&
                            (o.inner = o.inner.concat(
                                t.inner.length ? t.inner : t
                            ));
                }),
            (this.message =
                this.errors.length > 1
                    ? this.errors.length + ' errors occurred'
                    : this.errors[0]),
            Error.captureStackTrace && Error.captureStackTrace(this, ur);
    }
    (ur.prototype = Object.create(Error.prototype)),
        (ur.prototype.constructor = ur),
        (ur.isError = function (t) {
            return t && 'ValidationError' === t.name;
        }),
        (ur.formatError = function (t, n) {
            'string' == typeof t && (t = ir(t));
            var e = function (n) {
                return (
                    (n.path = n.label || n.path || 'this'),
                    'function' == typeof t ? t(n) : t
                );
            };
            return 1 === arguments.length ? e : e(n);
        });
    var sr = function (t) {
        return t ? cr.SynchronousPromise : Promise;
    };
    function fr(t, n) {
        return t
            ? null
            : function (t) {
                  return n.push(t), t.value;
              };
    }
    function lr(t) {
        var n = t.validations,
            e = t.value,
            r = t.path,
            o = t.sync,
            c = t.errors,
            a = t.sort;
        return (
            (c = (function (t) {
                return (
                    void 0 === t && (t = []),
                    t.inner && t.inner.length ? t.inner : [].concat(t)
                );
            })(c)),
            (function (t, n) {
                var e = sr(n);
                return e.all(
                    t.map(function (t) {
                        return e.resolve(t).then(
                            function (t) {
                                return { fulfilled: !0, value: t };
                            },
                            function (t) {
                                return { fulfilled: !1, value: t };
                            }
                        );
                    })
                );
            })(n, o).then(function (t) {
                var n = t
                    .filter(function (t) {
                        return !t.fulfilled;
                    })
                    .reduce(function (t, n) {
                        var e = n.value;
                        if (!ur.isError(e)) throw e;
                        return t.concat(e);
                    }, []);
                if ((a && n.sort(a), (c = n.concat(c)).length))
                    throw new ur(c, e, r);
                return e;
            })
        );
    }
    function hr(t) {
        var n,
            e,
            r,
            o = t.endEarly,
            c = Je(t, ['endEarly']);
        return o
            ? ((n = c.validations),
              (e = c.value),
              (r = c.sync),
              sr(r)
                  .all(n)
                  .catch(function (t) {
                      throw ('ValidationError' === t.name && (t.value = e), t);
                  })
                  .then(function () {
                      return e;
                  }))
            : lr(c);
    }
    var pr = function (t) {
        return '[object Object]' === Object.prototype.toString.call(t);
    };
    function dr(t, n) {
        for (var e in n)
            if (bt(n, e)) {
                var r = n[e],
                    o = t[e];
                if (void 0 === o) t[e] = r;
                else {
                    if (o === r) continue;
                    Ye(o)
                        ? Ye(r) && (t[e] = r.concat(o))
                        : pr(o)
                        ? pr(r) && (t[e] = dr(o, r))
                        : Array.isArray(o) &&
                          Array.isArray(r) &&
                          (t[e] = r.concat(o));
                }
            }
        return t;
    }
    var vr,
        yr = function (t, n, e) {
            for (var r = -1, o = Object(t), c = e(t), a = c.length; a--; ) {
                var i = c[vr ? a : ++r];
                if (!1 === n(o[i], i, o)) break;
            }
            return t;
        };
    function gr(t, n) {
        return t && yr(t, n, Kt);
    }
    function mr(t) {
        var n = -1,
            e = null == t ? 0 : t.length;
        for (this.__data__ = new J(); ++n < e; ) this.add(t[n]);
    }
    function _r(t, n) {
        for (var e = -1, r = null == t ? 0 : t.length; ++e < r; )
            if (n(t[e], e, t)) return !0;
        return !1;
    }
    function br(t, n) {
        return t.has(n);
    }
    (mr.prototype.add = mr.prototype.push = function (t) {
        return this.__data__.set(t, '__lodash_hash_undefined__'), this;
    }),
        (mr.prototype.has = function (t) {
            return this.__data__.has(t);
        });
    function kr(t, n, e, r, o, c) {
        var a = 1 & e,
            i = t.length,
            u = n.length;
        if (i != u && !(a && u > i)) return !1;
        var s = c.get(t);
        if (s && c.get(n)) return s == n;
        var f = -1,
            l = !0,
            h = 2 & e ? new mr() : void 0;
        for (c.set(t, n), c.set(n, t); ++f < i; ) {
            var p = t[f],
                d = n[f];
            if (r) var v = a ? r(d, p, f, n, t, c) : r(p, d, f, t, n, c);
            if (void 0 !== v) {
                if (v) continue;
                l = !1;
                break;
            }
            if (h) {
                if (
                    !_r(n, function (t, n) {
                        if (!br(h, n) && (p === t || o(p, t, e, r, c)))
                            return h.push(n);
                    })
                ) {
                    l = !1;
                    break;
                }
            } else if (p !== d && !o(p, d, e, r, c)) {
                l = !1;
                break;
            }
        }
        return c.delete(t), c.delete(n), l;
    }
    var wr = h ? h.prototype : void 0,
        xr = wr ? wr.valueOf : void 0;
    var Fr = Object.prototype.hasOwnProperty;
    var Dr = '[object Arguments]',
        jr = '[object Array]',
        Cr = '[object Object]',
        Er = Object.prototype.hasOwnProperty;
    function Or(t, n, e, r, o, c) {
        var a = u(t),
            i = u(n),
            s = a ? jr : En(t),
            f = i ? jr : En(n),
            l = (s = s == Dr ? Cr : s) == Cr,
            h = (f = f == Dr ? Cr : f) == Cr,
            p = s == f;
        if (p && At(t)) {
            if (!At(n)) return !1;
            (a = !0), (l = !1);
        }
        if (p && !l)
            return (
                c || (c = new kt()),
                a || Rt(t)
                    ? kr(t, n, e, r, o, c)
                    : (function (t, n, e, r, o, c, a) {
                          switch (e) {
                              case '[object DataView]':
                                  if (
                                      t.byteLength != n.byteLength ||
                                      t.byteOffset != n.byteOffset
                                  )
                                      return !1;
                                  (t = t.buffer), (n = n.buffer);
                              case '[object ArrayBuffer]':
                                  return !(
                                      t.byteLength != n.byteLength ||
                                      !c(new An(t), new An(n))
                                  );
                              case '[object Boolean]':
                              case '[object Date]':
                              case '[object Number]':
                                  return V(+t, +n);
                              case '[object Error]':
                                  return (
                                      t.name == n.name && t.message == n.message
                                  );
                              case '[object RegExp]':
                              case '[object String]':
                                  return t == n + '';
                              case '[object Map]':
                                  var i = Yn;
                              case '[object Set]':
                                  var u = 1 & r;
                                  if ((i || (i = Zn), t.size != n.size && !u))
                                      return !1;
                                  var s = a.get(t);
                                  if (s) return s == n;
                                  (r |= 2), a.set(t, n);
                                  var f = kr(i(t), i(n), r, o, c, a);
                                  return a.delete(t), f;
                              case '[object Symbol]':
                                  if (xr) return xr.call(t) == xr.call(n);
                          }
                          return !1;
                      })(t, n, s, e, r, o, c)
            );
        if (!(1 & e)) {
            var d = l && Er.call(t, '__wrapped__'),
                v = h && Er.call(n, '__wrapped__');
            if (d || v) {
                var y = d ? t.value() : t,
                    g = v ? n.value() : n;
                return c || (c = new kt()), o(y, g, e, r, c);
            }
        }
        return (
            !!p &&
            (c || (c = new kt()),
            (function (t, n, e, r, o, c) {
                var a = 1 & e,
                    i = ln(t),
                    u = i.length;
                if (u != ln(n).length && !a) return !1;
                for (var s = u; s--; ) {
                    var f = i[s];
                    if (!(a ? f in n : Fr.call(n, f))) return !1;
                }
                var l = c.get(t);
                if (l && c.get(n)) return l == n;
                var h = !0;
                c.set(t, n), c.set(n, t);
                for (var p = a; ++s < u; ) {
                    var d = t[(f = i[s])],
                        v = n[f];
                    if (r)
                        var y = a ? r(v, d, f, n, t, c) : r(d, v, f, t, n, c);
                    if (!(void 0 === y ? d === v || o(d, v, e, r, c) : y)) {
                        h = !1;
                        break;
                    }
                    p || (p = 'constructor' == f);
                }
                if (h && !p) {
                    var g = t.constructor,
                        m = n.constructor;
                    g == m ||
                        !('constructor' in t) ||
                        !('constructor' in n) ||
                        ('function' == typeof g &&
                            g instanceof g &&
                            'function' == typeof m &&
                            m instanceof m) ||
                        (h = !1);
                }
                return c.delete(t), c.delete(n), h;
            })(t, n, e, r, o, c))
        );
    }
    function Ar(t, n, e, r, o) {
        return (
            t === n ||
            (null == t || null == n || (!b(t) && !b(n))
                ? t != t && n != n
                : Or(t, n, e, r, Ar, o))
        );
    }
    function Sr(t) {
        return t == t && !D(t);
    }
    function Pr(t, n) {
        return function (e) {
            return null != e && e[t] === n && (void 0 !== n || t in Object(e));
        };
    }
    function Tr(t) {
        var n = (function (t) {
            for (var n = Kt(t), e = n.length; e--; ) {
                var r = n[e],
                    o = t[r];
                n[e] = [r, o, Sr(o)];
            }
            return n;
        })(t);
        return 1 == n.length && n[0][2]
            ? Pr(n[0][0], n[0][1])
            : function (e) {
                  return (
                      e === t ||
                      (function (t, n, e, r) {
                          var o = e.length,
                              c = o,
                              a = !r;
                          if (null == t) return !c;
                          for (t = Object(t); o--; ) {
                              var i = e[o];
                              if (a && i[2] ? i[1] !== t[i[0]] : !(i[0] in t))
                                  return !1;
                          }
                          for (; ++o < c; ) {
                              var u = (i = e[o])[0],
                                  s = t[u],
                                  f = i[1];
                              if (a && i[2]) {
                                  if (void 0 === s && !(u in t)) return !1;
                              } else {
                                  var l = new kt();
                                  if (r) var h = r(s, f, u, t, n, l);
                                  if (!(void 0 === h ? Ar(f, s, 3, r, l) : h))
                                      return !1;
                              }
                          }
                          return !0;
                      })(e, t, n)
                  );
              };
    }
    function Mr(t, n) {
        for (var e = 0, r = (n = st(n, t)).length; null != t && e < r; )
            t = t[mt(n[e++])];
        return e && e == r ? t : void 0;
    }
    function Br(t, n) {
        return null != t && n in Object(t);
    }
    function Lr(t, n) {
        return F(t) && Sr(n)
            ? Pr(mt(t), n)
            : function (e) {
                  var r = (function (t, n, e) {
                      var r = null == t ? void 0 : Mr(t, n);
                      return void 0 === r ? e : r;
                  })(e, t);
                  return void 0 === r && r === n
                      ? (function (t, n) {
                            return null != t && _t(t, n, Br);
                        })(e, t)
                      : Ar(n, r, 3);
              };
    }
    function Ir(t) {
        return t;
    }
    function Rr(t) {
        return F(t)
            ? ((n = mt(t)),
              function (t) {
                  return null == t ? void 0 : t[n];
              })
            : (function (t) {
                  return function (n) {
                      return Mr(n, t);
                  };
              })(t);
        var n;
    }
    function zr(t) {
        return 'function' == typeof t
            ? t
            : null == t
            ? Ir
            : 'object' == typeof t
            ? u(t)
                ? Lr(t[0], t[1])
                : Tr(t)
            : Rr(t);
    }
    function $r(t, n) {
        var e = {};
        return (
            (n = zr(n)),
            gr(t, function (t, r, o) {
                xt(e, r, n(t, r, o));
            }),
            e
        );
    }
    function Nr(t) {
        (this._maxSize = t), this.clear();
    }
    (Nr.prototype.clear = function () {
        (this._size = 0), (this._values = Object.create(null));
    }),
        (Nr.prototype.get = function (t) {
            return this._values[t];
        }),
        (Nr.prototype.set = function (t, n) {
            return (
                this._size >= this._maxSize && this.clear(),
                t in this._values || this._size++,
                (this._values[t] = n)
            );
        });
    var qr = /[^.^\]^[]+|(?=\[\]|\.\.)/g,
        Ur = /^\d+$/,
        Vr = /^\d/,
        Gr = /[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g,
        Hr = /^\s*(['"]?)(.*?)(\1)\s*$/,
        Kr = new Nr(512),
        Yr = new Nr(512),
        Zr = new Nr(512),
        Jr = {
            Cache: Nr,
            split: Xr,
            normalizePath: Wr,
            setter: function (t) {
                var n = Wr(t);
                return (
                    Yr.get(t) ||
                    Yr.set(t, function (t, e) {
                        for (var r = 0, o = n.length, c = t; r < o - 1; ) {
                            var a = n[r];
                            if (
                                '__proto__' === a ||
                                'constructor' === a ||
                                'prototype' === a
                            )
                                return t;
                            c = c[n[r++]];
                        }
                        c[n[r]] = e;
                    })
                );
            },
            getter: function (t, n) {
                var e = Wr(t);
                return (
                    Zr.get(t) ||
                    Zr.set(t, function (t) {
                        for (var r = 0, o = e.length; r < o; ) {
                            if (null == t && n) return;
                            t = t[e[r++]];
                        }
                        return t;
                    })
                );
            },
            join: function (t) {
                return t.reduce(function (t, n) {
                    return (
                        t +
                        (Qr(n) || Ur.test(n)
                            ? '[' + n + ']'
                            : (t ? '.' : '') + n)
                    );
                }, '');
            },
            forEach: function (t, n, e) {
                !(function (t, n, e) {
                    var r,
                        o,
                        c,
                        a,
                        i = t.length;
                    for (o = 0; o < i; o++)
                        (r = t[o]) &&
                            (to(r) && (r = '"' + r + '"'),
                            (c = !(a = Qr(r)) && /^\d+$/.test(r)),
                            n.call(e, r, a, c, o, t));
                })(Array.isArray(t) ? t : Xr(t), n, e);
            },
        };
    function Wr(t) {
        return (
            Kr.get(t) ||
            Kr.set(
                t,
                Xr(t).map(function (t) {
                    return t.replace(Hr, '$2');
                })
            )
        );
    }
    function Xr(t) {
        return t.match(qr);
    }
    function Qr(t) {
        return (
            'string' == typeof t && t && -1 !== ["'", '"'].indexOf(t.charAt(0))
        );
    }
    function to(t) {
        return (
            !Qr(t) &&
            ((function (t) {
                return t.match(Vr) && !t.match(Ur);
            })(t) ||
                (function (t) {
                    return Gr.test(t);
                })(t))
        );
    }
    var no = '$',
        eo = '.',
        ro = (function () {
            function t(t, n) {
                if ((void 0 === n && (n = {}), 'string' != typeof t))
                    throw new TypeError('ref must be a string, got: ' + t);
                if (((this.key = t.trim()), '' === t))
                    throw new TypeError('ref must be a non-empty string');
                (this.isContext = this.key[0] === no),
                    (this.isValue = this.key[0] === eo),
                    (this.isSibling = !this.isContext && !this.isValue);
                var e = this.isContext ? no : this.isValue ? eo : '';
                (this.path = this.key.slice(e.length)),
                    (this.getter = this.path && Jr.getter(this.path, !0)),
                    (this.map = n.map);
            }
            var n = t.prototype;
            return (
                (n.getValue = function (t) {
                    var n = this.isContext
                        ? t.context
                        : this.isValue
                        ? t.value
                        : t.parent;
                    return (
                        this.getter && (n = this.getter(n || {})),
                        this.map && (n = this.map(n)),
                        n
                    );
                }),
                (n.cast = function (t, n) {
                    return this.getValue(o({}, n, { value: t }));
                }),
                (n.resolve = function () {
                    return this;
                }),
                (n.describe = function () {
                    return { type: 'ref', key: this.key };
                }),
                (n.toString = function () {
                    return 'Ref(' + this.key + ')';
                }),
                (t.isRef = function (t) {
                    return t && t.__isYupRef;
                }),
                t
            );
        })();
    ro.prototype.__isYupRef = !0;
    var oo = ur.formatError;
    function co(t) {
        var n = t.value,
            e = t.label,
            r = t.resolve,
            c = t.originalValue,
            a = Je(t, ['value', 'label', 'resolve', 'originalValue']);
        return function (t) {
            var i = void 0 === t ? {} : t,
                u = i.path,
                s = void 0 === u ? a.path : u,
                f = i.message,
                l = void 0 === f ? a.message : f,
                h = i.type,
                p = void 0 === h ? a.name : h,
                d = i.params;
            return (
                (d = o(
                    { path: s, value: n, originalValue: c, label: e },
                    (function (t, n, e) {
                        return $r(o({}, t, n), e);
                    })(a.params, d, r)
                )),
                o(new ur(oo(l, d), n, s, p), { params: d })
            );
        };
    }
    function ao(t) {
        var n = t.name,
            e = t.message,
            r = t.test,
            c = t.params;
        function a(t) {
            var a = t.value,
                i = t.path,
                u = t.label,
                s = t.options,
                f = t.originalValue,
                l = t.sync,
                h = Je(t, [
                    'value',
                    'path',
                    'label',
                    'options',
                    'originalValue',
                    'sync',
                ]),
                p = s.parent,
                d = function (t) {
                    return ro.isRef(t)
                        ? t.getValue({
                              value: a,
                              parent: p,
                              context: s.context,
                          })
                        : t;
                },
                v = co({
                    message: e,
                    path: i,
                    value: a,
                    originalValue: f,
                    params: c,
                    label: u,
                    resolve: d,
                    name: n,
                }),
                y = o(
                    {
                        path: i,
                        parent: p,
                        type: n,
                        createError: v,
                        resolve: d,
                        options: s,
                    },
                    h
                );
            return (function (t, n, e, r) {
                var o,
                    c = t.call(n, e);
                if (!r) return Promise.resolve(c);
                if (
                    (o = c) &&
                    'function' == typeof o.then &&
                    'function' == typeof o.catch
                )
                    throw new Error(
                        'Validation test of type: "' +
                            n.type +
                            '" returned a Promise during a synchronous validate. This test will finish after the validate call has returned'
                    );
                return cr.SynchronousPromise.resolve(c);
            })(r, y, a, l).then(function (t) {
                if (ur.isError(t)) throw t;
                if (!t) throw v();
            });
        }
        return (a.OPTIONS = t), a;
    }
    function io(t, n) {
        var e;
        if ('undefined' == typeof Symbol || null == t[Symbol.iterator]) {
            if (
                Array.isArray(t) ||
                (e = (function (t, n) {
                    if (!t) return;
                    if ('string' == typeof t) return uo(t, n);
                    var e = Object.prototype.toString.call(t).slice(8, -1);
                    'Object' === e && t.constructor && (e = t.constructor.name);
                    if ('Map' === e || 'Set' === e) return Array.from(t);
                    if (
                        'Arguments' === e ||
                        /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)
                    )
                        return uo(t, n);
                })(t)) ||
                (n && t && 'number' == typeof t.length)
            ) {
                e && (t = e);
                var r = 0;
                return function () {
                    return r >= t.length
                        ? { done: !0 }
                        : { done: !1, value: t[r++] };
                };
            }
            throw new TypeError(
                'Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'
            );
        }
        return (e = t[Symbol.iterator]()).next.bind(e);
    }
    function uo(t, n) {
        (null == n || n > t.length) && (n = t.length);
        for (var e = 0, r = new Array(n); e < n; e++) r[e] = t[e];
        return r;
    }
    var so = (function () {
        function t() {
            (this.list = new Set()), (this.refs = new Map());
        }
        var n,
            e,
            r,
            o = t.prototype;
        return (
            (o.describe = function () {
                for (var t, n = [], e = io(this.list); !(t = e()).done; ) {
                    var r = t.value;
                    n.push(r);
                }
                for (var o, c = io(this.refs); !(o = c()).done; ) {
                    var a = o.value[1];
                    n.push(a.describe());
                }
                return n;
            }),
            (o.toArray = function () {
                return he(this.list).concat(he(this.refs.values()));
            }),
            (o.add = function (t) {
                ro.isRef(t) ? this.refs.set(t.key, t) : this.list.add(t);
            }),
            (o.delete = function (t) {
                ro.isRef(t) ? this.refs.delete(t.key) : this.list.delete(t);
            }),
            (o.has = function (t, n) {
                if (this.list.has(t)) return !0;
                for (var e, r = this.refs.values(); !(e = r.next()).done; )
                    if (n(e.value) === t) return !0;
                return !1;
            }),
            (o.clone = function () {
                var n = new t();
                return (
                    (n.list = new Set(this.list)),
                    (n.refs = new Map(this.refs)),
                    n
                );
            }),
            (o.merge = function (t, n) {
                var e = this.clone();
                return (
                    t.list.forEach(function (t) {
                        return e.add(t);
                    }),
                    t.refs.forEach(function (t) {
                        return e.add(t);
                    }),
                    n.list.forEach(function (t) {
                        return e.delete(t);
                    }),
                    n.refs.forEach(function (t) {
                        return e.delete(t);
                    }),
                    e
                );
            }),
            (n = t),
            (e = [
                {
                    key: 'size',
                    get: function () {
                        return this.list.size + this.refs.size;
                    },
                },
            ]) && c(n.prototype, e),
            r && c(n, r),
            t
        );
    })();
    function fo(t) {
        var n = this;
        if ((void 0 === t && (t = {}), !(this instanceof fo))) return new fo();
        (this._deps = []),
            (this._conditions = []),
            (this._options = { abortEarly: !0, recursive: !0 }),
            (this._exclusive = Object.create(null)),
            (this._whitelist = new so()),
            (this._blacklist = new so()),
            (this.tests = []),
            (this.transforms = []),
            this.withMutation(function () {
                n.typeError(Fe);
            }),
            bt(t, 'default') && (this._defaultDefault = t.default),
            (this.type = t.type || 'mixed'),
            (this._type = t.type || 'mixed');
    }
    for (
        var lo = (fo.prototype = {
                __isYupSchema__: !0,
                constructor: fo,
                clone: function () {
                    var t = this;
                    return this._mutate
                        ? this
                        : Kn(this, function (n) {
                              if (Ye(n) && n !== t) return n;
                          });
                },
                label: function (t) {
                    var n = this.clone();
                    return (n._label = t), n;
                },
                meta: function (t) {
                    if (0 === arguments.length) return this._meta;
                    var n = this.clone();
                    return (n._meta = o(n._meta || {}, t)), n;
                },
                withMutation: function (t) {
                    var n = this._mutate;
                    this._mutate = !0;
                    var e = t(this);
                    return (this._mutate = n), e;
                },
                concat: function (t) {
                    if (!t || t === this) return this;
                    if (t._type !== this._type && 'mixed' !== this._type)
                        throw new TypeError(
                            "You cannot `concat()` schema's of different types: " +
                                this._type +
                                ' and ' +
                                t._type
                        );
                    var n = dr(t.clone(), this);
                    return (
                        bt(t, '_default') && (n._default = t._default),
                        (n.tests = this.tests),
                        (n._exclusive = this._exclusive),
                        (n._whitelist = this._whitelist.merge(
                            t._whitelist,
                            t._blacklist
                        )),
                        (n._blacklist = this._blacklist.merge(
                            t._blacklist,
                            t._whitelist
                        )),
                        n.withMutation(function (n) {
                            t.tests.forEach(function (t) {
                                n.test(t.OPTIONS);
                            });
                        }),
                        n
                    );
                },
                isType: function (t) {
                    return (
                        !(!this._nullable || null !== t) ||
                        !this._typeCheck ||
                        this._typeCheck(t)
                    );
                },
                resolve: function (t) {
                    var n = this;
                    if (n._conditions.length) {
                        var e = n._conditions;
                        ((n = n.clone())._conditions = []),
                            (n = (n = e.reduce(function (n, e) {
                                return e.resolve(n, t);
                            }, n)).resolve(t));
                    }
                    return n;
                },
                cast: function (t, n) {
                    void 0 === n && (n = {});
                    var e = this.resolve(o({}, n, { value: t })),
                        r = e._cast(t, n);
                    if (void 0 !== t && !1 !== n.assert && !0 !== e.isType(r)) {
                        var c = _e(t),
                            a = _e(r);
                        throw new TypeError(
                            'The value of ' +
                                (n.path || 'field') +
                                ' could not be cast to a value that satisfies the schema type: "' +
                                e._type +
                                '". \n\nattempted value: ' +
                                c +
                                ' \n' +
                                (a !== c ? 'result of cast: ' + a : '')
                        );
                    }
                    return r;
                },
                _cast: function (t) {
                    var n = this,
                        e =
                            void 0 === t
                                ? t
                                : this.transforms.reduce(function (e, r) {
                                      return r.call(n, e, t);
                                  }, t);
                    return (
                        void 0 === e &&
                            bt(this, '_default') &&
                            (e = this.default()),
                        e
                    );
                },
                _validate: function (t, n) {
                    var e = this;
                    void 0 === n && (n = {});
                    var r = t,
                        c = null != n.originalValue ? n.originalValue : t,
                        a = this._option('strict', n),
                        i = this._option('abortEarly', n),
                        u = n.sync,
                        s = n.path,
                        f = this._label;
                    a || (r = this._cast(r, o({ assert: !1 }, n)));
                    var l = {
                        value: r,
                        path: s,
                        schema: this,
                        options: n,
                        label: f,
                        originalValue: c,
                        sync: u,
                    };
                    n.from && (l.from = n.from);
                    var h = [];
                    return (
                        this._typeError && h.push(this._typeError(l)),
                        this._whitelistError && h.push(this._whitelistError(l)),
                        this._blacklistError && h.push(this._blacklistError(l)),
                        hr({
                            validations: h,
                            endEarly: i,
                            value: r,
                            path: s,
                            sync: u,
                        }).then(function (t) {
                            return hr({
                                path: s,
                                sync: u,
                                value: t,
                                endEarly: i,
                                validations: e.tests.map(function (t) {
                                    return t(l);
                                }),
                            });
                        })
                    );
                },
                validate: function (t, n) {
                    return (
                        void 0 === n && (n = {}),
                        this.resolve(o({}, n, { value: t }))._validate(t, n)
                    );
                },
                validateSync: function (t, n) {
                    var e, r;
                    if (
                        (void 0 === n && (n = {}),
                        this.resolve(o({}, n, { value: t }))
                            ._validate(t, o({}, n, { sync: !0 }))
                            .then(function (t) {
                                return (e = t);
                            })
                            .catch(function (t) {
                                return (r = t);
                            }),
                        r)
                    )
                        throw r;
                    return e;
                },
                isValid: function (t, n) {
                    return this.validate(t, n)
                        .then(function () {
                            return !0;
                        })
                        .catch(function (t) {
                            if ('ValidationError' === t.name) return !1;
                            throw t;
                        });
                },
                isValidSync: function (t, n) {
                    try {
                        return this.validateSync(t, n), !0;
                    } catch (t) {
                        if ('ValidationError' === t.name) return !1;
                        throw t;
                    }
                },
                getDefault: function (t) {
                    return void 0 === t && (t = {}), this.resolve(t).default();
                },
                default: function (t) {
                    if (0 === arguments.length) {
                        var n = bt(this, '_default')
                            ? this._default
                            : this._defaultDefault;
                        return 'function' == typeof n ? n.call(this) : Kn(n);
                    }
                    var e = this.clone();
                    return (e._default = t), e;
                },
                strict: function (t) {
                    void 0 === t && (t = !0);
                    var n = this.clone();
                    return (n._options.strict = t), n;
                },
                _isPresent: function (t) {
                    return null != t;
                },
                required: function (t) {
                    return (
                        void 0 === t && (t = ke),
                        this.test({
                            message: t,
                            name: 'required',
                            exclusive: !0,
                            test: function (t) {
                                return this.schema._isPresent(t);
                            },
                        })
                    );
                },
                notRequired: function () {
                    var t = this.clone();
                    return (
                        (t.tests = t.tests.filter(function (t) {
                            return 'required' !== t.OPTIONS.name;
                        })),
                        t
                    );
                },
                nullable: function (t) {
                    void 0 === t && (t = !0);
                    var n = this.clone();
                    return (n._nullable = t), n;
                },
                transform: function (t) {
                    var n = this.clone();
                    return n.transforms.push(t), n;
                },
                test: function () {
                    var t;
                    if (
                        (void 0 ===
                            (t =
                                1 === arguments.length
                                    ? 'function' ==
                                      typeof (arguments.length <= 0
                                          ? void 0
                                          : arguments[0])
                                        ? {
                                              test:
                                                  arguments.length <= 0
                                                      ? void 0
                                                      : arguments[0],
                                          }
                                        : arguments.length <= 0
                                        ? void 0
                                        : arguments[0]
                                    : 2 === arguments.length
                                    ? {
                                          name:
                                              arguments.length <= 0
                                                  ? void 0
                                                  : arguments[0],
                                          test:
                                              arguments.length <= 1
                                                  ? void 0
                                                  : arguments[1],
                                      }
                                    : {
                                          name:
                                              arguments.length <= 0
                                                  ? void 0
                                                  : arguments[0],
                                          message:
                                              arguments.length <= 1
                                                  ? void 0
                                                  : arguments[1],
                                          test:
                                              arguments.length <= 2
                                                  ? void 0
                                                  : arguments[2],
                                      }).message && (t.message = be),
                        'function' != typeof t.test)
                    )
                        throw new TypeError('`test` is a required parameters');
                    var n = this.clone(),
                        e = ao(t),
                        r =
                            t.exclusive ||
                            (t.name && !0 === n._exclusive[t.name]);
                    if (t.exclusive && !t.name)
                        throw new TypeError(
                            'Exclusive tests must provide a unique `name` identifying the test'
                        );
                    return (
                        (n._exclusive[t.name] = !!t.exclusive),
                        (n.tests = n.tests.filter(function (n) {
                            if (n.OPTIONS.name === t.name) {
                                if (r) return !1;
                                if (n.OPTIONS.test === e.OPTIONS.test)
                                    return !1;
                            }
                            return !0;
                        })),
                        n.tests.push(e),
                        n
                    );
                },
                when: function (t, n) {
                    1 === arguments.length && ((n = t), (t = '.'));
                    var e = this.clone(),
                        r = [].concat(t).map(function (t) {
                            return new ro(t);
                        });
                    return (
                        r.forEach(function (t) {
                            t.isSibling && e._deps.push(t.key);
                        }),
                        e._conditions.push(new Ze(r, n)),
                        e
                    );
                },
                typeError: function (t) {
                    var n = this.clone();
                    return (
                        (n._typeError = ao({
                            message: t,
                            name: 'typeError',
                            test: function (t) {
                                return (
                                    !(void 0 !== t && !this.schema.isType(t)) ||
                                    this.createError({
                                        params: { type: this.schema._type },
                                    })
                                );
                            },
                        })),
                        n
                    );
                },
                oneOf: function (t, n) {
                    void 0 === n && (n = we);
                    var e = this.clone();
                    return (
                        t.forEach(function (t) {
                            e._whitelist.add(t), e._blacklist.delete(t);
                        }),
                        (e._whitelistError = ao({
                            message: n,
                            name: 'oneOf',
                            test: function (t) {
                                if (void 0 === t) return !0;
                                var n = this.schema._whitelist;
                                return (
                                    !!n.has(t, this.resolve) ||
                                    this.createError({
                                        params: {
                                            values: n.toArray().join(', '),
                                        },
                                    })
                                );
                            },
                        })),
                        e
                    );
                },
                notOneOf: function (t, n) {
                    void 0 === n && (n = xe);
                    var e = this.clone();
                    return (
                        t.forEach(function (t) {
                            e._blacklist.add(t), e._whitelist.delete(t);
                        }),
                        (e._blacklistError = ao({
                            message: n,
                            name: 'notOneOf',
                            test: function (t) {
                                var n = this.schema._blacklist;
                                return (
                                    !n.has(t, this.resolve) ||
                                    this.createError({
                                        params: {
                                            values: n.toArray().join(', '),
                                        },
                                    })
                                );
                            },
                        })),
                        e
                    );
                },
                strip: function (t) {
                    void 0 === t && (t = !0);
                    var n = this.clone();
                    return (n._strip = t), n;
                },
                _option: function (t, n) {
                    return bt(n, t) ? n[t] : this._options[t];
                },
                describe: function () {
                    var t = this.clone(),
                        n = {
                            type: t._type,
                            meta: t._meta,
                            label: t._label,
                            tests: t.tests
                                .map(function (t) {
                                    return {
                                        name: t.OPTIONS.name,
                                        params: t.OPTIONS.params,
                                    };
                                })
                                .filter(function (t, n, e) {
                                    return (
                                        e.findIndex(function (n) {
                                            return n.name === t.name;
                                        }) === n
                                    );
                                }),
                        };
                    return (
                        t._whitelist.size &&
                            (n.oneOf = t._whitelist.describe()),
                        t._blacklist.size &&
                            (n.notOneOf = t._blacklist.describe()),
                        n
                    );
                },
                defined: function (t) {
                    return (
                        void 0 === t && (t = De),
                        this.nullable().test({
                            message: t,
                            name: 'defined',
                            exclusive: !0,
                            test: function (t) {
                                return void 0 !== t;
                            },
                        })
                    );
                },
            }),
            ho = function () {
                var t = vo[po];
                lo[t + 'At'] = function (n, e, r) {
                    void 0 === r && (r = {});
                    var c = (function (t, n, e, r) {
                            var o, c, a;
                            return (
                                void 0 === r && (r = e),
                                n
                                    ? (Jr.forEach(n, function (i, u, s) {
                                          var f = u
                                              ? (function (t) {
                                                    return t
                                                        .substr(0, t.length - 1)
                                                        .substr(1);
                                                })(i)
                                              : i;
                                          if (
                                              (t = t.resolve({
                                                  context: r,
                                                  parent: o,
                                                  value: e,
                                              })).innerType
                                          ) {
                                              var l = s ? parseInt(f, 10) : 0;
                                              if (e && l >= e.length)
                                                  throw new Error(
                                                      'Yup.reach cannot resolve an array item at index: ' +
                                                          i +
                                                          ', in the path: ' +
                                                          n +
                                                          '. because there is no value at that index. '
                                                  );
                                              (o = e),
                                                  (e = e && e[l]),
                                                  (t = t.innerType);
                                          }
                                          if (!s) {
                                              if (!t.fields || !t.fields[f])
                                                  throw new Error(
                                                      'The schema does not contain the path: ' +
                                                          n +
                                                          '. (failed at: ' +
                                                          a +
                                                          ' which is a type: "' +
                                                          t._type +
                                                          '")'
                                                  );
                                              (o = e),
                                                  (e = e && e[f]),
                                                  (t = t.fields[f]);
                                          }
                                          (c = f),
                                              (a = u ? '[' + i + ']' : '.' + i);
                                      }),
                                      { schema: t, parent: o, parentPath: c })
                                    : { parent: o, parentPath: n, schema: t }
                            );
                        })(this, n, e, r.context),
                        a = c.parent,
                        i = c.parentPath;
                    return c.schema[t](
                        a && a[i],
                        o({}, r, { parent: a, path: n })
                    );
                };
            },
            po = 0,
            vo = ['validate', 'validateSync'];
        po < vo.length;
        po++
    )
        ho();
    for (var yo = 0, go = ['equals', 'is']; yo < go.length; yo++) {
        lo[go[yo]] = lo.oneOf;
    }
    for (var mo = 0, _o = ['not', 'nope']; mo < _o.length; mo++) {
        lo[_o[mo]] = lo.notOneOf;
    }
    function bo(t, n, e) {
        (t.prototype = Object.create(n.prototype, {
            constructor: {
                value: t,
                enumerable: !1,
                writable: !0,
                configurable: !0,
            },
        })),
            o(t.prototype, e);
    }
    (lo.optional = lo.notRequired),
        bo(
            function t() {
                var n = this;
                if (!(this instanceof t)) return new t();
                fo.call(this, { type: 'boolean' }),
                    this.withMutation(function () {
                        n.transform(function (t) {
                            if (!this.isType(t)) {
                                if (/^(true|1)$/i.test(t)) return !0;
                                if (/^(false|0)$/i.test(t)) return !1;
                            }
                            return t;
                        });
                    });
            },
            fo,
            {
                _typeCheck: function (t) {
                    return (
                        t instanceof Boolean && (t = t.valueOf()),
                        'boolean' == typeof t
                    );
                },
            }
        );
    var ko = function (t) {
            return null == t;
        },
        wo = /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i,
        xo = /^((https?|ftp):)?\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i,
        Fo = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i,
        Do = function (t) {
            return ko(t) || t === t.trim();
        };
    function jo() {
        var t = this;
        if (!(this instanceof jo)) return new jo();
        fo.call(this, { type: 'string' }),
            this.withMutation(function () {
                t.transform(function (t) {
                    return this.isType(t)
                        ? t
                        : null != t && t.toString
                        ? t.toString()
                        : t;
                });
            });
    }
    bo(jo, fo, {
        _typeCheck: function (t) {
            return (
                t instanceof String && (t = t.valueOf()), 'string' == typeof t
            );
        },
        _isPresent: function (t) {
            return fo.prototype._isPresent.call(this, t) && t.length > 0;
        },
        length: function (t, n) {
            return (
                void 0 === n && (n = je),
                this.test({
                    message: n,
                    name: 'length',
                    exclusive: !0,
                    params: { length: t },
                    test: function (n) {
                        return ko(n) || n.length === this.resolve(t);
                    },
                })
            );
        },
        min: function (t, n) {
            return (
                void 0 === n && (n = Ce),
                this.test({
                    message: n,
                    name: 'min',
                    exclusive: !0,
                    params: { min: t },
                    test: function (n) {
                        return ko(n) || n.length >= this.resolve(t);
                    },
                })
            );
        },
        max: function (t, n) {
            return (
                void 0 === n && (n = Ee),
                this.test({
                    name: 'max',
                    exclusive: !0,
                    message: n,
                    params: { max: t },
                    test: function (n) {
                        return ko(n) || n.length <= this.resolve(t);
                    },
                })
            );
        },
        matches: function (t, n) {
            var e,
                r,
                o = !1;
            return (
                n &&
                    ('object' == typeof n
                        ? ((o = n.excludeEmptyString),
                          (e = n.message),
                          (r = n.name))
                        : (e = n)),
                this.test({
                    name: r || 'matches',
                    message: e || Oe,
                    params: { regex: t },
                    test: function (n) {
                        return ko(n) || ('' === n && o) || -1 !== n.search(t);
                    },
                })
            );
        },
        email: function (t) {
            return (
                void 0 === t && (t = Ae),
                this.matches(wo, {
                    name: 'email',
                    message: t,
                    excludeEmptyString: !0,
                })
            );
        },
        url: function (t) {
            return (
                void 0 === t && (t = Se),
                this.matches(xo, {
                    name: 'url',
                    message: t,
                    excludeEmptyString: !0,
                })
            );
        },
        uuid: function (t) {
            return (
                void 0 === t && (t = Pe),
                this.matches(Fo, {
                    name: 'uuid',
                    message: t,
                    excludeEmptyString: !1,
                })
            );
        },
        ensure: function () {
            return this.default('').transform(function (t) {
                return null === t ? '' : t;
            });
        },
        trim: function (t) {
            return (
                void 0 === t && (t = Te),
                this.transform(function (t) {
                    return null != t ? t.trim() : t;
                }).test({ message: t, name: 'trim', test: Do })
            );
        },
        lowercase: function (t) {
            return (
                void 0 === t && (t = Me),
                this.transform(function (t) {
                    return ko(t) ? t : t.toLowerCase();
                }).test({
                    message: t,
                    name: 'string_case',
                    exclusive: !0,
                    test: function (t) {
                        return ko(t) || t === t.toLowerCase();
                    },
                })
            );
        },
        uppercase: function (t) {
            return (
                void 0 === t && (t = Be),
                this.transform(function (t) {
                    return ko(t) ? t : t.toUpperCase();
                }).test({
                    message: t,
                    name: 'string_case',
                    exclusive: !0,
                    test: function (t) {
                        return ko(t) || t === t.toUpperCase();
                    },
                })
            );
        },
    });
    function Co() {
        var t = this;
        if (!(this instanceof Co)) return new Co();
        fo.call(this, { type: 'number' }),
            this.withMutation(function () {
                t.transform(function (t) {
                    var n = t;
                    if ('string' == typeof n) {
                        if ('' === (n = n.replace(/\s/g, ''))) return NaN;
                        n = +n;
                    }
                    return this.isType(n) ? n : parseFloat(n);
                });
            });
    }
    bo(Co, fo, {
        _typeCheck: function (t) {
            return (
                t instanceof Number && (t = t.valueOf()),
                'number' == typeof t &&
                    !(function (t) {
                        return t != +t;
                    })(t)
            );
        },
        min: function (t, n) {
            return (
                void 0 === n && (n = Le),
                this.test({
                    message: n,
                    name: 'min',
                    exclusive: !0,
                    params: { min: t },
                    test: function (n) {
                        return ko(n) || n >= this.resolve(t);
                    },
                })
            );
        },
        max: function (t, n) {
            return (
                void 0 === n && (n = Ie),
                this.test({
                    message: n,
                    name: 'max',
                    exclusive: !0,
                    params: { max: t },
                    test: function (n) {
                        return ko(n) || n <= this.resolve(t);
                    },
                })
            );
        },
        lessThan: function (t, n) {
            return (
                void 0 === n && (n = Re),
                this.test({
                    message: n,
                    name: 'max',
                    exclusive: !0,
                    params: { less: t },
                    test: function (n) {
                        return ko(n) || n < this.resolve(t);
                    },
                })
            );
        },
        moreThan: function (t, n) {
            return (
                void 0 === n && (n = ze),
                this.test({
                    message: n,
                    name: 'min',
                    exclusive: !0,
                    params: { more: t },
                    test: function (n) {
                        return ko(n) || n > this.resolve(t);
                    },
                })
            );
        },
        positive: function (t) {
            return void 0 === t && (t = $e), this.moreThan(0, t);
        },
        negative: function (t) {
            return void 0 === t && (t = Ne), this.lessThan(0, t);
        },
        integer: function (t) {
            return (
                void 0 === t && (t = qe),
                this.test({
                    name: 'integer',
                    message: t,
                    test: function (t) {
                        return ko(t) || Number.isInteger(t);
                    },
                })
            );
        },
        truncate: function () {
            return this.transform(function (t) {
                return ko(t) ? t : 0 | t;
            });
        },
        round: function (t) {
            var n = ['ceil', 'floor', 'round', 'trunc'];
            if ('trunc' === (t = (t && t.toLowerCase()) || 'round'))
                return this.truncate();
            if (-1 === n.indexOf(t.toLowerCase()))
                throw new TypeError(
                    'Only valid options for round() are: ' + n.join(', ')
                );
            return this.transform(function (n) {
                return ko(n) ? n : Math[t](n);
            });
        },
    });
    var Eo = /^(\d{4}|[+\-]\d{6})(?:-?(\d{2})(?:-?(\d{2}))?)?(?:[ T]?(\d{2}):?(\d{2})(?::?(\d{2})(?:[,\.](\d{1,}))?)?(?:(Z)|([+\-])(\d{2})(?::?(\d{2}))?)?)?$/;
    var Oo = new Date('');
    function Ao(t, n) {
        return n || (n = t.slice(0)), (t.raw = n), t;
    }
    bo(
        function t() {
            var n = this;
            if (!(this instanceof t)) return new t();
            fo.call(this, { type: 'date' }),
                this.withMutation(function () {
                    n.transform(function (t) {
                        return this.isType(t)
                            ? t
                            : ((t = (function (t) {
                                  var n,
                                      e,
                                      r = [1, 4, 5, 6, 7, 10, 11],
                                      o = 0;
                                  if ((e = Eo.exec(t))) {
                                      for (var c, a = 0; (c = r[a]); ++a)
                                          e[c] = +e[c] || 0;
                                      (e[2] = (+e[2] || 1) - 1),
                                          (e[3] = +e[3] || 1),
                                          (e[7] = e[7]
                                              ? String(e[7]).substr(0, 3)
                                              : 0),
                                          (void 0 !== e[8] && '' !== e[8]) ||
                                          (void 0 !== e[9] && '' !== e[9])
                                              ? ('Z' !== e[8] &&
                                                    void 0 !== e[9] &&
                                                    ((o = 60 * e[10] + e[11]),
                                                    '+' === e[9] &&
                                                        (o = 0 - o)),
                                                (n = Date.UTC(
                                                    e[1],
                                                    e[2],
                                                    e[3],
                                                    e[4],
                                                    e[5] + o,
                                                    e[6],
                                                    e[7]
                                                )))
                                              : (n = +new Date(
                                                    e[1],
                                                    e[2],
                                                    e[3],
                                                    e[4],
                                                    e[5],
                                                    e[6],
                                                    e[7]
                                                ));
                                  } else n = Date.parse ? Date.parse(t) : NaN;
                                  return n;
                              })(t)),
                              isNaN(t) ? Oo : new Date(t));
                    });
                });
        },
        fo,
        {
            _typeCheck: function (t) {
                return (
                    (n = t),
                    '[object Date]' === Object.prototype.toString.call(n) &&
                        !isNaN(t.getTime())
                );
                var n;
            },
            min: function (t, n) {
                void 0 === n && (n = Ue);
                var e = t;
                if (!ro.isRef(e) && ((e = this.cast(t)), !this._typeCheck(e)))
                    throw new TypeError(
                        '`min` must be a Date or a value that can be `cast()` to a Date'
                    );
                return this.test({
                    message: n,
                    name: 'min',
                    exclusive: !0,
                    params: { min: t },
                    test: function (t) {
                        return ko(t) || t >= this.resolve(e);
                    },
                });
            },
            max: function (t, n) {
                void 0 === n && (n = Ve);
                var e = t;
                if (!ro.isRef(e) && ((e = this.cast(t)), !this._typeCheck(e)))
                    throw new TypeError(
                        '`max` must be a Date or a value that can be `cast()` to a Date'
                    );
                return this.test({
                    message: n,
                    name: 'max',
                    exclusive: !0,
                    params: { max: t },
                    test: function (t) {
                        return ko(t) || t <= this.resolve(e);
                    },
                });
            },
        }
    );
    var So = (function (t) {
            return function (n) {
                return null == t ? void 0 : t[n];
            };
        })({
            À: 'A',
            Á: 'A',
            Â: 'A',
            Ã: 'A',
            Ä: 'A',
            Å: 'A',
            à: 'a',
            á: 'a',
            â: 'a',
            ã: 'a',
            ä: 'a',
            å: 'a',
            Ç: 'C',
            ç: 'c',
            Ð: 'D',
            ð: 'd',
            È: 'E',
            É: 'E',
            Ê: 'E',
            Ë: 'E',
            è: 'e',
            é: 'e',
            ê: 'e',
            ë: 'e',
            Ì: 'I',
            Í: 'I',
            Î: 'I',
            Ï: 'I',
            ì: 'i',
            í: 'i',
            î: 'i',
            ï: 'i',
            Ñ: 'N',
            ñ: 'n',
            Ò: 'O',
            Ó: 'O',
            Ô: 'O',
            Õ: 'O',
            Ö: 'O',
            Ø: 'O',
            ò: 'o',
            ó: 'o',
            ô: 'o',
            õ: 'o',
            ö: 'o',
            ø: 'o',
            Ù: 'U',
            Ú: 'U',
            Û: 'U',
            Ü: 'U',
            ù: 'u',
            ú: 'u',
            û: 'u',
            ü: 'u',
            Ý: 'Y',
            ý: 'y',
            ÿ: 'y',
            Æ: 'Ae',
            æ: 'ae',
            Þ: 'Th',
            þ: 'th',
            ß: 'ss',
            Ā: 'A',
            Ă: 'A',
            Ą: 'A',
            ā: 'a',
            ă: 'a',
            ą: 'a',
            Ć: 'C',
            Ĉ: 'C',
            Ċ: 'C',
            Č: 'C',
            ć: 'c',
            ĉ: 'c',
            ċ: 'c',
            č: 'c',
            Ď: 'D',
            Đ: 'D',
            ď: 'd',
            đ: 'd',
            Ē: 'E',
            Ĕ: 'E',
            Ė: 'E',
            Ę: 'E',
            Ě: 'E',
            ē: 'e',
            ĕ: 'e',
            ė: 'e',
            ę: 'e',
            ě: 'e',
            Ĝ: 'G',
            Ğ: 'G',
            Ġ: 'G',
            Ģ: 'G',
            ĝ: 'g',
            ğ: 'g',
            ġ: 'g',
            ģ: 'g',
            Ĥ: 'H',
            Ħ: 'H',
            ĥ: 'h',
            ħ: 'h',
            Ĩ: 'I',
            Ī: 'I',
            Ĭ: 'I',
            Į: 'I',
            İ: 'I',
            ĩ: 'i',
            ī: 'i',
            ĭ: 'i',
            į: 'i',
            ı: 'i',
            Ĵ: 'J',
            ĵ: 'j',
            Ķ: 'K',
            ķ: 'k',
            ĸ: 'k',
            Ĺ: 'L',
            Ļ: 'L',
            Ľ: 'L',
            Ŀ: 'L',
            Ł: 'L',
            ĺ: 'l',
            ļ: 'l',
            ľ: 'l',
            ŀ: 'l',
            ł: 'l',
            Ń: 'N',
            Ņ: 'N',
            Ň: 'N',
            Ŋ: 'N',
            ń: 'n',
            ņ: 'n',
            ň: 'n',
            ŋ: 'n',
            Ō: 'O',
            Ŏ: 'O',
            Ő: 'O',
            ō: 'o',
            ŏ: 'o',
            ő: 'o',
            Ŕ: 'R',
            Ŗ: 'R',
            Ř: 'R',
            ŕ: 'r',
            ŗ: 'r',
            ř: 'r',
            Ś: 'S',
            Ŝ: 'S',
            Ş: 'S',
            Š: 'S',
            ś: 's',
            ŝ: 's',
            ş: 's',
            š: 's',
            Ţ: 'T',
            Ť: 'T',
            Ŧ: 'T',
            ţ: 't',
            ť: 't',
            ŧ: 't',
            Ũ: 'U',
            Ū: 'U',
            Ŭ: 'U',
            Ů: 'U',
            Ű: 'U',
            Ų: 'U',
            ũ: 'u',
            ū: 'u',
            ŭ: 'u',
            ů: 'u',
            ű: 'u',
            ų: 'u',
            Ŵ: 'W',
            ŵ: 'w',
            Ŷ: 'Y',
            ŷ: 'y',
            Ÿ: 'Y',
            Ź: 'Z',
            Ż: 'Z',
            Ž: 'Z',
            ź: 'z',
            ż: 'z',
            ž: 'z',
            Ĳ: 'IJ',
            ĳ: 'ij',
            Œ: 'Oe',
            œ: 'oe',
            ŉ: "'n",
            ſ: 's',
        }),
        Po = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
        To = RegExp('[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]', 'g');
    var Mo = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
    var Bo = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
    var Lo = '\\u2700-\\u27bf',
        Io = 'a-z\\xdf-\\xf6\\xf8-\\xff',
        Ro = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
        zo =
            '\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
        $o = '[' + zo + ']',
        No = '\\d+',
        qo = '[\\u2700-\\u27bf]',
        Uo = '[' + Io + ']',
        Vo = '[^\\ud800-\\udfff' + zo + No + Lo + Io + Ro + ']',
        Go = '(?:\\ud83c[\\udde6-\\uddff]){2}',
        Ho = '[\\ud800-\\udbff][\\udc00-\\udfff]',
        Ko = '[' + Ro + ']',
        Yo = '(?:' + Uo + '|' + Vo + ')',
        Zo = '(?:' + Ko + '|' + Vo + ')',
        Jo = "(?:['’](?:d|ll|m|re|s|t|ve))?",
        Wo = "(?:['’](?:D|LL|M|RE|S|T|VE))?",
        Xo =
            '(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?',
        Qo = '[\\ufe0e\\ufe0f]?',
        tc =
            Qo +
            Xo +
            ('(?:\\u200d(?:' +
                ['[^\\ud800-\\udfff]', Go, Ho].join('|') +
                ')' +
                Qo +
                Xo +
                ')*'),
        nc = '(?:' + [qo, Go, Ho].join('|') + ')' + tc,
        ec = RegExp(
            [
                Ko +
                    '?' +
                    Uo +
                    '+' +
                    Jo +
                    '(?=' +
                    [$o, Ko, '$'].join('|') +
                    ')',
                Zo + '+' + Wo + '(?=' + [$o, Ko + Yo, '$'].join('|') + ')',
                Ko + '?' + Yo + '+' + Jo,
                Ko + '+' + Wo,
                '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
                '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
                No,
                nc,
            ].join('|'),
            'g'
        );
    function rc(t, n, e) {
        return (
            (t = ut(t)),
            void 0 === (n = e ? void 0 : n)
                ? (function (t) {
                      return Bo.test(t);
                  })(t)
                    ? (function (t) {
                          return t.match(ec) || [];
                      })(t)
                    : (function (t) {
                          return t.match(Mo) || [];
                      })(t)
                : t.match(n) || []
        );
    }
    var oc = RegExp("['’]", 'g');
    function cc(t) {
        return function (n) {
            return (function (t, n, e, r) {
                var o = -1,
                    c = null == t ? 0 : t.length;
                for (r && c && (e = t[++o]); ++o < c; ) e = n(e, t[o], o, t);
                return e;
            })(
                rc(
                    (function (t) {
                        return (t = ut(t)) && t.replace(Po, So).replace(To, '');
                    })(n).replace(oc, '')
                ),
                t,
                ''
            );
        };
    }
    var ac = cc(function (t, n, e) {
        return t + (e ? '_' : '') + n.toLowerCase();
    });
    function ic(t, n, e) {
        var r = t.length;
        return (
            (e = void 0 === e ? r : e),
            !n && e >= r
                ? t
                : (function (t, n, e) {
                      var r = -1,
                          o = t.length;
                      n < 0 && (n = -n > o ? 0 : o + n),
                          (e = e > o ? o : e) < 0 && (e += o),
                          (o = n > e ? 0 : (e - n) >>> 0),
                          (n >>>= 0);
                      for (var c = Array(o); ++r < o; ) c[r] = t[r + n];
                      return c;
                  })(t, n, e)
        );
    }
    var uc,
        sc =
            ((uc = 'toUpperCase'),
            function (t) {
                var n = Wn((t = ut(t))) ? se(t) : void 0,
                    e = n ? n[0] : t.charAt(0),
                    r = n ? ic(n, 1).join('') : t.slice(1);
                return e[uc]() + r;
            });
    var fc = cc(function (t, n, e) {
        return (
            (n = n.toLowerCase()),
            t +
                (e
                    ? (function (t) {
                          return sc(ut(t).toLowerCase());
                      })(n)
                    : n)
        );
    });
    var lc = function (t) {
        return hc(
            (function (t) {
                for (var n = new Set(), e = 0, r = t.length; e < r; e++) {
                    var o = t[e];
                    n.add(o[0]), n.add(o[1]);
                }
                return Array.from(n);
            })(t),
            t
        );
    };
    function hc(t, n) {
        var e = t.length,
            r = new Array(e),
            o = {},
            c = e,
            a = (function (t) {
                for (var n = new Map(), e = 0, r = t.length; e < r; e++) {
                    var o = t[e];
                    n.has(o[0]) || n.set(o[0], new Set()),
                        n.has(o[1]) || n.set(o[1], new Set()),
                        n.get(o[0]).add(o[1]);
                }
                return n;
            })(n),
            i = (function (t) {
                for (var n = new Map(), e = 0, r = t.length; e < r; e++)
                    n.set(t[e], e);
                return n;
            })(t);
        for (
            n.forEach(function (t) {
                if (!i.has(t[0]) || !i.has(t[1]))
                    throw new Error(
                        'Unknown node. There is an unknown node in the supplied edges.'
                    );
            });
            c--;

        )
            o[c] || u(t[c], c, new Set());
        return r;
        function u(t, n, c) {
            if (c.has(t)) {
                var s;
                try {
                    s = ', node was:' + JSON.stringify(t);
                } catch (t) {
                    s = '';
                }
                throw new Error('Cyclic dependency' + s);
            }
            if (!i.has(t))
                throw new Error(
                    'Found unknown node. Make sure to provided all involved nodes. Unknown node: ' +
                        JSON.stringify(t)
                );
            if (!o[n]) {
                o[n] = !0;
                var f = a.get(t) || new Set();
                if ((n = (f = Array.from(f)).length)) {
                    c.add(t);
                    do {
                        var l = f[--n];
                        u(l, i.get(l), c);
                    } while (n);
                    c.delete(t);
                }
                r[--e] = t;
            }
        }
    }
    function pc(t, n) {
        void 0 === n && (n = []);
        var e = [],
            r = [];
        function o(t, o) {
            var c = Jr.split(t)[0];
            ~r.indexOf(c) || r.push(c),
                ~n.indexOf(o + '-' + c) || e.push([o, c]);
        }
        for (var c in t)
            if (bt(t, c)) {
                var a = t[c];
                ~r.indexOf(c) || r.push(c),
                    ro.isRef(a) && a.isSibling
                        ? o(a.path, c)
                        : Ye(a) &&
                          a._deps &&
                          a._deps.forEach(function (t) {
                              return o(t, c);
                          });
            }
        return lc.array(r, e).reverse();
    }
    function dc(t, n) {
        var e = 1 / 0;
        return (
            t.some(function (t, r) {
                if (-1 !== n.path.indexOf(t)) return (e = r), !0;
            }),
            e
        );
    }
    function vc(t) {
        var n = Object.keys(t);
        return function (t, e) {
            return dc(n, t) - dc(n, e);
        };
    }
    function yc(t) {
        for (
            var n = arguments.length, e = new Array(n > 1 ? n - 1 : 0), r = 1;
            r < n;
            r++
        )
            e[r - 1] = arguments[r];
        var o = t.reduce(function (t, n) {
            var r = e.shift();
            return t + (null == r ? '' : r) + n;
        });
        return o.replace(/^\./, '');
    }
    function gc() {
        var t = Ao(['', '["', '"]']);
        return (
            (gc = function () {
                return t;
            }),
            t
        );
    }
    function mc() {
        var t = Ao(['', '.', '']);
        return (
            (mc = function () {
                return t;
            }),
            t
        );
    }
    function _c() {
        var t = Ao(['', '.', '']);
        return (
            (_c = function () {
                return t;
            }),
            t
        );
    }
    lc.array = hc;
    var bc = function (t) {
        return '[object Object]' === Object.prototype.toString.call(t);
    };
    function kc(t) {
        var n = this;
        if (!(this instanceof kc)) return new kc(t);
        fo.call(this, {
            type: 'object',
            default: function () {
                var t = this;
                if (this._nodes.length) {
                    var n = {};
                    return (
                        this._nodes.forEach(function (e) {
                            n[e] = t.fields[e].default
                                ? t.fields[e].default()
                                : void 0;
                        }),
                        n
                    );
                }
            },
        }),
            (this.fields = Object.create(null)),
            (this._nodes = []),
            (this._excludedEdges = []),
            this.withMutation(function () {
                n.transform(function (t) {
                    if ('string' == typeof t)
                        try {
                            t = JSON.parse(t);
                        } catch (n) {
                            t = null;
                        }
                    return this.isType(t) ? t : null;
                }),
                    t && n.shape(t);
            });
    }
    function wc() {
        var t = Ao(['', '[', ']']);
        return (
            (wc = function () {
                return t;
            }),
            t
        );
    }
    function xc() {
        var t = Ao(['', '[', ']']);
        return (
            (xc = function () {
                return t;
            }),
            t
        );
    }
    function Fc(t) {
        return (
            (t = r(
                r(
                    {},
                    {
                        getViewBox: function (t) {
                            if (!t) return '0 0 0 0';
                            var n = t.getModuleCount();
                            return t.$options.isSpace
                                ? ''
                                      .concat(-n / 5, ' ')
                                      .concat(-n / 5, ' ')
                                      .concat(n + (n / 5) * 2, ' ')
                                      .concat(n + (n / 5) * 2)
                                : ''.concat(0, ' ', 0, ' ', n, ' ').concat(n);
                        },
                        listPoints: function (t, n) {
                            return [];
                        },
                        getParamInfo: function () {
                            return [];
                        },
                        beginRendering: function (t) {
                            t.qrcode, t.params, t.setParamInfo;
                        },
                        beforeListing: function (t) {
                            t.qrcode, t.params, t.setParamInfo;
                        },
                        afterListing: function (t) {
                            t.qrcode, t.params, t.setParamInfo;
                        },
                    }
                ),
                t
            )),
            function (n) {
                var e = n.qrcode,
                    r = n.params,
                    o = e.$options,
                    c = o.width,
                    a = o.height;
                return '\n            <svg width="'
                    .concat(c, '" height="')
                    .concat(a, '" viewBox="')
                    .concat(
                        t.getViewBox(e),
                        '" fill="white"\n                 xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">\n                '
                    )
                    .concat(
                        t.listPoints(e, r).join(''),
                        '\n            </svg>\n        '
                    );
            }
        );
    }
    function Dc(t) {
        (this.mode = Cc.MODE_8BIT_BYTE),
            (this.data = t),
            (this.parsedData = []);
        for (var n = 0, e = this.data.length; n < e; n++) {
            var r = [],
                o = this.data.charCodeAt(n);
            o > 65536
                ? ((r[0] = 240 | ((1835008 & o) >>> 18)),
                  (r[1] = 128 | ((258048 & o) >>> 12)),
                  (r[2] = 128 | ((4032 & o) >>> 6)),
                  (r[3] = 128 | (63 & o)))
                : o > 2048
                ? ((r[0] = 224 | ((61440 & o) >>> 12)),
                  (r[1] = 128 | ((4032 & o) >>> 6)),
                  (r[2] = 128 | (63 & o)))
                : o > 128
                ? ((r[0] = 192 | ((1984 & o) >>> 6)), (r[1] = 128 | (63 & o)))
                : (r[0] = o),
                this.parsedData.push(r);
        }
        (this.parsedData = Array.prototype.concat.apply([], this.parsedData)),
            this.parsedData.length != this.data.length &&
                (this.parsedData.unshift(191),
                this.parsedData.unshift(187),
                this.parsedData.unshift(239));
    }
    function jc(t, n) {
        (this.typeNumber = t),
            (this.errorCorrectLevel = n),
            (this.modules = null),
            (this.moduleCount = 0),
            (this.position = []),
            (this.dataCache = null),
            (this.dataList = []);
    }
    bo(kc, fo, {
        _typeCheck: function (t) {
            return bc(t) || 'function' == typeof t;
        },
        _cast: function (t, n) {
            var e = this;
            void 0 === n && (n = {});
            var r = fo.prototype._cast.call(this, t, n);
            if (void 0 === r) return this.default();
            if (!this._typeCheck(r)) return r;
            var c = this.fields,
                a = !0 === this._option('stripUnknown', n),
                i = this._nodes.concat(
                    Object.keys(r).filter(function (t) {
                        return -1 === e._nodes.indexOf(t);
                    })
                ),
                u = {},
                s = o({}, n, { parent: u, __validating: n.__validating || !1 }),
                f = !1;
            return (
                i.forEach(function (t) {
                    var e = c[t],
                        o = bt(r, t);
                    if (e) {
                        var i,
                            l = e._options && e._options.strict;
                        if (
                            ((s.path = yc(_c(), n.path, t)),
                            (s.value = r[t]),
                            !0 === (e = e.resolve(s))._strip)
                        )
                            return void (f = f || t in r);
                        void 0 !==
                            (i =
                                n.__validating && l ? r[t] : e.cast(r[t], s)) &&
                            (u[t] = i);
                    } else o && !a && (u[t] = r[t]);
                    u[t] !== r[t] && (f = !0);
                }),
                f ? u : r
            );
        },
        _validate: function (t, n) {
            var e,
                r,
                c = this;
            void 0 === n && (n = {});
            var a = n.sync,
                i = [],
                u = null != n.originalValue ? n.originalValue : t,
                s = [{ schema: this, value: u }].concat(n.from || []);
            return (
                (e = this._option('abortEarly', n)),
                (r = this._option('recursive', n)),
                (n = o({}, n, { __validating: !0, originalValue: u, from: s })),
                fo.prototype._validate
                    .call(this, t, n)
                    .catch(fr(e, i))
                    .then(function (t) {
                        if (!r || !bc(t)) {
                            if (i.length) throw i[0];
                            return t;
                        }
                        (s = u
                            ? [].concat(s)
                            : [{ schema: c, value: u || t }].concat(
                                  n.from || []
                              )),
                            (u = u || t);
                        var f = c._nodes.map(function (e) {
                            var r =
                                    -1 === e.indexOf('.')
                                        ? yc(mc(), n.path, e)
                                        : yc(gc(), n.path, e),
                                i = c.fields[e],
                                f = o({}, n, {
                                    path: r,
                                    from: s,
                                    parent: t,
                                    originalValue: u[e],
                                });
                            return i && i.validate
                                ? ((f.strict = !0), i.validate(t[e], f))
                                : (function (t) {
                                      return t
                                          ? cr.SynchronousPromise
                                          : Promise;
                                  })(a).resolve(!0);
                        });
                        return hr({
                            sync: a,
                            validations: f,
                            value: t,
                            errors: i,
                            endEarly: e,
                            path: n.path,
                            sort: vc(c.fields),
                        });
                    })
            );
        },
        concat: function (t) {
            var n = fo.prototype.concat.call(this, t);
            return (n._nodes = pc(n.fields, n._excludedEdges)), n;
        },
        shape: function (t, n) {
            void 0 === n && (n = []);
            var e = this.clone(),
                r = o(e.fields, t);
            if (((e.fields = r), n.length)) {
                Array.isArray(n[0]) || (n = [n]);
                var c = n.map(function (t) {
                    return t[0] + '-' + t[1];
                });
                e._excludedEdges = e._excludedEdges.concat(c);
            }
            return (e._nodes = pc(r, e._excludedEdges)), e;
        },
        from: function (t, n, e) {
            var r = Jr.getter(t, !0);
            return this.transform(function (c) {
                if (null == c) return c;
                var a = c;
                return (
                    bt(c, t) &&
                        ((a = o({}, c)), e || delete a[t], (a[n] = r(c))),
                    a
                );
            });
        },
        noUnknown: function (t, n) {
            void 0 === t && (t = !0),
                void 0 === n && (n = Ge),
                'string' == typeof t && ((n = t), (t = !0));
            var e = this.test({
                name: 'noUnknown',
                exclusive: !0,
                message: n,
                test: function (n) {
                    if (null == n) return !0;
                    var e = (function (t, n) {
                        var e = Object.keys(t.fields);
                        return Object.keys(n).filter(function (t) {
                            return -1 === e.indexOf(t);
                        });
                    })(this.schema, n);
                    return (
                        !t ||
                        0 === e.length ||
                        this.createError({ params: { unknown: e.join(', ') } })
                    );
                },
            });
            return (e._options.stripUnknown = t), e;
        },
        unknown: function (t, n) {
            return (
                void 0 === t && (t = !0),
                void 0 === n && (n = Ge),
                this.noUnknown(!t, n)
            );
        },
        transformKeys: function (t) {
            return this.transform(function (n) {
                return (
                    n &&
                    (function (t, n) {
                        var e = {};
                        return (
                            (n = zr(n)),
                            gr(t, function (t, r, o) {
                                xt(e, n(t, r, o), t);
                            }),
                            e
                        );
                    })(n, function (n, e) {
                        return t(e);
                    })
                );
            });
        },
        camelCase: function () {
            return this.transformKeys(fc);
        },
        snakeCase: function () {
            return this.transformKeys(ac);
        },
        constantCase: function () {
            return this.transformKeys(function (t) {
                return ac(t).toUpperCase();
            });
        },
        describe: function () {
            var t = fo.prototype.describe.call(this);
            return (
                (t.fields = $r(this.fields, function (t) {
                    return t.describe();
                })),
                t
            );
        },
    }),
        bo(
            function t(n) {
                var e = this;
                if (!(this instanceof t)) return new t(n);
                fo.call(this, { type: 'array' }),
                    (this._subType = void 0),
                    (this.innerType = void 0),
                    this.withMutation(function () {
                        e.transform(function (t) {
                            if ('string' == typeof t)
                                try {
                                    t = JSON.parse(t);
                                } catch (n) {
                                    t = null;
                                }
                            return this.isType(t) ? t : null;
                        }),
                            n && e.of(n);
                    });
            },
            fo,
            {
                _typeCheck: function (t) {
                    return Array.isArray(t);
                },
                _cast: function (t, n) {
                    var e = this,
                        r = fo.prototype._cast.call(this, t, n);
                    if (!this._typeCheck(r) || !this.innerType) return r;
                    var c = !1,
                        a = r.map(function (t, r) {
                            var a = e.innerType.cast(
                                t,
                                o({}, n, { path: yc(xc(), n.path, r) })
                            );
                            return a !== t && (c = !0), a;
                        });
                    return c ? a : r;
                },
                _validate: function (t, n) {
                    var e = this;
                    void 0 === n && (n = {});
                    var r = [],
                        c = n.sync,
                        a = n.path,
                        i = this.innerType,
                        u = this._option('abortEarly', n),
                        s = this._option('recursive', n),
                        f = null != n.originalValue ? n.originalValue : t;
                    return fo.prototype._validate
                        .call(this, t, n)
                        .catch(fr(u, r))
                        .then(function (t) {
                            if (!s || !i || !e._typeCheck(t)) {
                                if (r.length) throw r[0];
                                return t;
                            }
                            f = f || t;
                            for (
                                var l = new Array(t.length), h = 0;
                                h < t.length;
                                h++
                            ) {
                                var p = t[h],
                                    d = yc(wc(), n.path, h),
                                    v = o({}, n, {
                                        path: d,
                                        strict: !0,
                                        parent: t,
                                        index: h,
                                        originalValue: f[h],
                                    });
                                l[h] = !i.validate || i.validate(p, v);
                            }
                            return hr({
                                sync: c,
                                path: a,
                                value: t,
                                errors: r,
                                endEarly: u,
                                validations: l,
                            });
                        });
                },
                _isPresent: function (t) {
                    return (
                        fo.prototype._isPresent.call(this, t) && t.length > 0
                    );
                },
                of: function (t) {
                    var n = this.clone();
                    if (!1 !== t && !Ye(t))
                        throw new TypeError(
                            '`array.of()` sub-schema must be a valid yup schema, or `false` to negate a current sub-schema. not: ' +
                                _e(t)
                        );
                    return (n._subType = t), (n.innerType = t), n;
                },
                min: function (t, n) {
                    return (
                        (n = n || He),
                        this.test({
                            message: n,
                            name: 'min',
                            exclusive: !0,
                            params: { min: t },
                            test: function (n) {
                                return ko(n) || n.length >= this.resolve(t);
                            },
                        })
                    );
                },
                max: function (t, n) {
                    return (
                        (n = n || Ke),
                        this.test({
                            message: n,
                            name: 'max',
                            exclusive: !0,
                            params: { max: t },
                            test: function (n) {
                                return ko(n) || n.length <= this.resolve(t);
                            },
                        })
                    );
                },
                ensure: function () {
                    var t = this;
                    return this.default(function () {
                        return [];
                    }).transform(function (n, e) {
                        return t._typeCheck(n)
                            ? n
                            : null == e
                            ? []
                            : [].concat(e);
                    });
                },
                compact: function (t) {
                    var n = t
                        ? function (n, e, r) {
                              return !t(n, e, r);
                          }
                        : function (t) {
                              return !!t;
                          };
                    return this.transform(function (t) {
                        return null != t ? t.filter(n) : t;
                    });
                },
                describe: function () {
                    var t = fo.prototype.describe.call(this);
                    return (
                        this.innerType &&
                            (t.innerType = this.innerType.describe()),
                        t
                    );
                },
            }
        ),
        (Dc.prototype = {
            getLength: function (t) {
                return this.parsedData.length;
            },
            write: function (t) {
                for (var n = 0, e = this.parsedData.length; n < e; n++)
                    t.put(this.parsedData[n], 8);
            },
        }),
        (jc.prototype = {
            addData: function (t) {
                var n = new Dc(t);
                this.dataList.push(n), (this.dataCache = null);
            },
            isDark: function (t, n) {
                if (
                    t < 0 ||
                    this.moduleCount <= t ||
                    n < 0 ||
                    this.moduleCount <= n
                )
                    throw new Error(t + ',' + n);
                return this.modules[t][n];
            },
            getModuleCount: function () {
                return this.moduleCount;
            },
            getPositionTable: function () {
                return this.position;
            },
            make: function () {
                if (this.typeNumber < 1) {
                    var t = 1;
                    for (t = 1; t < 40; t++) {
                        for (
                            var n = Hc.getRSBlocks(t, this.errorCorrectLevel),
                                e = new Kc(),
                                r = 0,
                                o = 0;
                            o < n.length;
                            o++
                        )
                            r += n[o].dataCount;
                        for (var c = 0; c < this.dataList.length; c++) {
                            var a = this.dataList[c];
                            e.put(a.mode, 4),
                                e.put(
                                    a.getLength(),
                                    $c.getLengthInBits(a.mode, t)
                                ),
                                a.write(e);
                        }
                        if (e.getLengthInBits() <= 8 * r) break;
                    }
                    this.typeNumber = t;
                }
                this.makeImpl(!1, this.getBestMaskPattern());
            },
            makeImpl: function (t, n) {
                (this.moduleCount = 4 * this.typeNumber + 17),
                    (this.modules = new Array(this.moduleCount));
                for (var e = 0; e < this.moduleCount; e++) {
                    this.modules[e] = new Array(this.moduleCount);
                    for (var r = 0; r < this.moduleCount; r++)
                        this.modules[e][r] = null;
                }
                this.setupPositionProbePattern(0, 0),
                    this.setupPositionProbePattern(this.moduleCount - 7, 0),
                    this.setupPositionProbePattern(0, this.moduleCount - 7),
                    this.setupPositionAdjustPattern(),
                    this.setupTimingPattern(),
                    this.setupTypeInfo(t, n),
                    this.typeNumber >= 7 && this.setupTypeNumber(t),
                    null == this.dataCache &&
                        (this.dataCache = jc.createData(
                            this.typeNumber,
                            this.errorCorrectLevel,
                            this.dataList
                        )),
                    this.mapData(this.dataCache, n);
            },
            setupPositionProbePattern: function (t, n) {
                for (var e = -1; e <= 7; e++)
                    if (!(t + e <= -1 || this.moduleCount <= t + e))
                        for (var r = -1; r <= 7; r++)
                            n + r <= -1 ||
                                this.moduleCount <= n + r ||
                                (this.modules[t + e][n + r] =
                                    (0 <= e && e <= 6 && (0 == r || 6 == r)) ||
                                    (0 <= r && r <= 6 && (0 == e || 6 == e)) ||
                                    (2 <= e && e <= 4 && 2 <= r && r <= 4));
            },
            getBestMaskPattern: function () {
                for (var t = 0, n = 0, e = 0; e < 8; e++) {
                    this.makeImpl(!0, e);
                    var r = $c.getLostPoint(this);
                    (0 == e || t > r) && ((t = r), (n = e));
                }
                return n;
            },
            createMovieClip: function (t, n, e) {
                var r = t.createEmptyMovieClip(n, e);
                this.make();
                for (var o = 0; o < this.modules.length; o++)
                    for (
                        var c = 1 * o, a = 0;
                        a < this.modules[o].length;
                        a++
                    ) {
                        var i = 1 * a;
                        this.modules[o][a] &&
                            (r.beginFill(0, 100),
                            r.moveTo(i, c),
                            r.lineTo(i + 1, c),
                            r.lineTo(i + 1, c + 1),
                            r.lineTo(i, c + 1),
                            r.endFill());
                    }
                return r;
            },
            setupTimingPattern: function () {
                for (var t = 8; t < this.moduleCount - 8; t++)
                    null == this.modules[t][6] &&
                        (this.modules[t][6] = t % 2 == 0);
                for (var n = 8; n < this.moduleCount - 8; n++)
                    null == this.modules[6][n] &&
                        (this.modules[6][n] = n % 2 == 0);
            },
            setupPositionAdjustPattern: function () {
                var t = $c.getPatternPosition(this.typeNumber);
                this.position = [];
                for (var n = 0; n < t.length; n++)
                    for (var e = 0; e < t.length; e++) {
                        var r = t[n],
                            o = t[e];
                        if (null == this.modules[r][o]) {
                            this.position.push([r, o]);
                            for (var c = -2; c <= 2; c++)
                                for (var a = -2; a <= 2; a++)
                                    this.modules[r + c][o + a] =
                                        -2 == c ||
                                        2 == c ||
                                        -2 == a ||
                                        2 == a ||
                                        (0 == c && 0 == a);
                        }
                    }
            },
            setupTypeNumber: function (t) {
                for (
                    var n = $c.getBCHTypeNumber(this.typeNumber), e = 0;
                    e < 18;
                    e++
                ) {
                    var r = !t && 1 == ((n >> e) & 1);
                    this.modules[Math.floor(e / 3)][
                        (e % 3) + this.moduleCount - 8 - 3
                    ] = r;
                }
                for (var o = 0; o < 18; o++) {
                    var c = !t && 1 == ((n >> o) & 1);
                    this.modules[(o % 3) + this.moduleCount - 8 - 3][
                        Math.floor(o / 3)
                    ] = c;
                }
            },
            setupTypeInfo: function (t, n) {
                for (
                    var e = (this.errorCorrectLevel << 3) | n,
                        r = $c.getBCHTypeInfo(e),
                        o = 0;
                    o < 15;
                    o++
                ) {
                    var c = !t && 1 == ((r >> o) & 1);
                    o < 6
                        ? (this.modules[o][8] = c)
                        : o < 8
                        ? (this.modules[o + 1][8] = c)
                        : (this.modules[this.moduleCount - 15 + o][8] = c);
                }
                for (var a = 0; a < 15; a++) {
                    var i = !t && 1 == ((r >> a) & 1);
                    a < 8
                        ? (this.modules[8][this.moduleCount - a - 1] = i)
                        : a < 9
                        ? (this.modules[8][15 - a - 1 + 1] = i)
                        : (this.modules[8][15 - a - 1] = i);
                }
                this.modules[this.moduleCount - 8][8] = !t;
            },
            mapData: function (t, n) {
                for (
                    var e = -1,
                        r = this.moduleCount - 1,
                        o = 7,
                        c = 0,
                        a = this.moduleCount - 1;
                    a > 0;
                    a -= 2
                )
                    for (6 == a && a--; ; ) {
                        for (var i = 0; i < 2; i++)
                            if (null == this.modules[r][a - i]) {
                                var u = !1;
                                c < t.length && (u = 1 == ((t[c] >>> o) & 1)),
                                    $c.getMask(n, r, a - i) && (u = !u),
                                    (this.modules[r][a - i] = u),
                                    -1 == --o && (c++, (o = 7));
                            }
                        if ((r += e) < 0 || this.moduleCount <= r) {
                            (r -= e), (e = -e);
                            break;
                        }
                    }
            },
        }),
        (jc.PAD0 = 236),
        (jc.PAD1 = 17),
        (jc.createData = function (t, n, e) {
            for (
                var r = Hc.getRSBlocks(t, n), o = new Kc(), c = 0;
                c < e.length;
                c++
            ) {
                var a = e[c];
                o.put(a.mode, 4),
                    o.put(a.getLength(), $c.getLengthInBits(a.mode, t)),
                    a.write(o);
            }
            for (var i = 0, u = 0; u < r.length; u++) i += r[u].dataCount;
            if (o.getLengthInBits() > 8 * i)
                throw new Error(
                    'code length overflow. (' +
                        o.getLengthInBits() +
                        '>' +
                        8 * i +
                        ')'
                );
            for (
                o.getLengthInBits() + 4 <= 8 * i && o.put(0, 4);
                o.getLengthInBits() % 8 != 0;

            )
                o.putBit(!1);
            for (
                ;
                !(
                    o.getLengthInBits() >= 8 * i ||
                    (o.put(jc.PAD0, 8), o.getLengthInBits() >= 8 * i)
                );

            )
                o.put(jc.PAD1, 8);
            return jc.createBytes(o, r);
        }),
        (jc.createBytes = function (t, n) {
            for (
                var e = 0,
                    r = 0,
                    o = 0,
                    c = new Array(n.length),
                    a = new Array(n.length),
                    i = 0;
                i < n.length;
                i++
            ) {
                var u = n[i].dataCount,
                    s = n[i].totalCount - u;
                (r = Math.max(r, u)),
                    (o = Math.max(o, s)),
                    (c[i] = new Array(u));
                for (var f = 0; f < c[i].length; f++)
                    c[i][f] = 255 & t.buffer[f + e];
                e += u;
                var l = $c.getErrorCorrectPolynomial(s),
                    h = new Gc(c[i], l.getLength() - 1).mod(l);
                a[i] = new Array(l.getLength() - 1);
                for (var p = 0; p < a[i].length; p++) {
                    var d = p + h.getLength() - a[i].length;
                    a[i][p] = d >= 0 ? h.get(d) : 0;
                }
            }
            for (var v = 0, y = 0; y < n.length; y++) v += n[y].totalCount;
            for (var g = new Array(v), m = 0, _ = 0; _ < r; _++)
                for (var b = 0; b < n.length; b++)
                    _ < c[b].length && (g[m++] = c[b][_]);
            for (var k = 0; k < o; k++)
                for (var w = 0; w < n.length; w++)
                    k < a[w].length && (g[m++] = a[w][k]);
            return g;
        });
    for (
        var Cc = {
                MODE_NUMBER: 1,
                MODE_ALPHA_NUM: 2,
                MODE_8BIT_BYTE: 4,
                MODE_KANJI: 8,
            },
            Ec = 1,
            Oc = 0,
            Ac = 3,
            Sc = 2,
            Pc = 0,
            Tc = 1,
            Mc = 2,
            Bc = 3,
            Lc = 4,
            Ic = 5,
            Rc = 6,
            zc = 7,
            $c = {
                PATTERN_POSITION_TABLE: [
                    [],
                    [6, 18],
                    [6, 22],
                    [6, 26],
                    [6, 30],
                    [6, 34],
                    [6, 22, 38],
                    [6, 24, 42],
                    [6, 26, 46],
                    [6, 28, 50],
                    [6, 30, 54],
                    [6, 32, 58],
                    [6, 34, 62],
                    [6, 26, 46, 66],
                    [6, 26, 48, 70],
                    [6, 26, 50, 74],
                    [6, 30, 54, 78],
                    [6, 30, 56, 82],
                    [6, 30, 58, 86],
                    [6, 34, 62, 90],
                    [6, 28, 50, 72, 94],
                    [6, 26, 50, 74, 98],
                    [6, 30, 54, 78, 102],
                    [6, 28, 54, 80, 106],
                    [6, 32, 58, 84, 110],
                    [6, 30, 58, 86, 114],
                    [6, 34, 62, 90, 118],
                    [6, 26, 50, 74, 98, 122],
                    [6, 30, 54, 78, 102, 126],
                    [6, 26, 52, 78, 104, 130],
                    [6, 30, 56, 82, 108, 134],
                    [6, 34, 60, 86, 112, 138],
                    [6, 30, 58, 86, 114, 142],
                    [6, 34, 62, 90, 118, 146],
                    [6, 30, 54, 78, 102, 126, 150],
                    [6, 24, 50, 76, 102, 128, 154],
                    [6, 28, 54, 80, 106, 132, 158],
                    [6, 32, 58, 84, 110, 136, 162],
                    [6, 26, 54, 82, 110, 138, 166],
                    [6, 30, 58, 86, 114, 142, 170],
                ],
                G15: 1335,
                G18: 7973,
                G15_MASK: 21522,
                getBCHTypeInfo: function (t) {
                    for (
                        var n = t << 10;
                        $c.getBCHDigit(n) - $c.getBCHDigit($c.G15) >= 0;

                    )
                        n ^=
                            $c.G15 <<
                            ($c.getBCHDigit(n) - $c.getBCHDigit($c.G15));
                    return ((t << 10) | n) ^ $c.G15_MASK;
                },
                getBCHTypeNumber: function (t) {
                    for (
                        var n = t << 12;
                        $c.getBCHDigit(n) - $c.getBCHDigit($c.G18) >= 0;

                    )
                        n ^=
                            $c.G18 <<
                            ($c.getBCHDigit(n) - $c.getBCHDigit($c.G18));
                    return (t << 12) | n;
                },
                getBCHDigit: function (t) {
                    for (var n = 0; 0 != t; ) n++, (t >>>= 1);
                    return n;
                },
                getPatternPosition: function (t) {
                    return $c.PATTERN_POSITION_TABLE[t - 1];
                },
                getMask: function (t, n, e) {
                    switch (t) {
                        case Pc:
                            return (n + e) % 2 == 0;
                        case Tc:
                            return n % 2 == 0;
                        case Mc:
                            return e % 3 == 0;
                        case Bc:
                            return (n + e) % 3 == 0;
                        case Lc:
                            return (
                                (Math.floor(n / 2) + Math.floor(e / 3)) % 2 == 0
                            );
                        case Ic:
                            return ((n * e) % 2) + ((n * e) % 3) == 0;
                        case Rc:
                            return (((n * e) % 2) + ((n * e) % 3)) % 2 == 0;
                        case zc:
                            return (((n * e) % 3) + ((n + e) % 2)) % 2 == 0;
                        default:
                            throw new Error('bad maskPattern:' + t);
                    }
                },
                getErrorCorrectPolynomial: function (t) {
                    for (var n = new Gc([1], 0), e = 0; e < t; e++)
                        n = n.multiply(new Gc([1, Nc.gexp(e)], 0));
                    return n;
                },
                getLengthInBits: function (t, n) {
                    if (1 <= n && n < 10)
                        switch (t) {
                            case Cc.MODE_NUMBER:
                                return 10;
                            case Cc.MODE_ALPHA_NUM:
                                return 9;
                            case Cc.MODE_8BIT_BYTE:
                            case Cc.MODE_KANJI:
                                return 8;
                            default:
                                throw new Error('mode:' + t);
                        }
                    else if (n < 27)
                        switch (t) {
                            case Cc.MODE_NUMBER:
                                return 12;
                            case Cc.MODE_ALPHA_NUM:
                                return 11;
                            case Cc.MODE_8BIT_BYTE:
                                return 16;
                            case Cc.MODE_KANJI:
                                return 10;
                            default:
                                throw new Error('mode:' + t);
                        }
                    else {
                        if (!(n < 41)) throw new Error('type:' + n);
                        switch (t) {
                            case Cc.MODE_NUMBER:
                                return 14;
                            case Cc.MODE_ALPHA_NUM:
                                return 13;
                            case Cc.MODE_8BIT_BYTE:
                                return 16;
                            case Cc.MODE_KANJI:
                                return 12;
                            default:
                                throw new Error('mode:' + t);
                        }
                    }
                },
                getLostPoint: function (t) {
                    for (var n = t.getModuleCount(), e = 0, r = 0; r < n; r++)
                        for (var o = 0; o < n; o++) {
                            for (
                                var c = 0, a = t.isDark(r, o), i = -1;
                                i <= 1;
                                i++
                            )
                                if (!(r + i < 0 || n <= r + i))
                                    for (var u = -1; u <= 1; u++)
                                        o + u < 0 ||
                                            n <= o + u ||
                                            (0 == i && 0 == u) ||
                                            (a == t.isDark(r + i, o + u) &&
                                                c++);
                            c > 5 && (e += 3 + c - 5);
                        }
                    for (var s = 0; s < n - 1; s++)
                        for (var f = 0; f < n - 1; f++) {
                            var l = 0;
                            t.isDark(s, f) && l++,
                                t.isDark(s + 1, f) && l++,
                                t.isDark(s, f + 1) && l++,
                                t.isDark(s + 1, f + 1) && l++,
                                (0 != l && 4 != l) || (e += 3);
                        }
                    for (var h = 0; h < n; h++)
                        for (var p = 0; p < n - 6; p++)
                            t.isDark(h, p) &&
                                !t.isDark(h, p + 1) &&
                                t.isDark(h, p + 2) &&
                                t.isDark(h, p + 3) &&
                                t.isDark(h, p + 4) &&
                                !t.isDark(h, p + 5) &&
                                t.isDark(h, p + 6) &&
                                (e += 40);
                    for (var d = 0; d < n; d++)
                        for (var v = 0; v < n - 6; v++)
                            t.isDark(v, d) &&
                                !t.isDark(v + 1, d) &&
                                t.isDark(v + 2, d) &&
                                t.isDark(v + 3, d) &&
                                t.isDark(v + 4, d) &&
                                !t.isDark(v + 5, d) &&
                                t.isDark(v + 6, d) &&
                                (e += 40);
                    for (var y = 0, g = 0; g < n; g++)
                        for (var m = 0; m < n; m++) t.isDark(m, g) && y++;
                    return (e += 10 * (Math.abs((100 * y) / n / n - 50) / 5));
                },
            },
            Nc = {
                glog: function (t) {
                    if (t < 1) throw new Error('glog(' + t + ')');
                    return Nc.LOG_TABLE[t];
                },
                gexp: function (t) {
                    for (; t < 0; ) t += 255;
                    for (; t >= 256; ) t -= 255;
                    return Nc.EXP_TABLE[t];
                },
                EXP_TABLE: new Array(256),
                LOG_TABLE: new Array(256),
            },
            qc = 0;
        qc < 8;
        qc++
    )
        Nc.EXP_TABLE[qc] = 1 << qc;
    for (var Uc = 8; Uc < 256; Uc++)
        Nc.EXP_TABLE[Uc] =
            Nc.EXP_TABLE[Uc - 4] ^
            Nc.EXP_TABLE[Uc - 5] ^
            Nc.EXP_TABLE[Uc - 6] ^
            Nc.EXP_TABLE[Uc - 8];
    for (var Vc = 0; Vc < 255; Vc++) Nc.LOG_TABLE[Nc.EXP_TABLE[Vc]] = Vc;
    function Gc(t, n) {
        if (null == t.length) throw new Error(t.length + '/' + n);
        for (var e = 0; e < t.length && 0 == t[e]; ) e++;
        this.num = new Array(t.length - e + n);
        for (var r = 0; r < t.length - e; r++) this.num[r] = t[r + e];
    }
    function Hc(t, n) {
        (this.totalCount = t), (this.dataCount = n);
    }
    function Kc() {
        (this.buffer = []), (this.length = 0);
    }
    (Gc.prototype = {
        get: function (t) {
            return this.num[t];
        },
        getLength: function () {
            return this.num.length;
        },
        multiply: function (t) {
            for (
                var n = new Array(this.getLength() + t.getLength() - 1), e = 0;
                e < this.getLength();
                e++
            )
                for (var r = 0; r < t.getLength(); r++)
                    n[e + r] ^= Nc.gexp(
                        Nc.glog(this.get(e)) + Nc.glog(t.get(r))
                    );
            return new Gc(n, 0);
        },
        mod: function (t) {
            if (this.getLength() - t.getLength() < 0) return this;
            for (
                var n = Nc.glog(this.get(0)) - Nc.glog(t.get(0)),
                    e = new Array(this.getLength()),
                    r = 0;
                r < this.getLength();
                r++
            )
                e[r] = this.get(r);
            for (var o = 0; o < t.getLength(); o++)
                e[o] ^= Nc.gexp(Nc.glog(t.get(o)) + n);
            return new Gc(e, 0).mod(t);
        },
    }),
        (Hc.RS_BLOCK_TABLE = [
            [1, 26, 19],
            [1, 26, 16],
            [1, 26, 13],
            [1, 26, 9],
            [1, 44, 34],
            [1, 44, 28],
            [1, 44, 22],
            [1, 44, 16],
            [1, 70, 55],
            [1, 70, 44],
            [2, 35, 17],
            [2, 35, 13],
            [1, 100, 80],
            [2, 50, 32],
            [2, 50, 24],
            [4, 25, 9],
            [1, 134, 108],
            [2, 67, 43],
            [2, 33, 15, 2, 34, 16],
            [2, 33, 11, 2, 34, 12],
            [2, 86, 68],
            [4, 43, 27],
            [4, 43, 19],
            [4, 43, 15],
            [2, 98, 78],
            [4, 49, 31],
            [2, 32, 14, 4, 33, 15],
            [4, 39, 13, 1, 40, 14],
            [2, 121, 97],
            [2, 60, 38, 2, 61, 39],
            [4, 40, 18, 2, 41, 19],
            [4, 40, 14, 2, 41, 15],
            [2, 146, 116],
            [3, 58, 36, 2, 59, 37],
            [4, 36, 16, 4, 37, 17],
            [4, 36, 12, 4, 37, 13],
            [2, 86, 68, 2, 87, 69],
            [4, 69, 43, 1, 70, 44],
            [6, 43, 19, 2, 44, 20],
            [6, 43, 15, 2, 44, 16],
            [4, 101, 81],
            [1, 80, 50, 4, 81, 51],
            [4, 50, 22, 4, 51, 23],
            [3, 36, 12, 8, 37, 13],
            [2, 116, 92, 2, 117, 93],
            [6, 58, 36, 2, 59, 37],
            [4, 46, 20, 6, 47, 21],
            [7, 42, 14, 4, 43, 15],
            [4, 133, 107],
            [8, 59, 37, 1, 60, 38],
            [8, 44, 20, 4, 45, 21],
            [12, 33, 11, 4, 34, 12],
            [3, 145, 115, 1, 146, 116],
            [4, 64, 40, 5, 65, 41],
            [11, 36, 16, 5, 37, 17],
            [11, 36, 12, 5, 37, 13],
            [5, 109, 87, 1, 110, 88],
            [5, 65, 41, 5, 66, 42],
            [5, 54, 24, 7, 55, 25],
            [11, 36, 12],
            [5, 122, 98, 1, 123, 99],
            [7, 73, 45, 3, 74, 46],
            [15, 43, 19, 2, 44, 20],
            [3, 45, 15, 13, 46, 16],
            [1, 135, 107, 5, 136, 108],
            [10, 74, 46, 1, 75, 47],
            [1, 50, 22, 15, 51, 23],
            [2, 42, 14, 17, 43, 15],
            [5, 150, 120, 1, 151, 121],
            [9, 69, 43, 4, 70, 44],
            [17, 50, 22, 1, 51, 23],
            [2, 42, 14, 19, 43, 15],
            [3, 141, 113, 4, 142, 114],
            [3, 70, 44, 11, 71, 45],
            [17, 47, 21, 4, 48, 22],
            [9, 39, 13, 16, 40, 14],
            [3, 135, 107, 5, 136, 108],
            [3, 67, 41, 13, 68, 42],
            [15, 54, 24, 5, 55, 25],
            [15, 43, 15, 10, 44, 16],
            [4, 144, 116, 4, 145, 117],
            [17, 68, 42],
            [17, 50, 22, 6, 51, 23],
            [19, 46, 16, 6, 47, 17],
            [2, 139, 111, 7, 140, 112],
            [17, 74, 46],
            [7, 54, 24, 16, 55, 25],
            [34, 37, 13],
            [4, 151, 121, 5, 152, 122],
            [4, 75, 47, 14, 76, 48],
            [11, 54, 24, 14, 55, 25],
            [16, 45, 15, 14, 46, 16],
            [6, 147, 117, 4, 148, 118],
            [6, 73, 45, 14, 74, 46],
            [11, 54, 24, 16, 55, 25],
            [30, 46, 16, 2, 47, 17],
            [8, 132, 106, 4, 133, 107],
            [8, 75, 47, 13, 76, 48],
            [7, 54, 24, 22, 55, 25],
            [22, 45, 15, 13, 46, 16],
            [10, 142, 114, 2, 143, 115],
            [19, 74, 46, 4, 75, 47],
            [28, 50, 22, 6, 51, 23],
            [33, 46, 16, 4, 47, 17],
            [8, 152, 122, 4, 153, 123],
            [22, 73, 45, 3, 74, 46],
            [8, 53, 23, 26, 54, 24],
            [12, 45, 15, 28, 46, 16],
            [3, 147, 117, 10, 148, 118],
            [3, 73, 45, 23, 74, 46],
            [4, 54, 24, 31, 55, 25],
            [11, 45, 15, 31, 46, 16],
            [7, 146, 116, 7, 147, 117],
            [21, 73, 45, 7, 74, 46],
            [1, 53, 23, 37, 54, 24],
            [19, 45, 15, 26, 46, 16],
            [5, 145, 115, 10, 146, 116],
            [19, 75, 47, 10, 76, 48],
            [15, 54, 24, 25, 55, 25],
            [23, 45, 15, 25, 46, 16],
            [13, 145, 115, 3, 146, 116],
            [2, 74, 46, 29, 75, 47],
            [42, 54, 24, 1, 55, 25],
            [23, 45, 15, 28, 46, 16],
            [17, 145, 115],
            [10, 74, 46, 23, 75, 47],
            [10, 54, 24, 35, 55, 25],
            [19, 45, 15, 35, 46, 16],
            [17, 145, 115, 1, 146, 116],
            [14, 74, 46, 21, 75, 47],
            [29, 54, 24, 19, 55, 25],
            [11, 45, 15, 46, 46, 16],
            [13, 145, 115, 6, 146, 116],
            [14, 74, 46, 23, 75, 47],
            [44, 54, 24, 7, 55, 25],
            [59, 46, 16, 1, 47, 17],
            [12, 151, 121, 7, 152, 122],
            [12, 75, 47, 26, 76, 48],
            [39, 54, 24, 14, 55, 25],
            [22, 45, 15, 41, 46, 16],
            [6, 151, 121, 14, 152, 122],
            [6, 75, 47, 34, 76, 48],
            [46, 54, 24, 10, 55, 25],
            [2, 45, 15, 64, 46, 16],
            [17, 152, 122, 4, 153, 123],
            [29, 74, 46, 14, 75, 47],
            [49, 54, 24, 10, 55, 25],
            [24, 45, 15, 46, 46, 16],
            [4, 152, 122, 18, 153, 123],
            [13, 74, 46, 32, 75, 47],
            [48, 54, 24, 14, 55, 25],
            [42, 45, 15, 32, 46, 16],
            [20, 147, 117, 4, 148, 118],
            [40, 75, 47, 7, 76, 48],
            [43, 54, 24, 22, 55, 25],
            [10, 45, 15, 67, 46, 16],
            [19, 148, 118, 6, 149, 119],
            [18, 75, 47, 31, 76, 48],
            [34, 54, 24, 34, 55, 25],
            [20, 45, 15, 61, 46, 16],
        ]),
        (Hc.getRSBlocks = function (t, n) {
            var e = Hc.getRsBlockTable(t, n);
            if (null == e)
                throw new Error(
                    'bad rs block @ typeNumber:' + t + '/errorCorrectLevel:' + n
                );
            for (var r = e.length / 3, o = [], c = 0; c < r; c++)
                for (
                    var a = e[3 * c + 0],
                        i = e[3 * c + 1],
                        u = e[3 * c + 2],
                        s = 0;
                    s < a;
                    s++
                )
                    o.push(new Hc(i, u));
            return o;
        }),
        (Hc.getRsBlockTable = function (t, n) {
            switch (n) {
                case Ec:
                    return Hc.RS_BLOCK_TABLE[4 * (t - 1) + 0];
                case Oc:
                    return Hc.RS_BLOCK_TABLE[4 * (t - 1) + 1];
                case Ac:
                    return Hc.RS_BLOCK_TABLE[4 * (t - 1) + 2];
                case Sc:
                    return Hc.RS_BLOCK_TABLE[4 * (t - 1) + 3];
                default:
                    return;
            }
        }),
        (Kc.prototype = {
            get: function (t) {
                var n = Math.floor(t / 8);
                return 1 == ((this.buffer[n] >>> (7 - (t % 8))) & 1);
            },
            put: function (t, n) {
                for (var e = 0; e < n; e++)
                    this.putBit(1 == ((t >>> (n - e - 1)) & 1));
            },
            getLengthInBits: function () {
                return this.length;
            },
            putBit: function (t) {
                var n = Math.floor(this.length / 8);
                this.buffer.length <= n && this.buffer.push(0),
                    t && (this.buffer[n] |= 128 >>> this.length % 8),
                    this.length++;
            },
        });
    var Yc = 0,
        Zc = 1,
        Jc = 2,
        Wc = 3,
        Xc = 4,
        Qc = 5,
        ta = 6,
        na = 7;
    function ea(t) {
        if (!t.text || t.text.length <= 0) return null;
        var n = new jc(
            (t = r(
                r(
                    {},
                    {
                        render: 'canvas',
                        width: '100%',
                        height: '100%',
                        typeNumber: -1,
                        correctLevel: 1,
                        background: '#ffffff',
                        foreground: '#000000',
                        isSpace: !0,
                    }
                ),
                t
            )).typeNumber,
            t.correctLevel
        );
        return n.addData(t.text), n.make(), (n.$options = t), n;
    }
    function ra(t) {
        for (
            var n = t.getModuleCount(),
                e = t.getPositionTable(),
                r = [
                    [3, 3],
                    [3, n - 4],
                    [n - 4, 3],
                ],
                o = new Array(n),
                c = 0;
            c < n;
            c++
        )
            o[c] = new Array(n);
        for (var a = 8; a < n - 7; a++) o[a][6] = o[6][a] = Qc;
        for (var i = 0; i < e.length; i++) {
            o[e[i][0]][e[i][1]] = Wc;
            for (var u = -2; u <= 2; u++)
                for (var s = -2; s <= 2; s++)
                    (0 === u && 0 === s) || (o[e[i][0] + u][e[i][1] + s] = Xc);
        }
        for (var f = 0; f < r.length; f++) {
            o[r[f][0]][r[f][1]] = Zc;
            for (var l = -4; l <= 4; l++)
                for (var h = -4; h <= 4; h++)
                    r[f][0] + l >= 0 &&
                        r[f][0] + l < n &&
                        r[f][1] + h >= 0 &&
                        r[f][1] + h < n &&
                        ((0 === l && 0 === h) ||
                            (o[r[f][0] + l][r[f][1] + h] = Jc));
        }
        for (var p = 0; p <= 8; p++)
            6 !== p && (o[p][8] = o[8][p] = ta),
                p < 7 && (o[n - p - 1][8] = ta),
                p < 8 && (o[8][n - p - 1] = ta);
        for (var d = n - 11; d <= n - 9; d++)
            for (var v = 0; v <= 5; v++) o[d][v] = o[v][d] = na;
        for (var y = 0; y < n; y++)
            for (var g = 0; g < n; g++) o[y][g] || (o[y][g] = Yc);
        return o;
    }
    function oa(t, n) {
        var e = 0;
        return t + ((e = (9301 * e + 49297) % 233280) / 233280) * (n - t);
    }
    function ca(t, n) {
        if (!t) return [];
        var e = t.getModuleCount(),
            r = ra(t),
            o = new Array(e),
            c = n[0],
            a = n[1] / 100,
            i = n[2] / 100,
            u = n[3],
            s = 0,
            f = n[4],
            l = n[5],
            h = [3, -3],
            p = [3, -3];
        a <= 0 && (a = 1);
        for (var d = 0; d < e; d++)
            for (var v = 0; v < e; v++)
                if (!1 !== t.isDark(d, v))
                    if (r[d][v] === Wc || r[d][v] === Xc || r[d][v] === Qc)
                        0 === c
                            ? o.push(
                                  '<rect\n                            opacity="'
                                      .concat(
                                          i,
                                          '"\n                            width="'
                                      )
                                      .concat(
                                          a,
                                          '"\n                            height="'
                                      )
                                      .concat(
                                          a,
                                          '"\n                            key="'
                                      )
                                      .concat(
                                          s++,
                                          '"\n                            fill="'
                                      )
                                      .concat(
                                          f,
                                          '"\n                            x="'
                                      )
                                      .concat(
                                          d + (1 - a) / 2,
                                          '"\n                            y="'
                                      )
                                      .concat(
                                          v + (1 - a) / 2,
                                          '"\n                        />'
                                      )
                              )
                            : 1 === c
                            ? o.push(
                                  '<circle\n                            opacity="'
                                      .concat(
                                          i,
                                          '"\n                            r="'
                                      )
                                      .concat(
                                          a / 2,
                                          '"\n                            key="'
                                      )
                                      .concat(
                                          s++,
                                          '"\n                            fill="'
                                      )
                                      .concat(
                                          f,
                                          '"\n                            cx="'
                                      )
                                      .concat(
                                          d + 0.5,
                                          '"\n                            cy="'
                                      )
                                      .concat(
                                          v + 0.5,
                                          '"\n                        />'
                                      )
                              )
                            : 2 === c &&
                              o.push(
                                  '<circle\n                            key="'
                                      .concat(
                                          s++,
                                          '"\n                            opacity="'
                                      )
                                      .concat(
                                          i,
                                          '"\n                            fill="'
                                      )
                                      .concat(
                                          f,
                                          '"\n                            cx="'
                                      )
                                      .concat(
                                          d + 0.5,
                                          '"\n                            cy="'
                                      )
                                      .concat(
                                          v + 0.5,
                                          '"\n                            r="'
                                      )
                                      .concat(
                                          a / 2,
                                          '"\n                        />'
                                      )
                              );
                    else if (r[d][v] === Zc)
                        if (0 === u)
                            o.push(
                                '<rect\n                            width="'
                                    .concat(
                                        1,
                                        '"\n                            height="',
                                        1,
                                        '"\n                            key="',
                                        s++,
                                        '"\n                            fill="'
                                    )
                                    .concat(
                                        l,
                                        '"\n                            x="'
                                    )
                                    .concat(
                                        d,
                                        '"\n                            y="'
                                    )
                                    .concat(v, '"\n                        />')
                            );
                        else if (1 === u)
                            o.push(
                                '<circle\n                            key="'
                                    .concat(
                                        s++,
                                        '"\n                            fill="'
                                    )
                                    .concat(
                                        l,
                                        '"\n                            cx="'
                                    )
                                    .concat(
                                        d + 0.5,
                                        '"\n                            cy="'
                                    )
                                    .concat(
                                        v + 0.5,
                                        '"\n                            r="',
                                        1.5,
                                        '"\n                        />'
                                    )
                            ),
                                o.push(
                                    '<circle\n                            key="'
                                        .concat(
                                            s++,
                                            '"\n                            fill="none"\n                            stroke-width="1"\n                            stroke="'
                                        )
                                        .concat(
                                            l,
                                            '"\n                            cx="'
                                        )
                                        .concat(
                                            d + 0.5,
                                            '"\n                            cy="'
                                        )
                                        .concat(
                                            v + 0.5,
                                            '"\n                            r="',
                                            3,
                                            '"\n                        />'
                                        )
                                );
                        else if (2 === u) {
                            o.push(
                                '<circle\n                            key="'
                                    .concat(
                                        s++,
                                        '"\n                            fill="'
                                    )
                                    .concat(
                                        l,
                                        '"\n                            cx="'
                                    )
                                    .concat(
                                        d + 0.5,
                                        '"\n                            cy="'
                                    )
                                    .concat(
                                        v + 0.5,
                                        '"\n                            r="',
                                        1.5,
                                        '"\n                        />'
                                    )
                            ),
                                o.push(
                                    '<circle\n                            key="'
                                        .concat(
                                            s++,
                                            '"\n                            fill="none"\n                            stroke-width="0.15"\n                            stroke-dasharray="0.5,0.5"\n                            stroke="'
                                        )
                                        .concat(
                                            l,
                                            '"\n                            cx="'
                                        )
                                        .concat(
                                            d + 0.5,
                                            '"\n                            cy="'
                                        )
                                        .concat(
                                            v + 0.5,
                                            '"\n                            r="',
                                            3,
                                            '"\n                        />'
                                        )
                                );
                            for (var y = 0; y < h.length; y++)
                                o.push(
                                    '<circle\n                                key="'
                                        .concat(
                                            s++,
                                            '"\n                                fill="'
                                        )
                                        .concat(
                                            l,
                                            '"\n                                cx="'
                                        )
                                        .concat(
                                            d + h[y] + 0.5,
                                            '"\n                                cy="'
                                        )
                                        .concat(
                                            v + 0.5,
                                            '"\n                                r="',
                                            0.5,
                                            '"\n                            />'
                                        )
                                );
                            for (var g = 0; g < p.length; g++)
                                o.push(
                                    '<circle\n                                key="'
                                        .concat(
                                            s++,
                                            '"\n                                fill="'
                                        )
                                        .concat(
                                            l,
                                            '"\n                                cx="'
                                        )
                                        .concat(
                                            d + 0.5,
                                            '"\n                                cy="'
                                        )
                                        .concat(
                                            v + p[g] + 0.5,
                                            '"\n                                r="',
                                            0.5,
                                            '"\n                            />'
                                        )
                                );
                        } else
                            3 === u &&
                                (o.push(
                                    '<circle\n                            key="'
                                        .concat(
                                            s++,
                                            '"\n                            fill="'
                                        )
                                        .concat(
                                            l,
                                            '"\n                            cx="'
                                        )
                                        .concat(
                                            d + 0.5,
                                            '"\n                            cy="'
                                        )
                                        .concat(
                                            v + 0.5,
                                            '"\n                            r="',
                                            1.5,
                                            '"\n                        />'
                                        )
                                ),
                                o.push(
                                    '<path\n                            key="'
                                        .concat(
                                            s++,
                                            '"\n                            d="'
                                        )
                                        .concat(
                                            'M32.048565,-1.29480038e-15 L67.951435,1.29480038e-15 C79.0954192,-7.52316311e-16 83.1364972,1.16032014 87.2105713,3.3391588 C91.2846454,5.51799746 94.4820025,8.71535463 96.6608412,12.7894287 C98.8396799,16.8635028 100,20.9045808 100,32.048565 L100,67.951435 C100,79.0954192 98.8396799,83.1364972 96.6608412,87.2105713 C94.4820025,91.2846454 91.2846454,94.4820025 87.2105713,96.6608412 C83.1364972,98.8396799 79.0954192,100 67.951435,100 L32.048565,100 C20.9045808,100 16.8635028,98.8396799 12.7894287,96.6608412 C8.71535463,94.4820025 5.51799746,91.2846454 3.3391588,87.2105713 C1.16032014,83.1364972 5.01544207e-16,79.0954192 -8.63200256e-16,67.951435 L8.63200256e-16,32.048565 C-5.01544207e-16,20.9045808 1.16032014,16.8635028 3.3391588,12.7894287 C5.51799746,8.71535463 8.71535463,5.51799746 12.7894287,3.3391588 C16.8635028,1.16032014 20.9045808,7.52316311e-16 32.048565,-1.29480038e-15 Z',
                                            '"\n                            stroke="'
                                        )
                                        .concat(
                                            l,
                                            '"\n                            stroke-width="'
                                        )
                                        .concat(
                                            (100 / 6) * (1 - 0.75 * (1 - a)),
                                            '"\n                            fill="none"\n                            transform="'
                                        )
                                        .concat(
                                            'translate(' +
                                                String(d - 2.5) +
                                                ',' +
                                                String(v - 2.5) +
                                                ') scale(' +
                                                String(0.06) +
                                                ',' +
                                                String(0.06) +
                                                ')',
                                            '"\n                        />'
                                        )
                                ));
                    else
                        r[d][v] === Jc
                            ? 0 === u &&
                              o.push(
                                  '<rect\n                            width="'
                                      .concat(
                                          1,
                                          '"\n                            height="',
                                          1,
                                          '"\n                            key="',
                                          s++,
                                          '"\n                            fill="'
                                      )
                                      .concat(
                                          l,
                                          '"\n                            x="'
                                      )
                                      .concat(
                                          d,
                                          '"\n                            y="'
                                      )
                                      .concat(
                                          v,
                                          '"\n                        />'
                                      )
                              )
                            : 0 === c
                            ? o.push(
                                  '<rect\n                            opacity="'
                                      .concat(
                                          i,
                                          '"\n                            width="'
                                      )
                                      .concat(
                                          a,
                                          '"\n                            height="'
                                      )
                                      .concat(
                                          a,
                                          '"\n                            key="'
                                      )
                                      .concat(
                                          s++,
                                          '"\n                            fill="'
                                      )
                                      .concat(
                                          f,
                                          '"\n                            x="'
                                      )
                                      .concat(
                                          d + (1 - a) / 2,
                                          '"\n                            y="'
                                      )
                                      .concat(
                                          v + (1 - a) / 2,
                                          '"\n                        />'
                                      )
                              )
                            : 1 === c
                            ? o.push(
                                  '<circle\n                            opacity="'
                                      .concat(
                                          i,
                                          '"\n                            r="'
                                      )
                                      .concat(
                                          a / 2,
                                          '"\n                            key="'
                                      )
                                      .concat(
                                          s++,
                                          '"\n                            fill="'
                                      )
                                      .concat(
                                          f,
                                          '"\n                            cx="'
                                      )
                                      .concat(
                                          d + 0.5,
                                          '"\n                            cy="'
                                      )
                                      .concat(
                                          v + 0.5,
                                          '"\n                        />'
                                      )
                              )
                            : 2 === c &&
                              o.push(
                                  '<circle\n                            opacity="'
                                      .concat(
                                          i,
                                          '"\n                            key="'
                                      )
                                      .concat(
                                          s++,
                                          '"\n                            fill="'
                                      )
                                      .concat(
                                          f,
                                          '"\n                            cx="'
                                      )
                                      .concat(
                                          d + 0.5,
                                          '"\n                            cy="'
                                      )
                                      .concat(
                                          v + 0.5,
                                          '"\n                            r="'
                                      )
                                      .concat(
                                          0.5 * oa(0.33, 1),
                                          '"\n                        />'
                                      )
                              );
        return o;
    }
    var aa = kc().shape({
            type: fo().oneOf([0, 1, 2]).default(0),
            size: Co().default(100),
            opacity: Co().default(100),
            posType: fo().oneOf([0, 1, 2, 3]).default(0),
            otherColor: jo().default('#000000'),
            posColor: jo().default('#000000'),
        }),
        ia = function (t, n) {
            try {
                n = aa.validateSync(n);
            } catch (t) {
                return console.error(t), '';
            }
            var e = [
                'type',
                'size',
                'opacity',
                'posType',
                'otherColor',
                'posColor',
            ].map(function (t) {
                return n[t];
            });
            return Fc({ listPoints: ca })({ qrcode: t, params: e });
        },
        ua = function (t) {
            var n =
                arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {};
            return (
                (n = r(
                    r({}, { type: 0, size: 100, opacity: 100, posType: 0 }),
                    n
                )),
                ia(t, n)
            );
        },
        sa = function (t) {
            var n =
                arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {};
            return (
                (n = r(
                    r({}, { type: 1, size: 50, opacity: 30, posType: 1 }),
                    n
                )),
                ia(t, n)
            );
        },
        fa = function (t) {
            var n =
                arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {};
            return (
                (n = r(
                    r({}, { type: 2, size: 80, opacity: 100, posType: 2 }),
                    n
                )),
                ia(t, n)
            );
        };
    function la(t, n) {
        if (!t) return [];
        var e = t.getModuleCount(),
            r = ra(t),
            o = [],
            c = [],
            a = [],
            i = n[0] / 100,
            u = n[1] / 100,
            s = n[2] / 100,
            f = n[3],
            l = 0;
        i <= 0 && (i = 70), u <= 0 && (u = 70);
        for (var h = [], p = [], d = 0; d < e; d++) {
            (h[d] = []), (p[d] = []);
            for (var v = 0; v < e; v++) (h[d][v] = !0), (p[d][v] = !0);
        }
        for (var y = 0; y < e; y++)
            for (var g = 0; g < e; g++)
                if (!1 !== t.isDark(g, y))
                    if (r[g][y] === Zc)
                        0 === f
                            ? o.push(
                                  '<rect\n                            width="'
                                      .concat(
                                          1,
                                          '"\n                            height="',
                                          1,
                                          '"\n                            key="',
                                          l++,
                                          '"\n                            fill="#0B2D97"\n                            x="'
                                      )
                                      .concat(
                                          g,
                                          '"\n                            y="'
                                      )
                                      .concat(
                                          y,
                                          '"\n                        />'
                                      )
                              )
                            : 1 === f &&
                              (o.push(
                                  '<rect\n                            width="'
                                      .concat(
                                          3 - (1 - s),
                                          '"\n                            height="'
                                      )
                                      .concat(
                                          3 - (1 - s),
                                          '"\n                            key="'
                                      )
                                      .concat(
                                          l++,
                                          '"\n                            fill="#0B2D97"\n                            x="'
                                      )
                                      .concat(
                                          g - 1 + (1 - s) / 2,
                                          '"\n                            y="'
                                      )
                                      .concat(
                                          y - 1 + (1 - s) / 2,
                                          '"\n                        />'
                                      )
                              ),
                              o.push(
                                  '<rect\n                            width="'
                                      .concat(
                                          s,
                                          '"\n                            height="'
                                      )
                                      .concat(
                                          3 - (1 - s),
                                          '"\n                            key="'
                                      )
                                      .concat(
                                          l++,
                                          '"\n                            fill="#0B2D97"\n                            x="'
                                      )
                                      .concat(
                                          g - 3 + (1 - s) / 2,
                                          '"\n                            y="'
                                      )
                                      .concat(
                                          y - 1 + (1 - s) / 2,
                                          '"\n                        />'
                                      )
                              ),
                              o.push(
                                  '<rect\n                            width="'
                                      .concat(
                                          s,
                                          '"\n                            height="'
                                      )
                                      .concat(
                                          3 - (1 - s),
                                          '"\n                            key="'
                                      )
                                      .concat(
                                          l++,
                                          '"\n                            fill="#0B2D97"\n                            x="'
                                      )
                                      .concat(
                                          g + 3 + (1 - s) / 2,
                                          '"\n                            y="'
                                      )
                                      .concat(
                                          y - 1 + (1 - s) / 2,
                                          '"\n                        />'
                                      )
                              ),
                              o.push(
                                  '<rect\n                            width="'
                                      .concat(
                                          3 - (1 - s),
                                          '"\n                            height="'
                                      )
                                      .concat(
                                          s,
                                          '"\n                            key="'
                                      )
                                      .concat(
                                          l++,
                                          '"\n                            fill="#0B2D97"\n                            x="'
                                      )
                                      .concat(
                                          g - 1 + (1 - s) / 2,
                                          '"\n                            y="'
                                      )
                                      .concat(
                                          y - 3 + (1 - s) / 2,
                                          '"\n                        />'
                                      )
                              ),
                              o.push(
                                  '<rect\n                            width="'
                                      .concat(
                                          3 - (1 - s),
                                          '"\n                            height="'
                                      )
                                      .concat(
                                          s,
                                          '"\n                            key="'
                                      )
                                      .concat(
                                          l++,
                                          '"\n                            fill="#0B2D97"\n                            x="'
                                      )
                                      .concat(
                                          g - 1 + (1 - s) / 2,
                                          '"\n                            y="'
                                      )
                                      .concat(
                                          y + 3 + (1 - s) / 2,
                                          '"\n                        />'
                                      )
                              ));
                    else if (r[g][y] === Jc)
                        0 === f &&
                            o.push(
                                '<rect\n                            width="'
                                    .concat(
                                        1,
                                        '"\n                            height="',
                                        1,
                                        '"\n                            key="',
                                        l++,
                                        '"\n                            fill="#0B2D97"\n                            x="'
                                    )
                                    .concat(
                                        g,
                                        '"\n                            y="'
                                    )
                                    .concat(y, '"\n                        />')
                            );
                    else {
                        if (h[g][y] && p[g][y] && g < e - 2 && y < e - 2) {
                            for (var m = !0, _ = 0; _ < 3; _++)
                                for (var b = 0; b < 3; b++)
                                    !1 === p[g + _][y + b] && (m = !1);
                            if (
                                m &&
                                t.isDark(g + 2, y) &&
                                t.isDark(g + 1, y + 1) &&
                                t.isDark(g, y + 2) &&
                                t.isDark(g + 2, y + 2)
                            ) {
                                c.push(
                                    '<line\n                                key="'
                                        .concat(
                                            l++,
                                            '"\n                                x1="'
                                        )
                                        .concat(
                                            g + u / Math.sqrt(8),
                                            '"\n                                y1="'
                                        )
                                        .concat(
                                            y + u / Math.sqrt(8),
                                            '"\n                                x2="'
                                        )
                                        .concat(
                                            g + 3 - u / Math.sqrt(8),
                                            '"\n                                y2="'
                                        )
                                        .concat(
                                            y + 3 - u / Math.sqrt(8),
                                            '"\n                                fill="none"\n                                stroke="#0B2D97"\n                                stroke-width="'
                                        )
                                        .concat(
                                            u,
                                            '"\n                            />'
                                        )
                                ),
                                    c.push(
                                        '<line\n                                key="'
                                            .concat(
                                                l++,
                                                '"\n                                x1="'
                                            )
                                            .concat(
                                                g + 3 - u / Math.sqrt(8),
                                                '"\n                                y1="'
                                            )
                                            .concat(
                                                y + u / Math.sqrt(8),
                                                '"\n                                x2="'
                                            )
                                            .concat(
                                                g + u / Math.sqrt(8),
                                                '"\n                                y2="'
                                            )
                                            .concat(
                                                y + 3 - u / Math.sqrt(8),
                                                '"\n                                fill="none"\n                                stroke="#0B2D97"\n                                stroke-width="'
                                            )
                                            .concat(
                                                u,
                                                '"\n                            />'
                                            )
                                    ),
                                    (h[g][y] = !1),
                                    (h[g + 2][y] = !1),
                                    (h[g][y + 2] = !1),
                                    (h[g + 2][y + 2] = !1),
                                    (h[g + 1][y + 1] = !1);
                                for (var k = 0; k < 3; k++)
                                    for (var w = 0; w < 3; w++)
                                        p[g + k][y + w] = !1;
                            }
                        }
                        if (h[g][y] && p[g][y] && g < e - 1 && y < e - 1) {
                            for (var x = !0, F = 0; F < 2; F++)
                                for (var D = 0; D < 2; D++)
                                    !1 === p[g + F][y + D] && (x = !1);
                            if (
                                x &&
                                t.isDark(g + 1, y) &&
                                t.isDark(g, y + 1) &&
                                t.isDark(g + 1, y + 1)
                            ) {
                                c.push(
                                    '<line\n                                key="'
                                        .concat(
                                            l++,
                                            '"\n                                x1="'
                                        )
                                        .concat(
                                            g + u / Math.sqrt(8),
                                            '"\n                                y1="'
                                        )
                                        .concat(
                                            y + u / Math.sqrt(8),
                                            '"\n                                x2="'
                                        )
                                        .concat(
                                            g + 2 - u / Math.sqrt(8),
                                            '"\n                                y2="'
                                        )
                                        .concat(
                                            y + 2 - u / Math.sqrt(8),
                                            '"\n                                fill="none"\n                                stroke="#0B2D97"\n                                stroke-width="'
                                        )
                                        .concat(
                                            u,
                                            '"\n                            />'
                                        )
                                ),
                                    c.push(
                                        '<line\n                                key="'
                                            .concat(
                                                l++,
                                                '"\n                                x1="'
                                            )
                                            .concat(
                                                g + 2 - u / Math.sqrt(8),
                                                '"\n                                y1="'
                                            )
                                            .concat(
                                                y + u / Math.sqrt(8),
                                                '"\n                                x2="'
                                            )
                                            .concat(
                                                g + u / Math.sqrt(8),
                                                '"\n                                y2="'
                                            )
                                            .concat(
                                                y + 2 - u / Math.sqrt(8),
                                                '"\n                                fill="none"\n                                stroke="#0B2D97"\n                                stroke-width="'
                                            )
                                            .concat(
                                                u,
                                                '"\n                            />'
                                            )
                                    );
                                for (var j = 0; j < 2; j++)
                                    for (var C = 0; C < 2; C++)
                                        (h[g + j][y + C] = !1),
                                            (p[g + j][y + C] = !1);
                            }
                        }
                        if (
                            h[g][y] &&
                            p[g][y] &&
                            (0 === y ||
                                (y > 0 &&
                                    (!t.isDark(g, y - 1) || !p[g][y - 1])))
                        ) {
                            for (var E = y, O = y, A = !0; A && O < e; )
                                t.isDark(g, O) && p[g][O] ? O++ : (A = !1);
                            if (O - E > 2) {
                                for (var S = E; S < O; S++)
                                    (p[g][S] = !1), (h[g][S] = !1);
                                a.push(
                                    '<rect\n                                    width="'
                                        .concat(
                                            i,
                                            '"\n                                    height="'
                                        )
                                        .concat(
                                            O - E - 1 - (1 - i),
                                            '"\n                                    key="'
                                        )
                                        .concat(
                                            l++,
                                            '"\n                                    fill="#E02020"\n                                    x="'
                                        )
                                        .concat(
                                            g + (1 - i) / 2,
                                            '"\n                                    y="'
                                        )
                                        .concat(
                                            y + (1 - i) / 2,
                                            '"\n                                />'
                                        )
                                ),
                                    a.push(
                                        '<rect\n                                    width="'
                                            .concat(
                                                i,
                                                '"\n                                    height="'
                                            )
                                            .concat(
                                                i,
                                                '"\n                                    key="'
                                            )
                                            .concat(
                                                l++,
                                                '"\n                                    fill="#E02020"\n                                    x="'
                                            )
                                            .concat(
                                                g + (1 - i) / 2,
                                                '"\n                                    y="'
                                            )
                                            .concat(
                                                O - 1 + (1 - i) / 2,
                                                '"\n                                />'
                                            )
                                    );
                            }
                        }
                        if (
                            h[g][y] &&
                            p[g][y] &&
                            (0 === g ||
                                (g > 0 &&
                                    (!t.isDark(g - 1, y) || !p[g - 1][y])))
                        ) {
                            for (var P = g, T = g, M = !0; M && T < e; )
                                t.isDark(T, y) && p[T][y] ? T++ : (M = !1);
                            if (T - P > 1) {
                                for (var B = P; B < T; B++)
                                    (p[B][y] = !1), (h[B][y] = !1);
                                a.push(
                                    '<rect\n                                    width="'
                                        .concat(
                                            T - P - (1 - i),
                                            '"\n                                    height="'
                                        )
                                        .concat(
                                            i,
                                            '"\n                                    key="'
                                        )
                                        .concat(
                                            l++,
                                            '"\n                                    fill="#F6B506"\n                                    x="'
                                        )
                                        .concat(
                                            g + (1 - i) / 2,
                                            '"\n                                    y="'
                                        )
                                        .concat(
                                            y + (1 - i) / 2,
                                            '"\n                                />'
                                        )
                                );
                            }
                        }
                        h[g][y] &&
                            o.push(
                                '<rect\n                            width="'
                                    .concat(
                                        i,
                                        '"\n                            height="'
                                    )
                                    .concat(
                                        i,
                                        '"\n                            key="'
                                    )
                                    .concat(
                                        l++,
                                        '"\n                            fill="#F6B506"\n                            x="'
                                    )
                                    .concat(
                                        g + (1 - i) / 2,
                                        '"\n                            y="'
                                    )
                                    .concat(
                                        y + (1 - i) / 2,
                                        '"\n                        />'
                                    )
                            );
                    }
        for (var L = 0; L < c.length; L++) o.push(c[L]);
        for (var I = 0; I < a.length; I++) o.push(a[I]);
        return o;
    }
    var ha = kc().shape({
            width2: Co().default(70),
            width1: Co().default(70),
            width3: Co().default(90),
            posType: fo().oneOf([0, 1]).default(1),
        }),
        pa = function (t, n) {
            try {
                n = ha.validateSync(n);
            } catch (t) {
                return console.error(t), '';
            }
            var e = ['width2', 'width1', 'width3', 'posType'].map(function (t) {
                return n[t];
            });
            return Fc({ listPoints: la })({ qrcode: t, params: e });
        };
    function da(t, n) {
        if (!t) return [];
        for (
            var e = t.getModuleCount(), r = [], o = 0, c = [], a = 0;
            a < e;
            a++
        )
            for (var i = 0; i < e; i++) c.push([a, i]);
        c.sort(function () {
            return 0.5 - Math.random();
        });
        for (var u = 0; u < c.length; u++) {
            var s = c[u][0],
                f = c[u][1];
            if (t.isDark(s, f)) {
                var l = oa(0.8, 1.3),
                    h = oa(50, 230),
                    p = [
                        'rgb(' +
                            Math.floor(20 + h) +
                            ',' +
                            Math.floor(170 - h / 2) +
                            ',' +
                            Math.floor(60 + 2 * h) +
                            ')',
                        'rgb(' +
                            Math.floor(-20 + h) +
                            ',' +
                            Math.floor(130 - h / 2) +
                            ',' +
                            Math.floor(20 + 2 * h) +
                            ')',
                    ];
                r.push(
                    '<rect\n                    key="'
                        .concat(
                            o++,
                            '"\n                    opacity="0.9"\n                    fill="'
                        )
                        .concat(p[1], '"\n                    width="')
                        .concat(1 * l + 0.15, '"\n                    height="')
                        .concat(1 * l + 0.15, '"\n                    x="')
                        .concat(s - (l - 1) / 2, '"\n                    y="')
                        .concat(f - (l - 1) / 2, '"\n                />')
                ),
                    r.push(
                        '<rect\n                    key="'
                            .concat(o++, '"\n                    fill="')
                            .concat(p[0], '"\n                    width="')
                            .concat(1 * l, '"\n                    height="')
                            .concat(1 * l, '"\n                    x="')
                            .concat(
                                s - (l - 1) / 2,
                                '"\n                    y="'
                            )
                            .concat(f - (l - 1) / 2, '"\n                />')
                    );
            }
        }
        return r;
    }
    var va = function (t) {
        return Fc({ listPoints: da })({ qrcode: t });
    };
    function ya(t, n) {
        if (!t) return [];
        var e = t.getModuleCount(),
            r = ra(t),
            o = new Array(e),
            c = 1.001,
            a = 1.001,
            i = n[0],
            u = n[1],
            s = n[2],
            f = n[3],
            l = n[4],
            h = 0,
            p = [-Math.sqrt(3) / 2, 0.5],
            d = [Math.sqrt(3) / 2, 0.5],
            v = [0, 0],
            y =
                'matrix(' +
                String(p[0]) +
                ', ' +
                String(p[1]) +
                ', ' +
                String(d[0]) +
                ', ' +
                String(d[1]) +
                ', ' +
                String(v[0]) +
                ', ' +
                String(v[1]) +
                ')';
        i <= 0 && (i = 1), u <= 0 && (u = 1);
        for (var g = 0; g < e; g++)
            for (var m = 0; m < e; m++)
                !1 !== t.isDark(g, m) &&
                    (r[g][m] === Jc || r[g][m] === Zc
                        ? (o.push(
                              '<rect\n                        width="'
                                  .concat(
                                      a,
                                      '"\n                        height="'
                                  )
                                  .concat(a, '"\n                        key="')
                                  .concat(
                                      h++,
                                      '"\n                        fill="'
                                  )
                                  .concat(s, '"\n                        x="')
                                  .concat(
                                      g + (1 - a) / 2,
                                      '"\n                        y="'
                                  )
                                  .concat(
                                      m + (1 - a) / 2,
                                      '"\n                        transform="'
                                  )
                                  .concat(y, '"\n                    />')
                          ),
                          o.push(
                              '<rect\n                        width="'
                                  .concat(
                                      u,
                                      '"\n                        height="'
                                  )
                                  .concat(a, '"\n                        key="')
                                  .concat(
                                      h++,
                                      '"\n                        fill="'
                                  )
                                  .concat(
                                      f,
                                      '"\n                        x="',
                                      0,
                                      '"\n                        y="',
                                      0,
                                      '"\n                        transform="'
                                  )
                                  .concat(
                                      y +
                                          'translate(' +
                                          String(g + (1 - a) / 2 + a) +
                                          ',' +
                                          String(m + (1 - a) / 2) +
                                          ') skewY(45) ',
                                      '"\n                    />'
                                  )
                          ),
                          o.push(
                              '<rect\n                        width="'
                                  .concat(
                                      a,
                                      '"\n                        height="'
                                  )
                                  .concat(u, '"\n                        key="')
                                  .concat(
                                      h++,
                                      '"\n                        fill="'
                                  )
                                  .concat(
                                      l,
                                      '"\n                        x="',
                                      0,
                                      '"\n                        y="',
                                      0,
                                      '"\n                        transform="'
                                  )
                                  .concat(
                                      y +
                                          'translate(' +
                                          String(g + (1 - a) / 2) +
                                          ',' +
                                          String(m + a + (1 - a) / 2) +
                                          ') skewX(45) ',
                                      '"\n                    />'
                                  )
                          ))
                        : (o.push(
                              '<rect\n                        width="'
                                  .concat(
                                      c,
                                      '"\n                        height="'
                                  )
                                  .concat(c, '"\n                        key="')
                                  .concat(
                                      h++,
                                      '"\n                        fill="'
                                  )
                                  .concat(s, '"\n                        x="')
                                  .concat(
                                      g + (1 - c) / 2,
                                      '"\n                        y="'
                                  )
                                  .concat(
                                      m + (1 - c) / 2,
                                      '"\n                        transform="'
                                  )
                                  .concat(y, '"\n                    />')
                          ),
                          o.push(
                              '<rect\n                        width="'
                                  .concat(
                                      i,
                                      '"\n                        height="'
                                  )
                                  .concat(c, '"\n                        key="')
                                  .concat(
                                      h++,
                                      '"\n                        fill="'
                                  )
                                  .concat(
                                      f,
                                      '"\n                        x="',
                                      0,
                                      '"\n                        y="',
                                      0,
                                      '"\n                        transform="'
                                  )
                                  .concat(
                                      y +
                                          'translate(' +
                                          String(g + (1 - c) / 2 + c) +
                                          ',' +
                                          String(m + (1 - c) / 2) +
                                          ') skewY(45) ',
                                      '"\n                    />'
                                  )
                          ),
                          o.push(
                              '<rect\n                        width="'
                                  .concat(
                                      c,
                                      '"\n                        height="'
                                  )
                                  .concat(i, '"\n                        key="')
                                  .concat(
                                      h++,
                                      '"\n                        fill="'
                                  )
                                  .concat(
                                      l,
                                      '"\n                        x="',
                                      0,
                                      '"\n                        y="',
                                      0,
                                      '"\n                        transform="'
                                  )
                                  .concat(
                                      y +
                                          'translate(' +
                                          String(g + (1 - c) / 2) +
                                          ',' +
                                          String(m + c + (1 - c) / 2) +
                                          ') skewX(45) ',
                                      '"\n                    />'
                                  )
                          )));
        return o;
    }
    function ga(t) {
        if (!t) return '0 0 0 0';
        var n = t.getModuleCount();
        return t.$options.isSpace
            ? ''
                  .concat(-n, ' ')
                  .concat(-n / 2, ' ')
                  .concat(2 * n, ' ')
                  .concat(2 * n)
            : ''
                  .concat(3 - n, ' ')
                  .concat(-n / 2, ' ')
                  .concat(2 * n - 6, ' ')
                  .concat(2 * n - 6);
    }
    var ma = kc().shape({
            height: Co().default(0.5),
            height2: Co().default(0.5),
            upColor: jo().default('#FF7F89'),
            leftColor: jo().default('#FFD7D9'),
            rightColor: jo().default('#FFEBF3'),
        }),
        _a = function (t, n) {
            try {
                n = ma.validateSync(n);
            } catch (t) {
                return console.error(t), '';
            }
            var e = [
                'height',
                'height2',
                'upColor',
                'leftColor',
                'rightColor',
            ].map(function (t) {
                return n[t];
            });
            return Fc({ listPoints: ya, getViewBox: ga })({
                qrcode: t,
                params: e,
            });
        };
    function ba(t, n) {
        if (!t) return [];
        var e = t.getModuleCount(),
            r = ra(t),
            o = new Array(e),
            c = n[1],
            a = n[2] / 100 / 3,
            i = n[3] / 100,
            u = n[4],
            s = n[5],
            f = n[6],
            l = n[7],
            h = 0,
            p = [3, -3],
            d = [3, -3];
        a <= 0 && (a = 1),
            o.push(
                '<image\n            key="'
                    .concat(
                        h++,
                        '"\n            x="0"\n            y="0"\n            width="'
                    )
                    .concat(e, '"\n            height="')
                    .concat(e, '"\n            xlink:href="')
                    .concat(n[0], '"\n        />')
            );
        for (var v = 0; v < e; v++)
            for (var y = 0; y < e; y++)
                if (r[v][y] === Wc || r[v][y] === Xc || r[v][y] === Qc)
                    t.isDark(v, y)
                        ? 0 === c
                            ? o.push(
                                  '<rect\n                                opacity="'
                                      .concat(
                                          i,
                                          '"\n                                width="'
                                      )
                                      .concat(
                                          a,
                                          '"\n                                height="'
                                      )
                                      .concat(
                                          a,
                                          '"\n                                key="'
                                      )
                                      .concat(
                                          h++,
                                          '"\n                                fill="'
                                      )
                                      .concat(
                                          u,
                                          '"\n                                x="'
                                      )
                                      .concat(
                                          v + (1 - a) / 2,
                                          '"\n                                y="'
                                      )
                                      .concat(
                                          y + (1 - a) / 2,
                                          '"\n                            />'
                                      )
                              )
                            : 1 === c &&
                              o.push(
                                  '<circle\n                                opacity="'
                                      .concat(
                                          i,
                                          '"\n                                r="'
                                      )
                                      .concat(
                                          a / 2,
                                          '"\n                                key="'
                                      )
                                      .concat(
                                          h++,
                                          '"\n                                fill="'
                                      )
                                      .concat(
                                          u,
                                          '"\n                                cx="'
                                      )
                                      .concat(
                                          v + 0.5,
                                          '"\n                                cy="'
                                      )
                                      .concat(
                                          y + 0.5,
                                          '"\n                            />'
                                      )
                              )
                        : 0 === c
                        ? o.push(
                              '<rect\n                                opacity="'
                                  .concat(
                                      i,
                                      '"\n                                width="'
                                  )
                                  .concat(
                                      a,
                                      '"\n                                height="'
                                  )
                                  .concat(
                                      a,
                                      '"\n                                key="'
                                  )
                                  .concat(
                                      h++,
                                      '"\n                                fill="'
                                  )
                                  .concat(
                                      s,
                                      '"\n                                x="'
                                  )
                                  .concat(
                                      v + (1 - a) / 2,
                                      '"\n                                y="'
                                  )
                                  .concat(
                                      y + (1 - a) / 2,
                                      '"\n                            />'
                                  )
                          )
                        : 1 === c &&
                          o.push(
                              '<circle\n                                opacity="'
                                  .concat(
                                      i,
                                      '"\n                                r="'
                                  )
                                  .concat(
                                      a / 2,
                                      '"\n                                key="'
                                  )
                                  .concat(
                                      h++,
                                      '"\n                                fill="'
                                  )
                                  .concat(
                                      s,
                                      '"\n                                cx="'
                                  )
                                  .concat(
                                      v + 0.5,
                                      '"\n                                cy="'
                                  )
                                  .concat(
                                      y + 0.5,
                                      '"\n                            />'
                                  )
                          );
                else if (r[v][y] === Zc) {
                    if (t.isDark(v, y))
                        if (0 === f)
                            o.push(
                                '<rect\n                                width="'
                                    .concat(
                                        1,
                                        '"\n                                height="',
                                        1,
                                        '"\n                                key="',
                                        h++,
                                        '"\n                                fill="'
                                    )
                                    .concat(
                                        l,
                                        '"\n                                x="'
                                    )
                                    .concat(
                                        v,
                                        '"\n                                y="'
                                    )
                                    .concat(
                                        y,
                                        '"\n                            />'
                                    )
                            );
                        else if (1 === f)
                            o.push(
                                '<circle\n                                key="'
                                    .concat(
                                        h++,
                                        '"\n                                fill="white"\n                                cx="'
                                    )
                                    .concat(
                                        v + 0.5,
                                        '"\n                                cy="'
                                    )
                                    .concat(
                                        y + 0.5,
                                        '"\n                                r="',
                                        5,
                                        '"\n                            />'
                                    )
                            ),
                                o.push(
                                    '<circle\n                                key="'
                                        .concat(
                                            h++,
                                            '"\n                                fill="'
                                        )
                                        .concat(
                                            l,
                                            '"\n                                cx="'
                                        )
                                        .concat(
                                            v + 0.5,
                                            '"\n                                cy="'
                                        )
                                        .concat(
                                            y + 0.5,
                                            '"\n                                r="',
                                            1.5,
                                            '"\n                            />'
                                        )
                                ),
                                o.push(
                                    '<circle\n                                key="'
                                        .concat(
                                            h++,
                                            '"\n                                fill="none"\n                                stroke-width="1"\n                                stroke="'
                                        )
                                        .concat(
                                            l,
                                            '"\n                                cx="'
                                        )
                                        .concat(
                                            v + 0.5,
                                            '"\n                                cy="'
                                        )
                                        .concat(
                                            y + 0.5,
                                            '"\n                                r="',
                                            3,
                                            '"\n                            />'
                                        )
                                );
                        else if (2 === f) {
                            o.push(
                                '<circle\n                                key="'
                                    .concat(
                                        h++,
                                        '"\n                                fill="white"\n                                cx="'
                                    )
                                    .concat(
                                        v + 0.5,
                                        '"\n                                cy="'
                                    )
                                    .concat(
                                        y + 0.5,
                                        '"\n                                r="',
                                        5,
                                        '"\n                            />'
                                    )
                            ),
                                o.push(
                                    '<circle\n                                key="'
                                        .concat(
                                            h++,
                                            '"\n                                fill="'
                                        )
                                        .concat(
                                            l,
                                            '"\n                                cx="'
                                        )
                                        .concat(
                                            v + 0.5,
                                            '"\n                                cy="'
                                        )
                                        .concat(
                                            y + 0.5,
                                            '"\n                                r="',
                                            1.5,
                                            '"\n                            />'
                                        )
                                ),
                                o.push(
                                    '<circle\n                                key="'
                                        .concat(
                                            h++,
                                            '"\n                                fill="none"\n                                stroke-width="0.15"\n                                stroke-dasharray="0.5,0.5"\n                                stroke="'
                                        )
                                        .concat(
                                            l,
                                            '"\n                                cx="'
                                        )
                                        .concat(
                                            v + 0.5,
                                            '"\n                                cy="'
                                        )
                                        .concat(
                                            y + 0.5,
                                            '"\n                                r="',
                                            3,
                                            '"\n                            />'
                                        )
                                );
                            for (var g = 0; g < p.length; g++)
                                o.push(
                                    '<circle\n                                    key="'
                                        .concat(
                                            h++,
                                            '"\n                                    fill="'
                                        )
                                        .concat(
                                            l,
                                            '"\n                                    cx="'
                                        )
                                        .concat(
                                            v + p[g] + 0.5,
                                            '"\n                                    cy="'
                                        )
                                        .concat(
                                            y + 0.5,
                                            '"\n                                    r="',
                                            0.5,
                                            '"\n                                />'
                                        )
                                );
                            for (var m = 0; m < d.length; m++)
                                o.push(
                                    '<circle\n                                    key="'
                                        .concat(
                                            h++,
                                            '"\n                                    fill="'
                                        )
                                        .concat(
                                            l,
                                            '"\n                                    cx="'
                                        )
                                        .concat(
                                            v + 0.5,
                                            '"\n                                    cy="'
                                        )
                                        .concat(
                                            y + d[m] + 0.5,
                                            '"\n                                    r="',
                                            0.5,
                                            '"\n                                />'
                                        )
                                );
                        }
                } else
                    r[v][y] === Jc
                        ? t.isDark(v, y)
                            ? 0 === f &&
                              o.push(
                                  '<rect\n                                width="'
                                      .concat(
                                          1,
                                          '"\n                                height="',
                                          1,
                                          '"\n                                key="',
                                          h++,
                                          '"\n                                fill="'
                                      )
                                      .concat(
                                          l,
                                          '"\n                                x="'
                                      )
                                      .concat(
                                          v,
                                          '"\n                                y="'
                                      )
                                      .concat(
                                          y,
                                          '"\n                            />'
                                      )
                              )
                            : 0 === f &&
                              o.push(
                                  '<rect\n                                width="'
                                      .concat(
                                          1,
                                          '"\n                                height="',
                                          1,
                                          '"\n                                key="',
                                          h++,
                                          '"\n                                fill="white"\n                                x="'
                                      )
                                      .concat(
                                          v,
                                          '"\n                                y="'
                                      )
                                      .concat(
                                          y,
                                          '"\n                            />'
                                      )
                              )
                        : t.isDark(v, y)
                        ? 0 === c
                            ? o.push(
                                  '<rect\n                                opacity="'
                                      .concat(
                                          i,
                                          '"\n                                width="'
                                      )
                                      .concat(
                                          a,
                                          '"\n                                height="'
                                      )
                                      .concat(
                                          a,
                                          '"\n                                key="'
                                      )
                                      .concat(
                                          h++,
                                          '"\n                                fill="'
                                      )
                                      .concat(
                                          u,
                                          '"\n                                x="'
                                      )
                                      .concat(
                                          v + (1 - a) / 2,
                                          '"\n                                y="'
                                      )
                                      .concat(
                                          y + (1 - a) / 2,
                                          '"\n                            />'
                                      )
                              )
                            : 1 === c &&
                              o.push(
                                  '<circle\n                                opacity="'
                                      .concat(
                                          i,
                                          '"\n                                r="'
                                      )
                                      .concat(
                                          a / 2,
                                          '"\n                                key="'
                                      )
                                      .concat(
                                          h++,
                                          '"\n                                fill="'
                                      )
                                      .concat(
                                          u,
                                          '"\n                                cx="'
                                      )
                                      .concat(
                                          v + 0.5,
                                          '"\n                                cy="'
                                      )
                                      .concat(
                                          y + 0.5,
                                          '"\n                            />'
                                      )
                              )
                        : 0 === c
                        ? o.push(
                              '<rect\n                                opacity="'
                                  .concat(
                                      i,
                                      '"\n                                width="'
                                  )
                                  .concat(
                                      a,
                                      '"\n                                height="'
                                  )
                                  .concat(
                                      a,
                                      '"\n                                key="'
                                  )
                                  .concat(
                                      h++,
                                      '"\n                                fill="'
                                  )
                                  .concat(
                                      s,
                                      '"\n                                x="'
                                  )
                                  .concat(
                                      v + (1 - a) / 2,
                                      '"\n                                y="'
                                  )
                                  .concat(
                                      y + (1 - a) / 2,
                                      '"\n                            />'
                                  )
                          )
                        : 1 === c &&
                          o.push(
                              '<circle\n                                opacity="'
                                  .concat(
                                      i,
                                      '"\n                                r="'
                                  )
                                  .concat(
                                      a / 2,
                                      '"\n                                key="'
                                  )
                                  .concat(
                                      h++,
                                      '"\n                                fill="'
                                  )
                                  .concat(
                                      s,
                                      '"\n                                cx="'
                                  )
                                  .concat(
                                      v + 0.5,
                                      '"\n                                cy="'
                                  )
                                  .concat(
                                      y + 0.5,
                                      '"\n                            />'
                                  )
                          );
        return o;
    }
    var ka = kc().shape({
            backgroudImage: jo(),
            type: fo().oneOf([0, 1]).default(0),
            size: Co().default(100),
            opacity: Co().default(100),
            otherColorDark: jo().default('#000000'),
            otherColorLight: jo().default('#FFFFFF'),
            posType: fo().oneOf([0, 1, 2]).default(0),
            posColor: jo().default('#000000'),
        }),
        wa = function (t) {
            var n =
                arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {};
            try {
                n = ka.validateSync(n);
            } catch (t) {
                return console.error(t), '';
            }
            var e = [
                    'backgroudImage',
                    'type',
                    'size',
                    'opacity',
                    'otherColorDark',
                    'otherColorLight',
                    'posType',
                    'posColor',
                ].map(function (t) {
                    return n[t];
                }),
                r = Fc({ listPoints: ba })({ qrcode: t, params: e });
            return r;
        };
    var xa = function (t) {
            var n = t.qrcode,
                e = t.params,
                r = e[5],
                o = n.$options,
                c = o.width,
                a = o.height;
            return new Promise(function (t, o) {
                (function (t, n, e, r) {
                    var o = document.createElement('canvas'),
                        c = o.getContext('2d'),
                        a = document.createElement('img'),
                        i = [];
                    (o.style.imageRendering = 'pixelated'),
                        (n *= 3),
                        (a.src = t[0]);
                    var u = t[1] / 100,
                        s = t[2] / 100;
                    return new Promise(function (t) {
                        a.onload = function () {
                            (o.width = n),
                                (o.height = n),
                                (c.imageSmoothingEnabled = !1),
                                c.drawImage(a, 0, 0, n, n);
                            for (var r = 0; r < o.width; r++)
                                for (var f = 0; f < o.height; f++) {
                                    var l = c.getImageData(r, f, 1, 1).data,
                                        h =
                                            ((p = l[0]),
                                            (d = l[1]),
                                            (v = l[2]),
                                            Math.pow(
                                                (Math.pow(p, 2.2) +
                                                    Math.pow(1.5 * d, 2.2) +
                                                    Math.pow(0.6 * v, 2.2)) /
                                                    (1 +
                                                        Math.pow(1.5, 2.2) +
                                                        Math.pow(0.6, 2.2)),
                                                1 / 2.2
                                            ));
                                    Math.random() >
                                        (h / 255 + s - 0.5) * (u + 1) + 0.5 &&
                                        (r % 3 != 1 || f % 3 != 1) &&
                                        i.push(
                                            '<use\n                                key="'
                                                .concat(
                                                    'g_' + r + '_' + f,
                                                    '"\n                                x="'
                                                )
                                                .concat(
                                                    r,
                                                    '"\n                                y="'
                                                )
                                                .concat(
                                                    f,
                                                    '"\n                                xlink:href="'
                                                )
                                                .concat(
                                                    e,
                                                    '"\n                            />'
                                                )
                                        );
                                }
                            var p, d, v;
                            t(i);
                        };
                    });
                })(e, n.getModuleCount(), '#S-black')
                    .then(function (o) {
                        var i = '<svg\n            className="Qr-item-svg"\n            width="'
                            .concat(c, '"\n            height="')
                            .concat(a, '"\n            viewBox="')
                            .concat(
                                (function (t) {
                                    if (!t) return '0 0 0 0';
                                    var n = 3 * t.getModuleCount();
                                    return t.$options.isSpace
                                        ? ''
                                              .concat(-n / 5, ' ')
                                              .concat(-n / 5, ' ')
                                              .concat(n + (n / 5) * 2, ' ')
                                              .concat(n + (n / 5) * 2)
                                        : ''
                                              .concat(0, ' ', 0, ' ', n, ' ')
                                              .concat(n);
                                })(n),
                                '"\n            fill="white"\n            xmlns="http://www.w3.org/2000/svg"\n            xmlns:xlink="http://www.w3.org/1999/xlink"\n        >\n            <defs>\n                <rect\n                    id="B-black"\n                    fill="'
                            )
                            .concat(
                                r,
                                '"\n                    width="',
                                3.08,
                                '"\n                    height="',
                                3.08,
                                '"\n                />\n                <rect id="B-white" fill="white" width="',
                                3.08,
                                '" height="',
                                3.08,
                                '" />\n                <rect\n                    id="S-black"\n                    fill="'
                            )
                            .concat(
                                r,
                                '"\n                    width="',
                                1.02,
                                '"\n                    height="',
                                1.02,
                                '"\n                />\n                <rect id="S-white" fill="white" width="',
                                1.02,
                                '" height="',
                                1.02,
                                '" />\n                <rect id="B" width="',
                                3.08,
                                '" height="',
                                3.08,
                                '" />\n                <rect id="S" width="',
                                1.02,
                                '" height="',
                                1.02,
                                '" />\n            </defs>\n            '
                            )
                            .concat(
                                o
                                    .concat(
                                        (function (t, n) {
                                            if (!t) return [];
                                            for (
                                                var e = t.getModuleCount(),
                                                    r = ra(t),
                                                    o = new Array(e),
                                                    c = n[3],
                                                    a = n[4],
                                                    i = n[6],
                                                    u = 0,
                                                    s = 0;
                                                s < e;
                                                s++
                                            )
                                                for (var f = 0; f < e; f++) {
                                                    var l = 3 * s,
                                                        h = 3 * f;
                                                    r[s][f] === Wc ||
                                                    r[s][f] === Xc
                                                        ? t.isDark(s, f)
                                                            ? 2 === c
                                                                ? o.push(
                                                                      '<use\n                                key="'
                                                                          .concat(
                                                                              u++,
                                                                              '"\n                                xlink:href="#B-black"\n                                x="'
                                                                          )
                                                                          .concat(
                                                                              l -
                                                                                  0.03,
                                                                              '"\n                                y="'
                                                                          )
                                                                          .concat(
                                                                              h -
                                                                                  0.03,
                                                                              '"\n                            />'
                                                                          )
                                                                  )
                                                                : o.push(
                                                                      '<use\n                                key="'
                                                                          .concat(
                                                                              u++,
                                                                              '"\n                                xlink:href="#S-black"\n                                x="'
                                                                          )
                                                                          .concat(
                                                                              l +
                                                                                  1 -
                                                                                  0.01,
                                                                              '"\n                                y="'
                                                                          )
                                                                          .concat(
                                                                              h +
                                                                                  1 -
                                                                                  0.01,
                                                                              '"\n                            />'
                                                                          )
                                                                  )
                                                            : 0 === c
                                                            ? o.push(
                                                                  '<use\n                                key="'
                                                                      .concat(
                                                                          u++,
                                                                          '"\n                                xlink:href="#S-white"\n                                x="'
                                                                      )
                                                                      .concat(
                                                                          l + 1,
                                                                          '"\n                                y=\''
                                                                      )
                                                                      .concat(
                                                                          h + 1,
                                                                          "'\n                            />"
                                                                      )
                                                              )
                                                            : o.push(
                                                                  '<use\n                                key="'
                                                                      .concat(
                                                                          u++,
                                                                          '"\n                                xlink:href="#B-white"\n                                x="'
                                                                      )
                                                                      .concat(
                                                                          l -
                                                                              0.03,
                                                                          '"\n                                y="'
                                                                      )
                                                                      .concat(
                                                                          h -
                                                                              0.03,
                                                                          '"\n                            />'
                                                                      )
                                                              )
                                                        : r[s][f] === Qc
                                                        ? t.isDark(s, f)
                                                            ? 2 === a
                                                                ? o.push(
                                                                      '<use\n                                key="'
                                                                          .concat(
                                                                              u++,
                                                                              '"\n                                xlink:href="#B-black"\n                                x="'
                                                                          )
                                                                          .concat(
                                                                              l -
                                                                                  0.03,
                                                                              '"\n                                y="'
                                                                          )
                                                                          .concat(
                                                                              h -
                                                                                  0.03,
                                                                              '"\n                            />'
                                                                          )
                                                                  )
                                                                : o.push(
                                                                      '<use\n                                key="'
                                                                          .concat(
                                                                              u++,
                                                                              '"\n                                xlink:href="#S-black"\n                                x="'
                                                                          )
                                                                          .concat(
                                                                              l +
                                                                                  1,
                                                                              '"\n                                y="'
                                                                          )
                                                                          .concat(
                                                                              h +
                                                                                  1,
                                                                              '"\n                            />'
                                                                          )
                                                                  )
                                                            : 0 === a
                                                            ? o.push(
                                                                  '<use\n                                key="'
                                                                      .concat(
                                                                          u++,
                                                                          '"\n                                xlink:href="#S-white"\n                                x="'
                                                                      )
                                                                      .concat(
                                                                          l + 1,
                                                                          '"\n                                y="'
                                                                      )
                                                                      .concat(
                                                                          h + 1,
                                                                          '"\n                            />'
                                                                      )
                                                              )
                                                            : o.push(
                                                                  '<use\n                                key="'
                                                                      .concat(
                                                                          u++,
                                                                          '"\n                                xlink:href="#B-white"\n                                x="'
                                                                      )
                                                                      .concat(
                                                                          l -
                                                                              0.03,
                                                                          '"\n                                y="'
                                                                      )
                                                                      .concat(
                                                                          h -
                                                                              0.03,
                                                                          '"\n                            />'
                                                                      )
                                                              )
                                                        : r[s][f] === Zc
                                                        ? t.isDark(s, f) &&
                                                          o.push(
                                                              '<use\n                            key="'
                                                                  .concat(
                                                                      u++,
                                                                      '"\n                            fill="'
                                                                  )
                                                                  .concat(
                                                                      i,
                                                                      '"\n                            xlink:href="#B"\n                            x="'
                                                                  )
                                                                  .concat(
                                                                      l - 0.03,
                                                                      '"\n                            y="'
                                                                  )
                                                                  .concat(
                                                                      h - 0.03,
                                                                      '"\n                        />'
                                                                  )
                                                          )
                                                        : r[s][f] === Jc
                                                        ? t.isDark(s, f)
                                                            ? o.push(
                                                                  '<use\n                            key="'
                                                                      .concat(
                                                                          u++,
                                                                          '"\n                            fill="'
                                                                      )
                                                                      .concat(
                                                                          i,
                                                                          '"\n                            xlink:href="#B"\n                            x="'
                                                                      )
                                                                      .concat(
                                                                          l -
                                                                              0.03,
                                                                          '"\n                            y="'
                                                                      )
                                                                      .concat(
                                                                          h -
                                                                              0.03,
                                                                          '"\n                        />'
                                                                      )
                                                              )
                                                            : o.push(
                                                                  '<use\n                            key="'
                                                                      .concat(
                                                                          u++,
                                                                          '"\n                            xlink:href="#B-white"\n                            x="'
                                                                      )
                                                                      .concat(
                                                                          l -
                                                                              0.03,
                                                                          '"\n                            y="'
                                                                      )
                                                                      .concat(
                                                                          h -
                                                                              0.03,
                                                                          '"\n                        />'
                                                                      )
                                                              )
                                                        : t.isDark(s, f) &&
                                                          o.push(
                                                              '<use\n                            key="'
                                                                  .concat(
                                                                      u++,
                                                                      '"\n                            xlink:href="#S-black"\n                            x="'
                                                                  )
                                                                  .concat(
                                                                      l + 1,
                                                                      '"\n                            y="'
                                                                  )
                                                                  .concat(
                                                                      h + 1,
                                                                      '"\n                        />'
                                                                  )
                                                          );
                                                }
                                            return o;
                                        })(n, e)
                                    )
                                    .join(''),
                                '\n        </svg>'
                            );
                        t(i);
                    })
                    .catch(function (n) {
                        t(n);
                    });
            });
        },
        Fa = kc().shape({
            backgroudImage: jo().default(),
            contrast: Co().default(0),
            exposure: Co().default(0),
            alignType: fo().oneOf([0, 1, 2]).default(0),
            timingType: fo().oneOf([0, 1, 2]).default(0),
            otherColor: jo().default('#000000'),
            posColor: jo().default('#000000'),
        }),
        Da = function (t) {
            var n =
                arguments.length > 1 && void 0 !== arguments[1]
                    ? arguments[1]
                    : {};
            try {
                n = Fa.validateSync(n);
            } catch (t) {
                return console.error(t), '';
            }
            var e = [
                'backgroudImage',
                'contrast',
                'exposure',
                'alignType',
                'timingType',
                'otherColor',
                'posColor',
            ].map(function (t) {
                return n[t];
            });
            return xa({ qrcode: t, params: e });
        };
    function ja(t, n) {
        if (!t) return [];
        for (
            var e = t.getModuleCount(),
                r = ra(t),
                o = [],
                c = [],
                a = [],
                i = 0,
                u = n[0],
                s = n[1],
                f = [],
                l = [],
                h = 0;
            h < e;
            h++
        ) {
            (f[h] = []), (l[h] = []);
            for (var p = 0; p < e; p++) (f[h][p] = !0), (l[h][p] = !0);
        }
        for (var d = 0; d < e; d++)
            for (var v = 0; v < e; v++)
                if (t.isDark(v, d) && r[v][d] === Zc)
                    o.push(
                        '<circle\n                        key="'
                            .concat(i++, '"\n                        fill="')
                            .concat(s, '"\n                        cx="')
                            .concat(v + 0.5, '"\n                        cy="')
                            .concat(
                                d + 0.5,
                                '"\n                        r="',
                                1.5,
                                '"\n                    />'
                            )
                    ),
                        o.push(
                            '<circle\n                        key="'
                                .concat(
                                    i++,
                                    '"\n                        fill="none"\n                        stroke-width="1"\n                        stroke="'
                                )
                                .concat(s, '"\n                        cx="')
                                .concat(
                                    v + 0.5,
                                    '"\n                        cy="'
                                )
                                .concat(
                                    d + 0.5,
                                    '"\n                        r="',
                                    3,
                                    '"\n                    />'
                                )
                        );
                else if (t.isDark(v, d) && r[v][d] === Jc);
                else {
                    if (f[v][d] && l[v][d] && v < e - 2 && d < e - 2) {
                        for (var y = !0, g = 0; g < 3; g++)
                            for (var m = 0; m < 3; m++)
                                !1 === l[v + g][d + m] && (y = !1);
                        if (
                            y &&
                            t.isDark(v + 1, d) &&
                            t.isDark(v + 1, d + 2) &&
                            t.isDark(v, d + 1) &&
                            t.isDark(v + 2, d + 1)
                        ) {
                            c.push(
                                '<circle\n                                key="'
                                    .concat(
                                        i++,
                                        '"\n                                cx="'
                                    )
                                    .concat(
                                        v + 1 + 0.5,
                                        '"\n                                cy="'
                                    )
                                    .concat(
                                        d + 1 + 0.5,
                                        '"\n                                r="',
                                        1,
                                        '"\n                                fill="#FFFFFF"\n                                stroke="'
                                    )
                                    .concat(
                                        u,
                                        '"\n                                stroke-width="'
                                    )
                                    .concat(
                                        oa(0.33, 0.6),
                                        '"\n                            />'
                                    )
                            ),
                                t.isDark(v + 1, d + 1) &&
                                    c.push(
                                        '<circle\n                                    r="'
                                            .concat(
                                                0.5 * oa(0.5, 1),
                                                '"\n                                    key="'
                                            )
                                            .concat(
                                                i++,
                                                '"\n                                    fill="'
                                            )
                                            .concat(
                                                u,
                                                '"\n                                    cx="'
                                            )
                                            .concat(
                                                v + 1 + 0.5,
                                                '"\n                                    cy="'
                                            )
                                            .concat(
                                                d + 1 + 0.5,
                                                '"\n                                />'
                                            )
                                    ),
                                (f[v + 1][d] = !1),
                                (f[v][d + 1] = !1),
                                (f[v + 2][d + 1] = !1),
                                (f[v + 1][d + 2] = !1);
                            for (var _ = 0; _ < 3; _++)
                                for (var b = 0; b < 3; b++)
                                    l[v + _][d + b] = !1;
                        }
                    }
                    if (
                        v < e - 1 &&
                        d < e - 1 &&
                        t.isDark(v, d) &&
                        t.isDark(v + 1, d) &&
                        t.isDark(v, d + 1) &&
                        t.isDark(v + 1, d + 1)
                    ) {
                        c.push(
                            '<circle\n                                key="'
                                .concat(
                                    i++,
                                    '"\n                                cx="'
                                )
                                .concat(
                                    v + 1,
                                    '"\n                                cy="'
                                )
                                .concat(
                                    d + 1,
                                    '"\n                                r="'
                                )
                                .concat(
                                    Math.sqrt(0.5),
                                    '"\n                                fill="#FFFFFF"\n                                stroke="'
                                )
                                .concat(
                                    u,
                                    '"\n                                stroke-width="'
                                )
                                .concat(
                                    oa(0.33, 0.6),
                                    '"\n                            />'
                                )
                        );
                        for (var k = 0; k < 2; k++)
                            for (var w = 0; w < 2; w++)
                                (f[v + k][d + w] = !1), (l[v + k][d + w] = !1);
                    }
                    f[v][d] &&
                        d < e - 1 &&
                        t.isDark(v, d) &&
                        t.isDark(v, d + 1) &&
                        (o.push(
                            '<circle\n                                key="'
                                .concat(
                                    i++,
                                    '"\n                                cx="'
                                )
                                .concat(
                                    v + 0.5,
                                    '"\n                                cy="'
                                )
                                .concat(
                                    d + 1,
                                    '"\n                                r="'
                                )
                                .concat(
                                    0.5 * oa(0.95, 1.05),
                                    '"\n                                fill="#FFFFFF"\n                                stroke="'
                                )
                                .concat(
                                    u,
                                    '"\n                                stroke-width="'
                                )
                                .concat(
                                    oa(0.36, 0.4),
                                    '"\n                            />'
                                )
                        ),
                        (f[v][d] = !1),
                        (f[v][d + 1] = !1)),
                        f[v][d] &&
                            v < e - 1 &&
                            t.isDark(v, d) &&
                            t.isDark(v + 1, d) &&
                            (o.push(
                                '<circle\n                                key="'
                                    .concat(
                                        i++,
                                        '"\n                                cx="'
                                    )
                                    .concat(
                                        v + 1,
                                        '"\n                                cy="'
                                    )
                                    .concat(
                                        d + 0.5,
                                        '"\n                                r="'
                                    )
                                    .concat(
                                        0.5 * oa(0.95, 1.05),
                                        '"\n                                fill="#FFFFFF"\n                                stroke="'
                                    )
                                    .concat(
                                        u,
                                        '"\n                                stroke-width="'
                                    )
                                    .concat(
                                        oa(0.36, 0.4),
                                        '"\n                            />'
                                    )
                            ),
                            (f[v][d] = !1),
                            (f[v + 1][d] = !1)),
                        f[v][d] &&
                            (t.isDark(v, d)
                                ? o.push(
                                      '<circle\n                                r="'
                                          .concat(
                                              0.5 * oa(0.5, 1),
                                              '"\n                                key="'
                                          )
                                          .concat(
                                              i++,
                                              '"\n                                fill="'
                                          )
                                          .concat(
                                              u,
                                              '"\n                                cx="'
                                          )
                                          .concat(
                                              v + 0.5,
                                              '"\n                                cy="'
                                          )
                                          .concat(
                                              d + 0.5,
                                              '"\n                            />'
                                          )
                                  )
                                : r[v][d] === Yc &&
                                  oa(0, 1) > 0.85 &&
                                  a.push(
                                      '<circle\n                                    r="'
                                          .concat(
                                              0.5 * oa(0.85, 1.3),
                                              '"\n                                    key="'
                                          )
                                          .concat(
                                              i++,
                                              '"\n                                    fill="#FFFFFF"\n                                    stroke="'
                                          )
                                          .concat(
                                              u,
                                              '"\n                                    stroke-width="'
                                          )
                                          .concat(
                                              oa(0.15, 0.33),
                                              '"\n                                    cx="'
                                          )
                                          .concat(
                                              v + 0.5,
                                              '"\n                                    cy="'
                                          )
                                          .concat(
                                              d + 0.5,
                                              '"\n                                />'
                                          )
                                  ));
                }
        for (var x = 0; x < c.length; x++) o.push(c[x]);
        for (var F = 0; F < a.length; F++) o.push(a[F]);
        return o;
    }
    var Ca = kc().shape({
            otherColor: jo().default('#8ED1FC'),
            posColor: jo().default('#0693E3'),
        }),
        Ea = function (t, n) {
            try {
                n = Ca.validateSync(n);
            } catch (t) {
                return console.error(t), '';
            }
            var e = ['otherColor', 'posColor'].map(function (t) {
                return n[t];
            });
            return Fc({ listPoints: ja })({ qrcode: t, params: e });
        };
    function Oa(t, n) {
        if (!t) return [];
        var e = t.getModuleCount(),
            r = ra(t),
            o = new Array(e),
            c = n[0],
            a = n[1] / 100,
            i = n[1],
            u = n[3],
            s = 0,
            f = n[4],
            l = n[5],
            h = n[6],
            p = [3, -3],
            d = [3, -3];
        a <= 0 && (a = 1),
            1 === i &&
                1 === c &&
                o.push(
                    '<circle\n                key="'
                        .concat(
                            s++,
                            '"\n                fill="none"\n                stroke-width="'
                        )
                        .concat(e / 15, '"\n                stroke="')
                        .concat(l, '"\n                cx="')
                        .concat(e / 2, '"\n                cy="')
                        .concat(e / 2, '"\n                r="')
                        .concat(
                            ((e / 2) * Math.sqrt(2) * 13) / 40,
                            '"\n            />'
                        )
                );
        for (var v = 0; v < e; v++)
            for (var y = 0; y < e; y++)
                if (t.isDark(v, y) && r[v][y] === Zc)
                    if (0 === u)
                        o.push(
                            '<rect\n                            width="'
                                .concat(
                                    1,
                                    '"\n                            height="',
                                    1,
                                    '"\n                            key="',
                                    s++,
                                    '"\n                            fill="'
                                )
                                .concat(h, '"\n                            x="')
                                .concat(v, '"\n                            y="')
                                .concat(y, '"\n                        />')
                        );
                    else if (1 === u)
                        o.push(
                            '<circle\n                            key="'
                                .concat(
                                    s++,
                                    '"\n                            fill="'
                                )
                                .concat(
                                    h,
                                    '"\n                            cx="'
                                )
                                .concat(
                                    v + 0.5,
                                    '"\n                            cy="'
                                )
                                .concat(
                                    y + 0.5,
                                    '"\n                            r="',
                                    1.5,
                                    '"\n                        />'
                                )
                        ),
                            o.push(
                                '<circle\n                            key="'
                                    .concat(
                                        s++,
                                        '"\n                            fill="none"\n                            stroke-width="1"\n                            stroke="'
                                    )
                                    .concat(
                                        h,
                                        '"\n                            cx="'
                                    )
                                    .concat(
                                        v + 0.5,
                                        '"\n                            cy="'
                                    )
                                    .concat(
                                        y + 0.5,
                                        '"\n                            r="',
                                        3,
                                        '"\n                        />'
                                    )
                            );
                    else if (2 === u) {
                        o.push(
                            '<circle\n                            key="'
                                .concat(
                                    s++,
                                    '"\n                            fill="'
                                )
                                .concat(
                                    h,
                                    '"\n                            cx="'
                                )
                                .concat(
                                    v + 0.5,
                                    '"\n                            cy="'
                                )
                                .concat(
                                    y + 0.5,
                                    '"\n                            r="',
                                    1.5,
                                    '"\n                        />'
                                )
                        ),
                            o.push(
                                '<circle\n                            key="'
                                    .concat(
                                        s++,
                                        '"\n                            fill="none"\n                            stroke-width="0.15"\n                            stroke-dasharray="0.5,0.5"\n                            stroke="'
                                    )
                                    .concat(
                                        h,
                                        '"\n                            cx="'
                                    )
                                    .concat(
                                        v + 0.5,
                                        '"\n                            cy="'
                                    )
                                    .concat(
                                        y + 0.5,
                                        '"\n                            r="',
                                        3,
                                        '"\n                        />'
                                    )
                            );
                        for (var g = 0; g < p.length; g++)
                            o.push(
                                '<circle\n                                key="'
                                    .concat(
                                        s++,
                                        '"\n                                fill="'
                                    )
                                    .concat(
                                        h,
                                        '"\n                                cx="'
                                    )
                                    .concat(
                                        v + p[g] + 0.5,
                                        '"\n                                cy="'
                                    )
                                    .concat(
                                        y + 0.5,
                                        '"\n                                r="',
                                        0.5,
                                        '"\n                            />'
                                    )
                            );
                        for (var m = 0; m < d.length; m++)
                            o.push(
                                '<circle\n                                key="'
                                    .concat(
                                        s++,
                                        '"\n                                fill="'
                                    )
                                    .concat(
                                        h,
                                        '"\n                                cx="'
                                    )
                                    .concat(
                                        v + 0.5,
                                        '"\n                                cy="'
                                    )
                                    .concat(
                                        y + d[m] + 0.5,
                                        '"\n                                r="',
                                        0.5,
                                        '"\n                            />'
                                    )
                            );
                    } else
                        3 === u &&
                            (o.push(
                                '<circle\n                            key="'
                                    .concat(
                                        s++,
                                        '"\n                            fill="'
                                    )
                                    .concat(
                                        h,
                                        '"\n                            cx="'
                                    )
                                    .concat(
                                        v + 0.5,
                                        '"\n                            cy="'
                                    )
                                    .concat(
                                        y + 0.5,
                                        '"\n                            r="',
                                        1.5,
                                        '"\n                        />'
                                    )
                            ),
                            o.push(
                                '<path\n                            key="'
                                    .concat(
                                        s++,
                                        '"\n                            d="'
                                    )
                                    .concat(
                                        'M32.048565,-1.29480038e-15 L67.951435,1.29480038e-15 C79.0954192,-7.52316311e-16 83.1364972,1.16032014 87.2105713,3.3391588 C91.2846454,5.51799746 94.4820025,8.71535463 96.6608412,12.7894287 C98.8396799,16.8635028 100,20.9045808 100,32.048565 L100,67.951435 C100,79.0954192 98.8396799,83.1364972 96.6608412,87.2105713 C94.4820025,91.2846454 91.2846454,94.4820025 87.2105713,96.6608412 C83.1364972,98.8396799 79.0954192,100 67.951435,100 L32.048565,100 C20.9045808,100 16.8635028,98.8396799 12.7894287,96.6608412 C8.71535463,94.4820025 5.51799746,91.2846454 3.3391588,87.2105713 C1.16032014,83.1364972 5.01544207e-16,79.0954192 -8.63200256e-16,67.951435 L8.63200256e-16,32.048565 C-5.01544207e-16,20.9045808 1.16032014,16.8635028 3.3391588,12.7894287 C5.51799746,8.71535463 8.71535463,5.51799746 12.7894287,3.3391588 C16.8635028,1.16032014 20.9045808,7.52316311e-16 32.048565,-1.29480038e-15 Z',
                                        '"\n                            stroke="'
                                    )
                                    .concat(
                                        h,
                                        '"\n                            stroke-width="'
                                    )
                                    .concat(
                                        14.16666666666667,
                                        '"\n                            fill="none"\n                            transform="'
                                    )
                                    .concat(
                                        'translate(' +
                                            String(v - 2.5) +
                                            ',' +
                                            String(y - 2.5) +
                                            ') scale(' +
                                            String(0.06) +
                                            ',' +
                                            String(0.06) +
                                            ')',
                                        '"\n                        />'
                                    )
                            ));
                else if (t.isDark(v, y) && r[v][y] === Jc)
                    0 === u &&
                        o.push(
                            '<rect\n                            width="'
                                .concat(
                                    1,
                                    '"\n                            height="',
                                    1,
                                    '"\n                            key="',
                                    s++,
                                    '"\n                            fill="'
                                )
                                .concat(h, '"\n                            x="')
                                .concat(v, '"\n                            y="')
                                .concat(y, '"\n                        />')
                        );
                else {
                    var _ =
                        Math.sqrt(
                            Math.pow((e - 1) / 2 - v, 2) +
                                Math.pow((e - 1) / 2 - y, 2)
                        ) /
                        ((e / 2) * Math.sqrt(2));
                    if (0 === i) {
                        var b = (1 - Math.cos(Math.PI * _)) / 6 + 0.2,
                            k = f,
                            w = Number(t.isDark(v, y));
                        0 === c
                            ? ((b += 0.2),
                              o.push(
                                  '<rect\n                                opacity="'
                                      .concat(
                                          w,
                                          '"\n                                width="'
                                      )
                                      .concat(
                                          b,
                                          '"\n                                height="'
                                      )
                                      .concat(
                                          b,
                                          '"\n                                key="'
                                      )
                                      .concat(
                                          s++,
                                          '"\n                                fill="'
                                      )
                                      .concat(
                                          k,
                                          '"\n                                x="'
                                      )
                                      .concat(
                                          v + (1 - b) / 2,
                                          '"\n                                y="'
                                      )
                                      .concat(
                                          y + (1 - b) / 2,
                                          '"\n                            />'
                                      )
                              ))
                            : 1 === c &&
                              o.push(
                                  '<circle\n                                opacity="'
                                      .concat(
                                          w,
                                          '"\n                                r="'
                                      )
                                      .concat(
                                          b,
                                          '"\n                                key="'
                                      )
                                      .concat(
                                          s++,
                                          '"\n                                fill="'
                                      )
                                      .concat(
                                          k,
                                          '"\n                                cx="'
                                      )
                                      .concat(
                                          v + 0.5,
                                          '"\n                                cy="'
                                      )
                                      .concat(
                                          y + 0.5,
                                          '"\n                            />'
                                      )
                              );
                    }
                    if (1 === i) {
                        var x = 0,
                            F = f,
                            D = Number(t.isDark(v, y));
                        _ > 0.25 && _ < 0.4
                            ? ((x = 0.5), (F = l), (D = 1))
                            : ((x = 1 / 4), 0 === c && (x = 0.15)),
                            0 === c
                                ? ((x = 2 * x + 0.1),
                                  t.isDark(v, y)
                                      ? o.push(
                                            '<rect\n                                    opacity="'
                                                .concat(
                                                    D,
                                                    '"\n                                    width="'
                                                )
                                                .concat(
                                                    x,
                                                    '"\n                                    height="'
                                                )
                                                .concat(
                                                    x,
                                                    '"\n                                    key="'
                                                )
                                                .concat(
                                                    s++,
                                                    '"\n                                    fill="'
                                                )
                                                .concat(
                                                    F,
                                                    '"\n                                    x="'
                                                )
                                                .concat(
                                                    v + (1 - x) / 2,
                                                    '"\n                                    y="'
                                                )
                                                .concat(
                                                    y + (1 - x) / 2,
                                                    '"\n                                />'
                                                )
                                        )
                                      : ((x -= 0.1),
                                        o.push(
                                            '<rect\n                                    opacity="'
                                                .concat(
                                                    D,
                                                    '"\n                                    width="'
                                                )
                                                .concat(
                                                    x,
                                                    '"\n                                    height="'
                                                )
                                                .concat(
                                                    x,
                                                    '"\n                                    key="'
                                                )
                                                .concat(
                                                    s++,
                                                    '"\n                                    stroke="'
                                                )
                                                .concat(
                                                    F,
                                                    '"\n                                    stroke-width="',
                                                    0.1,
                                                    '"\n                                    fill="#FFFFFF"\n                                    x="'
                                                )
                                                .concat(
                                                    v + (1 - x) / 2,
                                                    '"\n                                    y="'
                                                )
                                                .concat(
                                                    y + (1 - x) / 2,
                                                    '"\n                                />'
                                                )
                                        )))
                                : 1 === c &&
                                  (t.isDark(v, y)
                                      ? o.push(
                                            '<circle\n                                    opacity="'
                                                .concat(
                                                    D,
                                                    '"\n                                    r="'
                                                )
                                                .concat(
                                                    x,
                                                    '"\n                                    key="'
                                                )
                                                .concat(
                                                    s++,
                                                    '"\n                                    fill="'
                                                )
                                                .concat(
                                                    F,
                                                    '"\n                                    cx="'
                                                )
                                                .concat(
                                                    v + 0.5,
                                                    '"\n                                    cy="'
                                                )
                                                .concat(
                                                    y + 0.5,
                                                    '"\n                                />'
                                                )
                                        )
                                      : o.push(
                                            '<circle\n                                    opacity="'
                                                .concat(
                                                    D,
                                                    '"\n                                    r="'
                                                )
                                                .concat(
                                                    x,
                                                    '"\n                                    key="'
                                                )
                                                .concat(
                                                    s++,
                                                    '"\n                                    stroke="'
                                                )
                                                .concat(
                                                    F,
                                                    '"\n                                    stroke-width="',
                                                    0.1,
                                                    '"\n                                    fill="#FFFFFF"\n                                    cx="'
                                                )
                                                .concat(
                                                    v + 0.5,
                                                    '"\n                                    cy="'
                                                )
                                                .concat(
                                                    y + 0.5,
                                                    '"\n                                />'
                                                )
                                        ));
                    }
                }
        return o;
    }
    var Aa = kc().shape({
            type: fo().oneOf([0, 1]).default(1),
            size: fo().oneOf([0, 1]).default(0),
            opacity: Co().default(100),
            posType: fo().oneOf([0, 1, 2, 3]).default(1),
            otherColor: jo().default('#000000'),
            otherColor2: jo().default('#000000'),
            posColor: jo().default('#000000'),
        }),
        Sa = kc().shape({
            type: fo().oneOf([0, 1]).default(1),
            size: fo().oneOf([0, 1]).default(1),
            opacity: Co().default(100),
            posType: fo().oneOf([0, 1, 2, 3]).default(1),
            otherColor: jo().default('#ABB8C3'),
            otherColor2: jo().default('#000000'),
            posColor: jo().default('#000000'),
        }),
        Pa = function (t, n) {
            try {
                n = Aa.validateSync(n);
            } catch (t) {
                return console.error(t), '';
            }
            var e = [
                'type',
                'size',
                'opacity',
                'posType',
                'otherColor',
                'otherColor2',
                'posColor',
            ].map(function (t) {
                return n[t];
            });
            return Fc({ listPoints: Oa })({ qrcode: t, params: e });
        },
        Ta = function (t, n) {
            try {
                n = Sa.validateSync(n);
            } catch (t) {
                return console.error(t), '';
            }
            var e = [
                'type',
                'size',
                'opacity',
                'posType',
                'otherColor',
                'otherColor2',
                'posColor',
            ].map(function (t) {
                return n[t];
            });
            return Fc({ listPoints: Oa })({ qrcode: t, params: e });
        };
    function Ma(t, n) {
        if (!t) return [];
        var e = t.getModuleCount(),
            r = ra(t),
            o = new Array(e),
            c = n[0],
            a = n[1] / 100,
            i = n[2] / 100,
            u = n[3],
            s = 0,
            f = n[4],
            l = n[5],
            h = [3, -3],
            p = [3, -3];
        a <= 0 && (a = 1);
        for (var d = [], v = [], y = 0; y < e; y++) {
            (d[y] = []), (v[y] = []);
            for (var g = 0; g < e; g++) (d[y][g] = !0), (v[y][g] = !0);
        }
        for (var m = 0; m < e; m++)
            for (var _ = 0; _ < e; _++)
                if (!1 !== t.isDark(m, _))
                    if (r[m][_] === Zc)
                        if (0 === u)
                            o.push(
                                '<rect\n                            width="'
                                    .concat(
                                        1,
                                        '"\n                            height="',
                                        1,
                                        '"\n                            key="',
                                        s++,
                                        '"\n                            fill="'
                                    )
                                    .concat(
                                        l,
                                        '"\n                            x="'
                                    )
                                    .concat(
                                        m,
                                        '"\n                            y="'
                                    )
                                    .concat(_, '"\n                        />')
                            );
                        else if (1 === u)
                            o.push(
                                '<circle\n                            key="'
                                    .concat(
                                        s++,
                                        '"\n                            fill="'
                                    )
                                    .concat(
                                        l,
                                        '"\n                            cx="'
                                    )
                                    .concat(
                                        m + 0.5,
                                        '"\n                            cy="'
                                    )
                                    .concat(
                                        _ + 0.5,
                                        '"\n                            r="',
                                        1.5,
                                        '"\n                        />'
                                    )
                            ),
                                o.push(
                                    '<circle\n                            key="'
                                        .concat(
                                            s++,
                                            '"\n                            fill="none"\n                            stroke-width="1"\n                            stroke="'
                                        )
                                        .concat(
                                            l,
                                            '"\n                            cx="'
                                        )
                                        .concat(
                                            m + 0.5,
                                            '"\n                            cy="'
                                        )
                                        .concat(
                                            _ + 0.5,
                                            '"\n                            r="',
                                            3,
                                            '"\n                        />'
                                        )
                                );
                        else if (2 === u) {
                            o.push(
                                '<circle\n                            key="'
                                    .concat(
                                        s++,
                                        '"\n                            fill="'
                                    )
                                    .concat(
                                        l,
                                        '"\n                            cx="'
                                    )
                                    .concat(
                                        m + 0.5,
                                        '"\n                            cy="'
                                    )
                                    .concat(
                                        _ + 0.5,
                                        '"\n                            r="',
                                        1.5,
                                        '"\n                        />'
                                    )
                            ),
                                o.push(
                                    '<circle\n                            key="'
                                        .concat(
                                            s++,
                                            '"\n                            fill="none"\n                            stroke-width="0.15"\n                            strokeDasharray="0.5,0.5"\n                            stroke="'
                                        )
                                        .concat(
                                            l,
                                            '"\n                            cx="'
                                        )
                                        .concat(
                                            m + 0.5,
                                            '"\n                            cy="'
                                        )
                                        .concat(
                                            _ + 0.5,
                                            '"\n                            r="',
                                            3,
                                            '"\n                        />'
                                        )
                                );
                            for (var b = 0; b < h.length; b++)
                                o.push(
                                    '<circle\n                                key="'
                                        .concat(
                                            s++,
                                            '"\n                                fill="'
                                        )
                                        .concat(
                                            l,
                                            '"\n                                cx="'
                                        )
                                        .concat(
                                            m + h[b] + 0.5,
                                            '"\n                                cy="'
                                        )
                                        .concat(
                                            _ + 0.5,
                                            '"\n                                r="',
                                            0.5,
                                            '"\n                            />'
                                        )
                                );
                            for (var k = 0; k < p.length; k++)
                                o.push(
                                    '<circle\n                                key="'
                                        .concat(
                                            s++,
                                            '"\n                                fill="'
                                        )
                                        .concat(
                                            l,
                                            '"\n                                cx="'
                                        )
                                        .concat(
                                            m + 0.5,
                                            '"\n                                cy="'
                                        )
                                        .concat(
                                            _ + p[k] + 0.5,
                                            '"\n                                r="',
                                            0.5,
                                            '"\n                            />'
                                        )
                                );
                        } else
                            3 === u &&
                                (o.push(
                                    '<circle\n                            key="'
                                        .concat(
                                            s++,
                                            '"\n                            fill="'
                                        )
                                        .concat(
                                            l,
                                            '"\n                            cx="'
                                        )
                                        .concat(
                                            m + 0.5,
                                            '"\n                            cy="'
                                        )
                                        .concat(
                                            _ + 0.5,
                                            '"\n                            r="',
                                            1.5,
                                            '"\n                        />'
                                        )
                                ),
                                o.push(
                                    '<path\n                            key="'
                                        .concat(
                                            s++,
                                            '"\n                            d="'
                                        )
                                        .concat(
                                            'M32.048565,-1.29480038e-15 L67.951435,1.29480038e-15 C79.0954192,-7.52316311e-16 83.1364972,1.16032014 87.2105713,3.3391588 C91.2846454,5.51799746 94.4820025,8.71535463 96.6608412,12.7894287 C98.8396799,16.8635028 100,20.9045808 100,32.048565 L100,67.951435 C100,79.0954192 98.8396799,83.1364972 96.6608412,87.2105713 C94.4820025,91.2846454 91.2846454,94.4820025 87.2105713,96.6608412 C83.1364972,98.8396799 79.0954192,100 67.951435,100 L32.048565,100 C20.9045808,100 16.8635028,98.8396799 12.7894287,96.6608412 C8.71535463,94.4820025 5.51799746,91.2846454 3.3391588,87.2105713 C1.16032014,83.1364972 5.01544207e-16,79.0954192 -8.63200256e-16,67.951435 L8.63200256e-16,32.048565 C-5.01544207e-16,20.9045808 1.16032014,16.8635028 3.3391588,12.7894287 C5.51799746,8.71535463 8.71535463,5.51799746 12.7894287,3.3391588 C16.8635028,1.16032014 20.9045808,7.52316311e-16 32.048565,-1.29480038e-15 Z',
                                            '"\n                            stroke="'
                                        )
                                        .concat(
                                            l,
                                            '"\n                            stroke-width="'
                                        )
                                        .concat(
                                            (100 / 6) * (1 - 0.75 * (1 - a)),
                                            '"\n                            fill="none"\n                            transform="',
                                            'translate('
                                                .concat(String(m - 2.5), ',')
                                                .concat(
                                                    String(_ - 2.5),
                                                    ') scale('
                                                )
                                                .concat(String(0.06), ',')
                                                .concat(String(0.06), ')'),
                                            '"\n                        />'
                                        )
                                ));
                    else if (r[m][_] === Jc)
                        0 === u &&
                            o.push(
                                '<rect\n                            width="'
                                    .concat(
                                        1,
                                        '"\n                            height="',
                                        1,
                                        '"\n                            key="',
                                        s++,
                                        '"\n                            fill="'
                                    )
                                    .concat(
                                        l,
                                        '"\n                            x="'
                                    )
                                    .concat(
                                        m,
                                        '"\n                            y="'
                                    )
                                    .concat(_, '"\n                        />')
                            );
                    else {
                        if (0 === c) {
                            if (
                                0 === m ||
                                (m > 0 && (!t.isDark(m - 1, _) || !v[m - 1][_]))
                            ) {
                                for (var w = 0, x = !0; x && m + w < e; )
                                    t.isDark(m + w, _) && v[m + w][_]
                                        ? w++
                                        : (x = !1);
                                if (w - 0 > 1) {
                                    for (var F = 0; F < w; F++)
                                        (v[m + F][_] = !1), (d[m + F][_] = !1);
                                    o.push(
                                        '<line\n                                    opacity="'
                                            .concat(
                                                i,
                                                '"\n                                    x1="'
                                            )
                                            .concat(
                                                m + 0.5,
                                                '"\n                                    y1="'
                                            )
                                            .concat(
                                                _ + 0.5,
                                                '"\n                                    x2="'
                                            )
                                            .concat(
                                                m + w - 0 - 0.5,
                                                '"\n                                    y2="'
                                            )
                                            .concat(
                                                _ + 0.5,
                                                '"\n                                    stroke-width="'
                                            )
                                            .concat(
                                                a,
                                                '"\n                                    stroke="'
                                            )
                                            .concat(
                                                f,
                                                '"\n                                    stroke-linecap="round"\n                                    key="'
                                            )
                                            .concat(
                                                s++,
                                                '"\n                                />'
                                            )
                                    );
                                }
                            }
                            d[m][_] &&
                                o.push(
                                    '<circle\n                                opacity="'
                                        .concat(
                                            i,
                                            '"\n                                r="'
                                        )
                                        .concat(
                                            a / 2,
                                            '"\n                                key="'
                                        )
                                        .concat(
                                            s++,
                                            '"\n                                fill="'
                                        )
                                        .concat(
                                            f,
                                            '"\n                                cx="'
                                        )
                                        .concat(
                                            m + 0.5,
                                            '"\n                                cy="'
                                        )
                                        .concat(
                                            _ + 0.5,
                                            '"\n                            />'
                                        )
                                );
                        }
                        if (1 === c) {
                            if (
                                0 === _ ||
                                (_ > 0 && (!t.isDark(m, _ - 1) || !v[m][_ - 1]))
                            ) {
                                for (var D = 0, j = !0; j && _ + D < e; )
                                    t.isDark(m, _ + D) && v[m][_ + D]
                                        ? D++
                                        : (j = !1);
                                if (D - 0 > 1) {
                                    for (var C = 0; C < D; C++)
                                        (v[m][_ + C] = !1), (d[m][_ + C] = !1);
                                    o.push(
                                        '<line\n                                    opacity="'
                                            .concat(
                                                i,
                                                '"\n                                    x1="'
                                            )
                                            .concat(
                                                m + 0.5,
                                                '"\n                                    y1="'
                                            )
                                            .concat(
                                                _ + 0.5,
                                                '"\n                                    x2="'
                                            )
                                            .concat(
                                                m + 0.5,
                                                '"\n                                    y2="'
                                            )
                                            .concat(
                                                _ + D - 0 - 1 + 0.5,
                                                '"\n                                    stroke-width="'
                                            )
                                            .concat(
                                                a,
                                                '"\n                                    stroke="'
                                            )
                                            .concat(
                                                f,
                                                '"\n                                    stroke-linecap="round"\n                                    key="'
                                            )
                                            .concat(
                                                s++,
                                                '"\n                                />'
                                            )
                                    );
                                }
                            }
                            d[m][_] &&
                                o.push(
                                    '<circle\n                                opacity="'
                                        .concat(
                                            i,
                                            '"\n                                r="'
                                        )
                                        .concat(
                                            a / 2,
                                            '"\n                                key="'
                                        )
                                        .concat(
                                            s++,
                                            '"\n                                fill="'
                                        )
                                        .concat(
                                            f,
                                            '"\n                                cx="'
                                        )
                                        .concat(
                                            m + 0.5,
                                            '"\n                                cy="'
                                        )
                                        .concat(
                                            _ + 0.5,
                                            '"\n                            />'
                                        )
                                );
                        }
                        if (2 === c) {
                            if (
                                0 === _ ||
                                (_ > 0 && (!t.isDark(m, _ - 1) || !v[m][_ - 1]))
                            ) {
                                for (var E = 0, O = !0; O && _ + E < e; )
                                    t.isDark(m, _ + E) &&
                                    v[m][_ + E] &&
                                    E - 0 <= 3
                                        ? E++
                                        : (O = !1);
                                if (E - 0 > 1) {
                                    for (var A = 0; A < E; A++)
                                        (v[m][_ + A] = !1), (d[m][_ + A] = !1);
                                    o.push(
                                        '<line\n                                    opacity="'
                                            .concat(
                                                i,
                                                '"\n                                    x1="'
                                            )
                                            .concat(
                                                m + 0.5,
                                                '"\n                                    y1="'
                                            )
                                            .concat(
                                                _ + 0.5,
                                                '"\n                                    x2="'
                                            )
                                            .concat(
                                                m + 0.5,
                                                '"\n                                    y2="'
                                            )
                                            .concat(
                                                _ + E - 0 - 1 + 0.5,
                                                '"\n                                    stroke-width="'
                                            )
                                            .concat(
                                                a,
                                                '"\n                                    stroke="'
                                            )
                                            .concat(
                                                f,
                                                '"\n                                    stroke-linecap="round"\n                                    key="'
                                            )
                                            .concat(
                                                s++,
                                                '"\n                                />'
                                            )
                                    );
                                }
                            }
                            if (
                                0 === m ||
                                (m > 0 && (!t.isDark(m - 1, _) || !v[m - 1][_]))
                            ) {
                                for (var S = 0, P = !0; P && m + S < e; )
                                    t.isDark(m + S, _) &&
                                    v[m + S][_] &&
                                    S - 0 <= 3
                                        ? S++
                                        : (P = !1);
                                if (S - 0 > 1) {
                                    for (var T = 0; T < S; T++)
                                        (v[m + T][_] = !1), (d[m + T][_] = !1);
                                    o.push(
                                        '<line\n                                    opacity="'
                                            .concat(
                                                i,
                                                '"\n                                    x1="'
                                            )
                                            .concat(
                                                m + 0.5,
                                                '"\n                                    y1="'
                                            )
                                            .concat(
                                                _ + 0.5,
                                                '"\n                                    x2="'
                                            )
                                            .concat(
                                                m + S - 0 - 0.5,
                                                '"\n                                    y2="'
                                            )
                                            .concat(
                                                _ + 0.5,
                                                '"\n                                    stroke-width="'
                                            )
                                            .concat(
                                                a,
                                                '"\n                                    stroke="'
                                            )
                                            .concat(
                                                f,
                                                '"\n                                    stroke-linecap="round"\n                                    key="'
                                            )
                                            .concat(
                                                s++,
                                                '"\n                                />'
                                            )
                                    );
                                }
                            }
                            d[m][_] &&
                                o.push(
                                    '<circle\n                                opacity="'
                                        .concat(
                                            i,
                                            '"\n                                r="'
                                        )
                                        .concat(
                                            a / 2,
                                            '"\n                                key="'
                                        )
                                        .concat(
                                            s++,
                                            '"\n                                fill="'
                                        )
                                        .concat(
                                            f,
                                            '"\n                                cx="'
                                        )
                                        .concat(
                                            m + 0.5,
                                            '"\n                                cy="'
                                        )
                                        .concat(
                                            _ + 0.5,
                                            '"\n                            />'
                                        )
                                );
                        }
                        if (3 === c) {
                            if ((m > _) ^ (m + _ < e)) {
                                if (
                                    0 === _ ||
                                    (_ > 0 &&
                                        (!t.isDark(m, _ - 1) || !v[m][_ - 1]))
                                ) {
                                    for (var M = 0, B = !0; B && _ + M < e; )
                                        t.isDark(m, _ + M) &&
                                        v[m][_ + M] &&
                                        M - 0 <= 3
                                            ? M++
                                            : (B = !1);
                                    if (M - 0 > 1) {
                                        for (var L = 0; L < M; L++)
                                            (v[m][_ + L] = !1),
                                                (d[m][_ + L] = !1);
                                        o.push(
                                            '<line\n                                        opacity="'
                                                .concat(
                                                    i,
                                                    '"\n                                        x1="'
                                                )
                                                .concat(
                                                    m + 0.5,
                                                    '"\n                                        y1="'
                                                )
                                                .concat(
                                                    _ + 0.5,
                                                    '"\n                                        x2="'
                                                )
                                                .concat(
                                                    m + 0.5,
                                                    '"\n                                        y2="'
                                                )
                                                .concat(
                                                    _ + M - 0 - 1 + 0.5,
                                                    '"\n                                        stroke-width="'
                                                )
                                                .concat(
                                                    a,
                                                    '"\n                                        stroke="'
                                                )
                                                .concat(
                                                    f,
                                                    '"\n                                        stroke-linecap="round"\n                                        key="'
                                                )
                                                .concat(
                                                    s++,
                                                    '"\n                                    />'
                                                )
                                        );
                                    }
                                }
                            } else if (
                                0 === m ||
                                (m > 0 && (!t.isDark(m - 1, _) || !v[m - 1][_]))
                            ) {
                                for (var I = 0, R = !0; R && m + I < e; )
                                    t.isDark(m + I, _) &&
                                    v[m + I][_] &&
                                    I - 0 <= 3
                                        ? I++
                                        : (R = !1);
                                if (I - 0 > 1) {
                                    for (var z = 0; z < I; z++)
                                        (v[m + z][_] = !1), (d[m + z][_] = !1);
                                    o.push(
                                        '<line\n                                        opacity="'
                                            .concat(
                                                i,
                                                '"\n                                        x1="'
                                            )
                                            .concat(
                                                m + 0.5,
                                                '"\n                                        y1="'
                                            )
                                            .concat(
                                                _ + 0.5,
                                                '"\n                                        x2="'
                                            )
                                            .concat(
                                                m + I - 0 - 0.5,
                                                '"\n                                        y2="'
                                            )
                                            .concat(
                                                _ + 0.5,
                                                '"\n                                        stroke-width="'
                                            )
                                            .concat(
                                                a,
                                                '"\n                                        stroke="'
                                            )
                                            .concat(
                                                f,
                                                '"\n                                        stroke-linecap="round"\n                                        key="'
                                            )
                                            .concat(
                                                s++,
                                                '"\n                                    />'
                                            )
                                    );
                                }
                            }
                            d[m][_] &&
                                o.push(
                                    '<circle\n                                opacity="'
                                        .concat(
                                            i,
                                            '"\n                                r="'
                                        )
                                        .concat(
                                            a / 2,
                                            '"\n                                key="'
                                        )
                                        .concat(
                                            s++,
                                            '"\n                                fill="'
                                        )
                                        .concat(
                                            f,
                                            '"\n                                cx="'
                                        )
                                        .concat(
                                            m + 0.5,
                                            '"\n                                cy="'
                                        )
                                        .concat(
                                            _ + 0.5,
                                            '"\n                            />'
                                        )
                                );
                        }
                        if (4 === c) {
                            if (
                                0 === _ ||
                                0 === m ||
                                (_ > 0 &&
                                    m > 0 &&
                                    (!t.isDark(m - 1, _ - 1) ||
                                        !v[m - 1][_ - 1]))
                            ) {
                                for (
                                    var $ = 0, N = !0;
                                    N && _ + $ < e && m + $ < e;

                                )
                                    t.isDark(m + $, _ + $) && v[m + $][_ + $]
                                        ? $++
                                        : (N = !1);
                                if ($ - 0 > 1) {
                                    for (var q = 0; q < $; q++)
                                        (v[m + q][_ + q] = !1),
                                            (d[m + q][_ + q] = !1);
                                    o.push(
                                        '<line\n                                    opacity="'
                                            .concat(
                                                i,
                                                '"\n                                    x1="'
                                            )
                                            .concat(
                                                m + 0.5,
                                                '"\n                                    y1="'
                                            )
                                            .concat(
                                                _ + 0.5,
                                                '"\n                                    x2="'
                                            )
                                            .concat(
                                                m + $ - 0 - 1 + 0.5,
                                                '"\n                                    y2="'
                                            )
                                            .concat(
                                                _ + $ - 0 - 1 + 0.5,
                                                '"\n                                    stroke-width="'
                                            )
                                            .concat(
                                                a,
                                                '"\n                                    stroke="'
                                            )
                                            .concat(
                                                f,
                                                '"\n                                    stroke-linecap="round"\n                                    key="'
                                            )
                                            .concat(
                                                s++,
                                                '"\n                                />'
                                            )
                                    );
                                }
                            }
                            d[m][_] &&
                                o.push(
                                    '<circle\n                                opacity="'
                                        .concat(
                                            i,
                                            '"\n                                r="'
                                        )
                                        .concat(
                                            a / 2,
                                            '"\n                                key="'
                                        )
                                        .concat(
                                            s++,
                                            '"\n                                fill="'
                                        )
                                        .concat(
                                            f,
                                            '"\n                                cx="'
                                        )
                                        .concat(
                                            m + 0.5,
                                            '"\n                                cy="'
                                        )
                                        .concat(
                                            _ + 0.5,
                                            '"\n                            />'
                                        )
                                );
                        }
                        if (5 === c) {
                            if (
                                0 === m ||
                                _ === e - 1 ||
                                (m > 0 &&
                                    _ < e - 1 &&
                                    (!t.isDark(m - 1, _ + 1) ||
                                        !v[m - 1][_ + 1]))
                            ) {
                                for (
                                    var U = 0, V = !0;
                                    V && m + U < e && _ - U >= 0;

                                )
                                    t.isDark(m + U, _ - U) && d[m + U][_ - U]
                                        ? U++
                                        : (V = !1);
                                if (U - 0 > 1) {
                                    for (var G = 0; G < U; G++)
                                        (v[m + G][_ - G] = !1),
                                            (d[m + G][_ - G] = !1);
                                    o.push(
                                        '<line\n                                    opacity="'
                                            .concat(
                                                i,
                                                '"\n                                    x1="'
                                            )
                                            .concat(
                                                m + 0.5,
                                                '"\n                                    y1="'
                                            )
                                            .concat(
                                                _ + 0.5,
                                                '"\n                                    x2="'
                                            )
                                            .concat(
                                                m + (U - 0 - 1) + 0.5,
                                                '"\n                                    y2="'
                                            )
                                            .concat(
                                                _ - (U - 0 - 1) + 0.5,
                                                '"\n                                    stroke-width="'
                                            )
                                            .concat(
                                                a,
                                                '"\n                                    stroke="'
                                            )
                                            .concat(
                                                f,
                                                '"\n                                    stroke-linecap="round"\n                                    key="'
                                            )
                                            .concat(
                                                s++,
                                                '"\n                                />'
                                            )
                                    );
                                }
                            }
                            d[m][_] &&
                                o.push(
                                    '<circle\n                                opacity="'
                                        .concat(
                                            i,
                                            '"\n                                r="'
                                        )
                                        .concat(
                                            a / 2,
                                            '"\n                                key="'
                                        )
                                        .concat(
                                            s++,
                                            '"\n                                fill="'
                                        )
                                        .concat(
                                            f,
                                            '"\n                                cx="'
                                        )
                                        .concat(
                                            m + 0.5,
                                            '"\n                                cy="'
                                        )
                                        .concat(
                                            _ + 0.5,
                                            '"\n                            />'
                                        )
                                );
                        }
                        if (6 === c) {
                            if (
                                0 === m ||
                                _ === e - 1 ||
                                (m > 0 &&
                                    _ < e - 1 &&
                                    (!t.isDark(m - 1, _ + 1) ||
                                        !v[m - 1][_ + 1]))
                            ) {
                                for (
                                    var H = 0, K = !0;
                                    K && m + H < e && _ - H >= 0;

                                )
                                    t.isDark(m + H, _ - H) && v[m + H][_ - H]
                                        ? H++
                                        : (K = !1);
                                if (H - 0 > 1) {
                                    for (var Y = 0; Y < H; Y++)
                                        v[m + Y][_ - Y] = !1;
                                    o.push(
                                        '<line\n                                    opacity="'
                                            .concat(
                                                i,
                                                '"\n                                    x1="'
                                            )
                                            .concat(
                                                m + 0.5,
                                                '"\n                                    y1="'
                                            )
                                            .concat(
                                                _ + 0.5,
                                                '"\n                                    x2="'
                                            )
                                            .concat(
                                                m + (H - 0 - 1) + 0.5,
                                                '"\n                                    y2="'
                                            )
                                            .concat(
                                                _ - (H - 0 - 1) + 0.5,
                                                '"\n                                    stroke-width="'
                                            )
                                            .concat(
                                                (a / 2) * oa(0.3, 1),
                                                '"\n                                    stroke="'
                                            )
                                            .concat(
                                                f,
                                                '"\n                                    stroke-linecap="round"\n                                    key="'
                                            )
                                            .concat(
                                                s++,
                                                '"\n                                />'
                                            )
                                    );
                                }
                            }
                            if (
                                0 === _ ||
                                0 === m ||
                                (_ > 0 &&
                                    m > 0 &&
                                    (!t.isDark(m - 1, _ - 1) ||
                                        !d[m - 1][_ - 1]))
                            ) {
                                for (
                                    var Z = 0, J = !0;
                                    J && _ + Z < e && m + Z < e;

                                )
                                    t.isDark(m + Z, _ + Z) && d[m + Z][_ + Z]
                                        ? Z++
                                        : (J = !1);
                                if (Z - 0 > 1) {
                                    for (var W = 0; W < Z; W++)
                                        d[m + W][_ + W] = !1;
                                    o.push(
                                        '<line\n                                    opacity="'
                                            .concat(
                                                i,
                                                '"\n                                    x1="'
                                            )
                                            .concat(
                                                m + 0.5,
                                                '"\n                                    y1="'
                                            )
                                            .concat(
                                                _ + 0.5,
                                                '"\n                                    x2="'
                                            )
                                            .concat(
                                                m + Z - 0 - 1 + 0.5,
                                                '"\n                                    y2="'
                                            )
                                            .concat(
                                                _ + Z - 0 - 1 + 0.5,
                                                '"\n                                    stroke-width="'
                                            )
                                            .concat(
                                                (a / 2) * oa(0.3, 1),
                                                '"\n                                    stroke="'
                                            )
                                            .concat(
                                                f,
                                                '"\n                                    stroke-linecap="round"\n                                    key="'
                                            )
                                            .concat(
                                                s++,
                                                '"\n                                />'
                                            )
                                    );
                                }
                            }
                            o.push(
                                '<circle\n                            opacity="'
                                    .concat(
                                        i,
                                        '"\n                            r="'
                                    )
                                    .concat(
                                        0.5 * oa(0.33, 0.9),
                                        '"\n                            key="'
                                    )
                                    .concat(
                                        s++,
                                        '"\n                            fill="'
                                    )
                                    .concat(
                                        f,
                                        '"\n                            cx="'
                                    )
                                    .concat(
                                        m + 0.5,
                                        '"\n                            cy="'
                                    )
                                    .concat(
                                        _ + 0.5,
                                        '"\n                        />'
                                    )
                            );
                        }
                    }
        return o;
    }
    var Ba = kc().shape({
            type: fo().oneOf([0, 1, 2, 3, 4, 5, 6]).default(2),
            size: Co().default(50),
            opacity: Co().default(100),
            posType: fo().oneOf([0, 1, 2, 3]).default(3),
            otherColor: jo().default('#000000'),
            posColor: jo().default('#000000'),
        }),
        La = kc().shape({
            type: fo().oneOf([0, 1, 2, 3, 4, 5, 6]).default(6),
            size: Co().default(50),
            opacity: Co().default(100),
            posType: fo().oneOf([0, 1, 2, 3]).default(0),
            otherColor: jo().default('#000000'),
            posColor: jo().default('#000000'),
        }),
        Ia = function (t, n) {
            try {
                n = Ba.validateSync(n);
            } catch (t) {
                return console.error(t), '';
            }
            var e = [
                'type',
                'size',
                'opacity',
                'posType',
                'otherColor',
                'posColor',
            ].map(function (t) {
                return n[t];
            });
            return Fc({ listPoints: Ma })({ qrcode: t, params: e });
        },
        Ra = function (t, n) {
            try {
                n = La.validateSync(n);
            } catch (t) {
                return console.error(t), '';
            }
            var e = [
                'type',
                'size',
                'opacity',
                'posType',
                'otherColor',
                'posColor',
            ].map(function (t) {
                return n[t];
            });
            return Fc({ listPoints: Ma })({ qrcode: t, params: e });
        },
        za = {
            rendererRect: ua,
            rendererRound: sa,
            rendererRandRound: fa,
            rendererDSJ: pa,
            rendererResImage: Da,
            rendererImage: wa,
            renderer25D: _a,
            rendererRandRect: va,
            rendererCircle: Ea,
            rendererFuncA: Pa,
            rendererFuncB: Ta,
            rendererLine: Ia,
            rendererLine2: Ra,
            encodeData: ea,
        };
    (t.default = za),
        (t.encodeData = ea),
        (t.renderer25D = _a),
        (t.rendererCircle = Ea),
        (t.rendererDSJ = pa),
        (t.rendererFuncA = Pa),
        (t.rendererFuncB = Ta),
        (t.rendererImage = wa),
        (t.rendererLine = Ia),
        (t.rendererLine2 = Ra),
        (t.rendererRandRect = va),
        (t.rendererRandRound = fa),
        (t.rendererRect = ua),
        (t.rendererResImage = Da),
        (t.rendererRound = sa),
        Object.defineProperty(t, '__esModule', { value: !0 });
});
